{"version":3,"sources":["components/Header.js","helpers/jwt_decoder.js","store/initialState.js","store/reducers/promiseReducer.js","store/actions/index.js","store/reducers/index.js","store/reducers/login.js","store/reducers/redirectedFrom.js","store/reducers/passRequestData.js","store/store.js","helpers/privateRoute.js","helpers/checkDoPathExists.js","store/mapStateToProps.js","store/actionCreators/actionPromise.js","gql/index.js","store/actionCreators/promiseActions.js/promiseSearch.js","store/actionCreators/promiseActions.js/promiseParamsForSearch.js","store/actionCreators/promiseActions.js/promiseCreateAnnouncement.js","store/actionCreators/promiseActions.js/actionPromiseFindFavourite.js","store/actionCreators/promiseActions.js/actionPromiseCreateLike.js","store/actionCreators/promiseActions.js/actionPromiseFindOneAnnouncement.js","store/actionCreators/promiseActions.js/actionPromiseFindOwnAnnouncements.js","store/actionCreators/promiseActions.js/actionPromiseGetUserInfo.js","store/actionCreators/promiseActions.js/actionPromiseUpdateUserNameAndCity.js","store/actionCreators/promiseActions.js/actionPromiseUpdateUserLoginAndPassword.js","store/actionCreators/promiseActions.js/actionPromiseAddPhoneNumber.js","store/actionCreators/promiseActions.js/actionPromiseGetUserPhoto.js","store/actionCreators/promiseActions.js/actionPromiseFindAnnouncementForEdit.js","store/actionCreators/promiseActions.js/promiseActionRemoveAnnouncement.js","store/actionCreators/promiseActions.js/actionPromiseEditAnnouncement.js","store/actionCreators/promiseActions.js/actionPromiseRemoveUser.js","store/actionCreators/promiseActions.js/actionPromiseRemovePhone.js","store/actionCreators/promiseActions.js/actionLoginPromise.js","store/actionCreators/promiseActions.js/actionRegisterPromise.js","store/actionCreators/promiseActions.js/actionPromiseFindAnnouncementPhotos.js","store/actionCreators/promiseActions.js/actionPromiseRemovePhoto.js","store/actionCreators/promiseActions.js/actionPromiseCreatePhotoForAnnouncement.js","store/actionCreators/promiseActions.js/actionPromiseCreateUserPhoto.js","store/actionCreators/promiseActions.js/actionPromiseFindLikes.js","store/actionCreators/promiseActions.js/actionPromiseSetPhotoAsMain.js","store/actionCreators/promiseActions.js/actionPromiseGetFullCategories.js","store/actionCreators/index.js","store/mapDispatchToProps.js","components/wrappers/header_w.js","components/loader.js","components/searchParams.js","components/wrappers/searchParams_w.js","components/select.js","components/wrappers/select_w.js","components/categories.js","components/wrappers/categories_w.js","components/announcement_card.js","components/wrappers/announcement_card_w.js","components/announcements_field.js","components/wrappers/announcements_field_w.js","components/main_page.js","components/wrappers/main_page_w.js","components/registration.js","components/wrappers/registration_w.js","components/photoGallery.js","components/wrappers/photo_gallery_w.js","components/settings.js","components/wrappers/settings_w.js","components/ownAnnouncements.js","components/wrappers/own_announcements_w.js","components/profile.js","components/wrappers/profile_w.js","components/favourite.js","components/wrappers/favourite_w.js","components/not_found.js","components/logIn.js","components/wrappers/login_w.js","components/slider.js","components/createAnnouncement.js","components/wrappers/createAnnouncement_w.js","components/fullAnnouncementDesc.js","components/wrappers/full_announcement_desc_w.js","components/editAnnouncement.js","components/wrappers/edit_announcement_w.js","components/announcementActionResult.js","components/willBeDone.js","components/Main.js","components/wrappers/main_w.js","components/Footer.js","components/wrappers/footer_w.js","components/body.js","App.js","serviceWorker.js","index.js"],"names":["Header","props","linkAdressHandler","e","a","onRedirect","target","href","slice","newAnnouncementHandler","history","push","onClickLogoHandler","onSearch","limit","offset","categoryId","subCategoryId","priceFrom","priceTo","currencyId","sort","hasDelivery","hasPhoto","findEverywhere","requestText","areaName","areaId","cityId","state","className","to","onClick","this","style","width","display","src","alt","type","data-toggle","data-target","aria-controls","aria-expanded","aria-label","id","key","bind","React","Component","decode","require","initialState","promiseReducer","name","status","payload","error","reducers","combineReducers","login","action","pending","localStorage","removeItem","setItem","jwt_token","userData","redirectedFromLink","redirectedFrom","link","passRequestData","requestData","data","store","createStore","composeWithDevTools","applyMiddleware","thunk","getState","getItem","subscribe","console","log","PrivateRoute","component","rest","render","pathname","from","location","d","obj","path","split","shift","i","length","mapStateToProps","token","logInErr","user","animation","previousURL","registrationResponse","badResponse","avatar","userId","userName","updatedUserPhoto","areas","announcements","count","favourite","categories","currencies","report","responseCreateLike","responseRemoveAnnouncement","announcement","phones","email","area","city","photo","uCity","uArea","userInfo","phone","addPhoneNumbers","removePhoneNumbers","responseRemoveUser","cityName","deletedPhoto","addPhoto","setMainPhoto","responseOnUpdateUserNameAndLocation","responseOnPassAndEmailChange","responseOnPassAndEmailError","responseOnEdit","updatedPhoto","isChangeInPhoto","newPhoto","fullCategories","actionPromise","promise","actionResolved","dispatch","getGQL","headers","query","variables","fetch","method","body","JSON","stringify","then","res","json","actionPromiseSearch","actionPromiseParamsForAnnouncements","actionPromiseCreateAnnouncement","auth","actionPromiseFindFavourite","actionPromiseCreateLike","announcementId","actionPromiseFindOneAnnouncement","actionPromiseFindOwnAnnouncements","actionPromiseGetUserInfo","actionPromiseUpdateUserNameAndCity","actionPromiseUpdateUserLoginAndPassword","actionPromiseAddPhoneNumber","actionPromiseGetUserPhoto","actionPromiseFindAnnouncementForEdit","actionPromiseRemoveAnnouncement","actionPromiseEditAnnouncement","actionPromiseRemoveUser","actionPromiseRemovePhone","actionLoginPromise","userEmail","userPassword","actionRegisterPromise","actionPromiseFindAnnouncementPhotos","actionPromiseRemovePhoto","actionPromiseCreatePhotoForAnnouncement","actionPromiseCreateUserPhoto","actionPromiseFindLikes","actionPromiseSetPhotoAsMain","actionPromiseGetFullCategories","actionLogin","actionToken","logInAuth","errors","messages","actionRegister","window","replace","err","message","actionSearch","actionPassRequestData","actionGetSearchParams","actionCreateAnnouncement","actionFindFavourite","actionCreateLike","actionFindOneAnnouncement","actionFindOwnAnnouncements","actionGetUserInfo","actionUpdateUserNameAndCity","actionUpdateUserLoginAndPassword","actionAddPhoneNumber","actionGetUserPhoto","actionFindAnnouncementForEdit","actionRemoveAnnouncement","actionEditAnnouncement","actionRemoveUser","result","actionLogout","actionRemovePhone","actionFindAnnouncementPhotos","actionRemovePhoto","actionCreatePhotoForAnnouncement","actionCreateUserPhoto","actionFindLikes","actionSetMainPhoto","actionGetFullCategories","wasRedirectedFrom","mapDispatchToProps","onLogin","bindActionCreators","onGetUserInfo","onLogOut","onRegister","onAnnouncementParams","onSearchLikes","onCreateAnnouncement","onSearchFavourite","onCreateLike","onRemoveAnnouncement","onFindOneAnnouncement","onFindOwnAnnouncements","onUpdateUserNameAndCity","onUpdateUserLoginAndPassword","onAddPhoneNumber","onGetAvatarPhoto","onAddAvatar","onRemoveUser","onRemovePhone","onAnnouncementForEdit","onEditAnnouncement","onFindAnnouncementPhotos","onRemovePhoto","onAddPhoto","onSetMainPhoto","onGetFullCategories","HEADER_W","connect","justifyContent","SearchParams","selectCategoryHandler","value","setState","subCategories","updateCategory","forEach","subcategories","selectSubCategoryHandler","updateSubCategory","inputPriceMinHandler","updatePriceFrom","inputPriceMaxHandler","updatePriceTo","selectCurrencyHandler","updateCurrency","selectSortBy","updateSort","checkHasPhotoHandler","updateHasPhoto","checkHasDeliveryHandler","updateHasDelivery","checkFindEverywhereHandler","updateFindEverywhere","htmlFor","onChange","map","categoryName","subCategoryName","min","max","placeholder","currencySymbol","checked","SearchParams_W","Select","requestTextHandler","requestAreaHandler","cities","element","requestCityHandler","searchRequestHandler","searchDetailsDisplay","areCategoriesViewable","roundToTwo","v","isLoaded","prevProps","num","Math","floor","aria-describedby","SELECT_W","Categories","searchByCategoryHandler","categoryImage","CATEGORIES_W","AnnouncementCard","createLikeHandler","identifier","isLike","removeAnnouncementHandler","isDisabled","fullAnnouncementHandler","isRemoved","userLikes","indexOf","isMain","photoLink","height","announcementHeader","announcementPrice","currency","Date","createdAt","getDate","getMonth","getFullYear","OverlayTrigger","placement","delay","show","hide","overlay","Tooltip","ANNOUNCEMENT_CARD_W","AnnouncementsField","componentDidMount","createPaginationItems","buttons","prevState","arr","ceil","number","Pagination","Item","paginationButtonHandler","ANNOUNCEMENTS_FIELD_W","Main_page","categoriesDisplayHandler","MAIN_PAGE_W","Registration","emailHandler","validateEmail","emailInfo","passwordHandler","passInputSucess","passwordInfo","toLowerCase","match","validatePassword","onRegisterHandler","userPasswordRepeat","errMsg","catch","passwordRepeatHandler","passCopyInfo","passCompareSucess","passInfo","test","String","pass","lowerPass","required","autoFocus","REGISTRATON_W","PhotoGallery","removePhotoHandler","setUpMainPhoto","PHOTO_GALLERY_W","Settings","editNameHandler","toUpperCase","warningName","editAreaHandler","editCityHandler","buttonContactDataHandler","warningUpdateUserNameAndLocation","editEmailHandler","editPasswordHandler","buttonLoginAndEmailHandler","wrongPassOrEmail","isDataChangeSuccess","editPhoneHandler","phoneNumber","warningPhone","buttonRemovePhoneHandler","buttonEditPhoneHandler","inputPhotoHandler","files","text","photoName","buttonRemoveProfileHandler","filter","aria-labelledby","data-parent","defaultValue","Alert","variant","onClose","dismissible","Heading","SETTINGS_W","OwnAnnouncements","OWN_ANNOUNCEMENTS_W","Profile","logOutHandler","onClickPointHandler","title","innerText","exact","PROFILE_W","Favourite","FAVOURITE_W","NotFound","LogIn","onLoginHandler","loginWarning","LogIn_W","Slider","images","Carousel","maxWidth","index","CreateAnnouncement","requestHeaderHandler","header","headerInfo","headerWarning","inputDescriptionHandler","description","descriptionInfo","descriptionWarning","inputPriceHandler","price","priceInfo","priceWarning","sendAnnouncementHandler","announcementText","isVisible","announcementRejectionCause","redirect","ireaId","rows","CREATE_ANNOUNCEMENT_W","FullAnnouncement","params","FULL_ANNOUNCEMENT_W","EditAnnouncement","category","subcategory","EDIT_ANNOUNCEMENT_W","AnnouncementActionResult","WillBeDone","Main","MAIN_W","Footer","FOOTER_W","Body","createBrowserHistory","App","Boolean","hostname","ReactDOM","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.bc64c511.chunk.js","sourcesContent":["import React from 'react';\r\nimport { NavLink } from 'react-router-dom'\r\n\r\nclass Header extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n\r\n        }\r\n    }\r\n\r\n    linkAdressHandler = async (e) => {\r\n        await this.props.onRedirect(e.target.href.slice(21));\r\n    }\r\n\r\n    newAnnouncementHandler = () => {\r\n        this.props.history.push('/create_announcement')\r\n        this.props.onRedirect('/create_announcement');\r\n    }\r\n\r\n    onClickLogoHandler = () => {\r\n        this.props.onSearch({\r\n            limit: 16,\r\n            offset: 0,\r\n            categoryId: '',\r\n            subCategoryId: '',\r\n            priceFrom: 0,\r\n            priceTo: 0,\r\n            currencyId: '',\r\n            sort: '',\r\n            hasDelivery: false,\r\n            hasPhoto: false,\r\n            findEverywhere: false,\r\n            requestText: '',\r\n            areaName: '',\r\n            areaId: '',\r\n            cityId: '',\r\n        })\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <header className=\"bg-primary\">\r\n                <div className=\"container\">\r\n                    <div className=\"row\">\r\n                        <div className=\"col\">\r\n                            <nav className=\"navbar navbar-expand-lg navbar-light bg-primary pl-0 pr-0\">\r\n                                <NavLink to=\"/\" onClick={this.onClickLogoHandler} className=\"mx-auto\" style={{ width: \"60px\", display: \"block\" }}>\r\n                                    <img src=\"/images/logo.png\" alt=\"logo\" width=\"100\" />\r\n                                </NavLink>\r\n                                <button className=\"navbar-toggler\" type=\"button\" data-toggle=\"collapse\" data-target=\"#navbarTogglerDemo01\" aria-controls=\"navbarTogglerDemo01\" aria-expanded=\"false\" aria-label=\"Toggle navigation\">\r\n                                    <span className=\"navbar-toggler-icon\"></span>\r\n                                </button>\r\n                                <div className=\"collapse navbar-collapse \" id=\"navbarTogglerDemo01\">\r\n                                    <ul className=\"navbar-nav ml-auto mt-2 mt-lg-0\">\r\n                                        <li className=\"nav-item\">\r\n                                            <NavLink to=\"/favourite\" key=\"favourite\" onClick={this.linkAdressHandler.bind(this)} className=\"nav-link text-danger\" id=\"favourite\" >Избранное<span className=\"sr-only\">(current)</span></NavLink>\r\n                                        </li>\r\n                                        <li className=\"nav-item\">\r\n                                            <NavLink to=\"/profile/own_announcements\" key=\"myProfile\" onClick={this.linkAdressHandler.bind(this)} className=\"nav-link text-light\" id=\"myProfile\" >Мой профиль<span className=\"sr-only\">(current)</span></NavLink>\r\n                                        </li>\r\n                                        <li className=\"nav-item d-flex justify-content-center\">\r\n                                            <button onClick={this.newAnnouncementHandler} className=\"btn btn-primary btn-outline-warning my-2 my-sm-0\">Подать объявление</button>\r\n                                        </li>\r\n                                    </ul>\r\n                                </div>\r\n                            </nav>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </header>\r\n        )\r\n\r\n    }\r\n\r\n}\r\n\r\nexport default Header;","const decode = require('jwt-decode');\r\n\r\nexport default decode;","const initialState = {\r\n\t// jwt_token:null,\r\n\t// userData:null,\r\n\t// pending:false,\r\n\t// redirectedFrom:null,\r\n\t// announcements:null,\r\n\t// \"login\", \"redirectedFromLink\", \"promiseReducer\".\r\n\t\r\n};\r\n\r\nexport default initialState;","import initialState from \"../initialState\";\r\nimport {PROMISE} from \"../actions\"\r\n\r\nfunction promiseReducer(state=initialState,{type, name, status, payload, error}){\r\n    if (type === PROMISE){\r\n        return {\r\n            ...state,\r\n            [name]:{\r\n                status,\r\n                payload,\r\n                error\r\n            }\r\n        }\r\n    }\r\n    return state\r\n}\r\n\r\nexport default promiseReducer;","const LOGIN = 'LOGIN';\r\nconst LOGOUT = 'LOGOUT';\r\nconst LOGIN_PENDING  = \"LOGIN_PENDING\";\r\nconst TOKEN = \"TOKEN\";\r\nconst REDIRECTED_AS_UNREGISTERED = \"REDIRECTED_AS_UNREGISTERED\"\r\nconst PROMISE = \"PROMISE\";\r\nconst PENDING = \"PENDING\";\r\nconst RESOLVED = \"RESOLVED\";\r\nconst REJECTED = \"REJECTED\";\r\nconst PASS_REQUEST_DATA = \"PASS_REQUEST_DATA\"\r\n\r\nexport {\r\n    LOGIN,\r\n    LOGOUT,\r\n    LOGIN_PENDING,\r\n    TOKEN,\r\n    REDIRECTED_AS_UNREGISTERED,\r\n    PROMISE,\r\n    PENDING,\r\n    RESOLVED,\r\n    REJECTED,\r\n    PASS_REQUEST_DATA,\r\n\r\n}","import { combineReducers } from 'redux';\r\nimport login from './login';\r\nimport redirectedFromLink from './redirectedFrom'; \r\nimport promiseReducer from './promiseReducer';\r\nimport passRequestData from './passRequestData'\r\n\r\nconst reducers = combineReducers({\r\n    login,\r\n    redirectedFromLink,\r\n    promiseReducer,\r\n    passRequestData,\r\n});\r\n\r\nexport default reducers;","import initialState from \"../initialState\";\r\nimport {LOGIN,LOGOUT,TOKEN} from '../actions';\r\nimport {decode} from '../../helpers';\r\n// import helpers from '../../helpers';\r\n// const {decode} = helpers;\r\n\r\nexport default function logIn(state =initialState, action){\r\n    if(action.type === LOGIN){\r\n      return  {\r\n        pending: true\r\n      }\r\n    }else if(action.type === LOGOUT){\r\n        localStorage.removeItem(\"jwt_token\")\r\n        return {}\r\n    }else if(action.type ===TOKEN){\r\n            localStorage.setItem(\"jwt_token\",action.jwt_token) \r\n        return {\r\n            pending: false,\r\n            jwt_token: action.jwt_token,\r\n            userData: decode(action.jwt_token)\r\n        }\r\n    }else{\r\n        return state\r\n    }\r\n}\r\n\r\n\r\n\r\n","import initialState from \"../initialState\";\r\nimport {REDIRECTED_AS_UNREGISTERED} from '../actions';\r\n\r\nexport default function redirectedFromLink(state =initialState, action){\r\n    if(action.type === REDIRECTED_AS_UNREGISTERED){\r\n      return  {\r\n        redirectedFrom: action.link\r\n      }\r\n    }else{\r\n        return state\r\n    }\r\n}","import initialState from \"../initialState\";\r\nimport {PASS_REQUEST_DATA} from '../actions';\r\n\r\nexport default function passRequestData(state =initialState, action){\r\n    if(action.type === PASS_REQUEST_DATA){\r\n      return  {\r\n        requestData: action.data\r\n      }\r\n    }else{\r\n        return state\r\n    }\r\n}","import { createStore,applyMiddleware } from 'redux';\r\nimport reducers from './reducers';\r\nimport initialState from './initialState';\r\nimport thunk from 'redux-thunk';\r\nimport {decode} from '../helpers';\r\nimport { composeWithDevTools } from 'redux-devtools-extension';\r\nconst store = createStore(reducers, initialState,composeWithDevTools(applyMiddleware(thunk)));\r\n\r\n\r\nstore.getState().login.jwt_token = localStorage.getItem(\"jwt_token\")\r\nif(store.getState().login.jwt_token){\r\n    \r\n    store.getState().login.userData = decode(store.getState().login.jwt_token)\r\n}\r\n\r\nstore.subscribe(()=>console.log(\"STORE \",store.getState()))\r\n\r\nexport default store;","import React from 'react'\r\nimport { Route,Redirect} from 'react-router-dom'\r\nimport store from '../store/store'\r\n\r\nconst PrivateRoute = ({ component: Component, ...rest }) => (\r\n    <Route {...rest} render={(props) => (\r\n        store.getState().login.jwt_token\r\n        ? <Component {...props} />\r\n        : <Redirect to={{\r\n            pathname: '/login',\r\n            state: { from: props.location }\r\n          }} />\r\n    )} />\r\n  )\r\n\r\n  export default PrivateRoute;","export default function d([skip,path],obj){\r\n    path = path.split('.')\r\n    path[0] || path.shift()\r\n    for (let i of path){\r\n        if(obj[i]){\r\n            if(path[path.length-1]===i){\r\n                return obj[i]\r\n            }\r\n            obj=obj[i]\r\n        }else{\r\n            return null\r\n        }\r\n    }\r\n}\r\n\r\n// export default function d([skip,path],obj){\r\n//         path = path.split('.')\r\n//         path[0] || path.shift()\r\n//         for (let i of path){\r\n//             if(obj[i]){\r\n//                 console.log(i,\" exists\", 'path = ',obj[i],path[path.length-1])\r\n//                 if(path[path.length-1]===i){\r\n//                     console.log(\"все в порядке\")\r\n//                     return obj[i]\r\n//                 }\r\n//                 obj=obj[i]\r\n//             }else{\r\n//                 console.log(i, \" где-то чего-то нет \",obj[i])\r\n//                 return null\r\n//             }\r\n//         }\r\n//     }\r\n","import { d } from '../helpers'\r\n\r\nfunction mapStateToProps(component) {\r\n\tswitch (component) {\r\n\t\tcase \"LogIn\": \r\n\t\t\treturn function (state) {\r\n\t\t\t\treturn {\r\n\t\t\t\t\ttoken: d`${state}.login.jwt_token`,\r\n\t\t\t\t\tlogInErr: d`${state}.promiseReducer.login.payload.errors`,\r\n\t\t\t\t\tuser: d`${state}.login.userData`,\r\n\t\t\t\t\tanimation: `${state}.login.pending`,\r\n\t\t\t\t\tpreviousURL: d`${state}.redirectedFromLink.redirectedFrom`,\r\n\t\t\t}\r\n\t\t}\r\n\t\tcase \"Registration\": \r\n\t\t\treturn function (state){\r\n\t\t\t\treturn{\r\n\t\t\t\t\tregistrationResponse:d`${state}.login.jwt_token`,\r\n\t\t\t\t\tbadResponse:d`${state}.promiseReducer.register.payload.errors`,\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\tcase \"Profile\": \r\n\t\t\treturn function (state) {\r\n\t\t\t\treturn {                                                              \r\n\t\t\t\t\tavatar: d`${state}.promiseReducer.getUserInfo.payload.data.getUser.photos`,\r\n\t\t\t\t\tuserId: d`${state}.login.userData.id`,\r\n\t\t\t\t\ttoken: d`${state}.login.jwt_token`,\r\n\t\t\t\t\tuser: d`${state}.promiseReducer.getUserInfo.payload.data.getUser`,\r\n\t\t\t\t\tuserName: d`${state}.promiseReducer.updateUserNameAndCity.payload.data.updateUser.userName`,\r\n\t\t\t\t\tupdatedUserPhoto: d`${state}.promiseReducer.getUserPhoto.payload.data.getUserPhotos`,\t\t\t\t\t\r\n\t\t\t}\r\n\t\t};\r\n\t\tcase \"Main\": \r\n\t\t\treturn function (state) {\r\n\t\t\t\treturn {\r\n\t\t\t\t\ttoken: d`${state}.login.jwt_token`,\r\n\t\t\t\t\tuser: d`${state}.login.userData`,\r\n\t\t\t\t\tanimation: `${state}.login.pending`,\r\n\t\t\t\t\tpreviousURL: d`${state}.redirectedFromLink.redirectedFrom`,\r\n\t\t\t\t};\r\n\t\t};\r\n\t\tcase \"Header\": \r\n\t\t\treturn function (state) {\r\n\t\t\t\treturn {\r\n\t\t\t\t\tlink: d`${state}.redirectedFromLink.redirectedFrom`,\r\n\t\t\t}\r\n\t\t};\r\n\r\n\t\tcase \"Select\": \r\n\t\t\treturn function (state) {\r\n\t\t\t\treturn {\r\n\t\t\t\t\tareas: d`${state}.promiseReducer.params_for_announcements.payload.data.getAreas`,\r\n\t\t\t\t\trequestData:d`${state}.passRequestData.requestData`,\r\n\t\t\t}\r\n\t\t};\r\n\r\n\t\tcase \"AnnouncementsField\": \r\n\t\t\treturn function (state) {\r\n\t\t\t\treturn {\r\n\t\t\t\t\trequestData:d`${state}.passRequestData.requestData`,\r\n\t\t\t\t\tannouncements: d`${state}.promiseReducer.searchRequest.payload.data.searchAnnouncements.rows`,\r\n\t\t\t\t\tcount: d`${state}.promiseReducer.searchRequest.payload.data.searchAnnouncements.count`,\r\n\t\t\t\t\tuserId: d`${state}.login.userData.id`,\r\n\t\t\t\t\ttoken: d`${state}.login.jwt_token`,\r\n\t\t\t\t\tfavourite: d`${state}.promiseReducer.getLikes.payload.data.getUser.favourite`\t\t\t\t\r\n\t\t\t}\r\n\t\t};\r\n\r\n\t\tcase \"CreateAnnouncement\": \r\n\t\t\treturn function (state) {\r\n\t\t\t\treturn {\r\n\t\t\t\t\tareas: d`${state}.promiseReducer.params_for_announcements.payload.data.getAreas`,\r\n\t\t\t\t\tcategories: d`${state}.promiseReducer.params_for_announcements.payload.data.getCategories`,\r\n\t\t\t\t\tcurrencies: d`${state}.promiseReducer.params_for_announcements.payload.data.getCurrencies`,\r\n\t\t\t\t\tdata: d`${state}.promiseReducer.params_for_announcements.payload.data`,\r\n\t\t\t\t\tuserId: d`${state}.login.userData.id`,\r\n\t\t\t\t\ttoken: d`${state}.login.jwt_token`,\r\n\t\t\t\t\treport: d`${state}.promiseReducer.createAnnouncement.payload.data.createAnnouncement.id`,\r\n\t\t\t}\r\n\t\t};\r\n\t\tcase \"Favourite\": \r\n\t\t\treturn function (state) {\r\n\t\t\t\treturn {\r\n\t\t\t\t\tuserId: d`${state}.login.userData.id`,\r\n\t\t\t\t\ttoken: d`${state}.login.jwt_token`,\r\n\t\t\t\t\tannouncements: d`${state}.promiseReducer.findFavourite.payload.data.getUser.favourite`,\r\n\t\t\t\t\tresponseCreateLike: d`${state}.promiseReducer.createLike.payload.data.createLike.id`,\r\n\t\t\t}\r\n\t\t};\r\n\r\n\t\tcase \"SearchParams\": \r\n\t\t\treturn function (state) {\r\n\t\t\t\treturn {\r\n\t\t\t\t\tcategories: d`${state}.promiseReducer.params_for_announcements.payload.data.getCategories`,\r\n\t\t\t\t\tcurrencies: d`${state}.promiseReducer.params_for_announcements.payload.data.getCurrencies`,\r\n\t\t\t\t\tdata: d`${state}.promiseReducer.params_for_announcements.payload.data`,\r\n\t\t\t}\r\n\t\t};\r\n\r\n\t\tcase \"AnnouncementCard\": \r\n\t\t\treturn function (state) {\r\n\t\t\t\treturn {\r\n\t\t\t\t\ttoken: d`${state}.login.jwt_token`,\r\n\t\t\t\t\tresponseCreateLike: d`${state}.promiseReducer.createLike.payload.data.createLike.id`,\r\n\t\t\t\t\tuserId: d`${state}.login.userData.id`,\r\n\t\t\t\t\tresponseRemoveAnnouncement: d`${state}.promiseReducer.removeAnnouncement.payload.data.editAnnouncement.id`,\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\tcase \"FullAnnouncement\": \r\n\t\t\treturn function (state) {\r\n\t\t\t\treturn {\r\n\t\t\t\t\tuserId: d`${state}.login.userData.id`,\r\n\t\t\t\t\tannouncement: d`${state}.promiseReducer.findOneAnnouncement.payload.data.getAnnouncement`,\r\n\t\t\t\t\tuserName: d`${state}.promiseReducer.findOneAnnouncement.payload.data.getAnnouncement.user.userName`,\r\n\t\t\t\t\tphones: d`${state}.promiseReducer.findOneAnnouncement.payload.data.getAnnouncement.user.phones`,\r\n\t\t\t\t\temail: d`${state}.promiseReducer.findOneAnnouncement.payload.data.getAnnouncement.user.userEmail`,\r\n\t\t\t\t\tavatar: d`${state}.promiseReducer.findOneAnnouncement.payload.data.getAnnouncement.user.photos`,\r\n\t\t\t\t\tarea: d`${state}.promiseReducer.findOneAnnouncement.payload.data.getAnnouncement.area.areaName`,\r\n\t\t\t\t\tcity: d`${state}.promiseReducer.findOneAnnouncement.payload.data.getAnnouncement.city.cityName`,\r\n\t\t\t\t\tphoto: d`${state}.promiseReducer.findOneAnnouncement.payload.data.getAnnouncement.photo`,\r\n\t\t\t\t\tuCity: d`${state}.promiseReducer.findOneAnnouncement.payload.data.getAnnouncement.user.city.cityName`,\r\n\t\t\t\t\tuArea: d`${state}.promiseReducer.findOneAnnouncement.payload.data.getAnnouncement.user.area.areaName`,\r\n\t\t\t}\r\n\t\t};\r\n\r\n\t\tcase \"OwnAnnouncements\" :\r\n\t\t\treturn function(state){\r\n\t\t\t\treturn {\r\n\t\t\t\t\tuserId: d`${state}.login.userData.id`,\r\n\t\t\t\t\ttoken: d`${state}.login.jwt_token`,\r\n\t\t\t\t\tannouncements: d`${state}promiseReducer.findOwn.payload.data.getUser.announcements`,\r\n\t\t\t\t\tfavourite: d`${state}.promiseReducer.getLikes.payload.data.getUser.favourite`,\r\n\t\t\t}\r\n\t\t};\r\n\r\n\t\tcase \"Settings\" :\r\n\t\t\treturn function(state){\r\n\t\t\t\treturn {\r\n\t\t\t\t\tuserId:   d`${state}.login.userData.id`,\r\n\t\t\t\t\ttoken:    d`${state}.login.jwt_token`,\r\n\t\t\t\t\tuserInfo: d`${state}.promiseReducer.getUserInfo.payload.data.getUser`,\r\n\t\t\t\t\tphoto:    d`${state}.promiseReducer.getUserInfo.payload.data.getUser.photos`,\r\n\t\t\t\t\tareas:    d`${state}promiseReducer.getUserInfo.payload.data.getAreas`,\r\n\t\t\t\t\tcityId:   d`${state}.promiseReducer.getUserInfo.payload.data.getUser.city.id`,\r\n\t\t\t\t\tareaId:   d`${state}.promiseReducer.getUserInfo.payload.data.getUser.area.id`,\r\n\t\t\t\t\tphones:   d`${state}.promiseReducer.getUserInfo.payload.data.getUser.phones`,\r\n\t\t\t\t\tphone:    d`${state}.promiseReducer.addPhoneNumber.payload.data.createPhone`,\r\n\t\t\t\t\tavatar:   d`${state}.promiseReducer.addAvatar.payload.data.createPhoto.photoLink`,\r\n\t\t\t\t\taddPhoneNumbers:    d`${state}.promiseReducer.addPhoneNumber.payload.data.createPhone` ,\r\n\t\t\t\t\tremovePhoneNumbers: d`${state}.promiseReducer.removedPhone.payload.data.removePhone`,\r\n\t\t\t\t\tresponseRemoveUser: d`${state}.promiseReducer.removeUser.payload.data.removeUser`,\r\n\t\t\t\t\tuserName:           d`${state}.promiseReducer.getUserInfo.payload.data.getUser.userName`,\r\n\t\t\t\t\tareaName:           d`${state}.promiseReducer.getUserInfo.payload.data.getUser.area.areaName`,\r\n\t\t\t\t\tcityName:           d`${state}.promiseReducer.getUserInfo.payload.data.getUser.city.cityName`,\r\n\t\t\t\t\tupdatedUserPhoto:   d`${state}.promiseReducer.getUserPhoto.payload.data.getUserPhotos`,\r\n\t\t\t\t\tdeletedPhoto:       d`${state}.promiseReducer.removePhoto.payload.data.removePhoto.id`,\r\n\t\t\t\t\taddPhoto:           d`${state}.promiseReducer.createUserPhoto.payload.data.createPhoto.id`,\r\n\t\t\t\t\tsetMainPhoto:       d`${state}.promiseReducer.setMainPhoto.payload.data.setPhotoMain`,\r\n\t\t\t\t\tresponseOnUpdateUserNameAndLocation:d`${state}.promiseReducer.updateUserNameAndCity.payload.data.updateUser`,\r\n\t\t\t\t\tresponseOnPassAndEmailChange:       d`${state}.promiseReducer.updateUserLoginAndPassword.payload.data.updateUser.id`,\r\n\t\t\t\t\tresponseOnPassAndEmailError:        d`${state}.promiseReducer.updateUserLoginAndPassword.payload.errors`,\r\n\t\t\t\t\t\r\n\t\t\t}\r\n\t\t};\r\n\r\n\t\tcase \"EditAnnouncement\":\r\n\t\t\treturn function(state){\r\n\t\t\t\treturn{\r\n\t\t\t\t\ttoken: d`${state}.login.jwt_token`,\r\n\t\t\t\t\tannouncement:d`${state}.promiseReducer.findAnnouncementForEdit.payload.data.getAnnouncement`,\r\n\t\t\t\t\tcategories: d`${state}.promiseReducer.findAnnouncementForEdit.payload.data.getCategories`,\r\n\t\t\t\t\tcurrencies: d`${state}.promiseReducer.findAnnouncementForEdit.payload.data.getCurrencies`,\r\n\t\t\t\t\tuserId: d`${state}.login.userData.id`,\r\n\t\t\t\t\tresponseOnEdit: d`${state}.promiseReducer.editAnnouncement.payload.data.editAnnouncement.id`,\r\n\t\t\t\t\tupdatedPhoto:d`${state}.promiseReducer.getAnnouncementPhotos.payload.data.getAnnouncement.photo`,\r\n\t\t\t\t\tisChangeInPhoto:d`${state}.promiseReducer.removePhoto.payload.data.removePhoto.id`,\r\n\t\t\t\t\tnewPhoto:d`${state}.promiseReducer.createAnnouncementPhoto.payload.data.createPhoto.id`,\r\n\t\t\t\t\tsetMainPhoto:d`${state}.promiseReducer.setMainPhoto.payload.data.setPhotoMain`,\r\n\t\t\t}\r\n\t\t};\r\n\r\n\t\tcase \"Categories\":\r\n\t\t\treturn function(state){\r\n\t\t\t\treturn{\r\n\t\t\t\t\tfullCategories:d`${state}promiseReducer.categoriesFullDesc.payload.data.getCategories`\r\n\t\t\t}\r\n\t\t}\r\n\t\tdefault: return undefined;\r\n\t}\r\n}\r\n\r\nexport default mapStateToProps;","import {PROMISE, PENDING, RESOLVED, REJECTED } from '../actions';\r\n\r\n\r\nfunction actionPromise(name, promise) {\r\n    function actionPending() {\r\n        return {\r\n            type: PROMISE,\r\n            status: PENDING,\r\n            name,\r\n            payload: null, error: null\r\n        }\r\n    }\r\n\r\n    function actionResolved(payload) {\r\n        return {\r\n            type: PROMISE,\r\n            status: RESOLVED,\r\n            name,\r\n            payload, error: null\r\n        }\r\n    }\r\n\r\n    function actionRejected(error) {\r\n        return {\r\n            type: PROMISE,\r\n            status: REJECTED,\r\n            name,\r\n            payload: null, error\r\n        }\r\n    }\r\n    return async dispatch => {\r\n        dispatch(actionPending())\r\n        try {\r\n            let payload = await promise\r\n            dispatch(actionResolved(payload))\r\n            return payload\r\n        }\r\n        catch (error) {\r\n            dispatch(actionRejected(error))\r\n        }\r\n    }\r\n}\r\n\r\nexport default actionPromise;","const getGQL = (headers) => \r\n    (query=\"\", variables={}) => \r\n        fetch(\"http://localhost:4000/graphql\", \r\n                      {method: 'POST',\r\n                            headers: {\r\n                              'Accept': 'application/json',\r\n                              'Content-Type': 'application/json',\r\n                              ...headers  \r\n                            },\r\n                           body: JSON.stringify({query,variables})\r\n                          })\r\n        .then(res => res.json())\r\n\r\nexport {getGQL} ;\r\n\r\n    //     getGQL(headers={token:'daasda'})\r\n    // (`query Authorization($login:String, $password:String){\r\n  \r\n    //     login(login:$login, password:$password)\r\n    //   }`, {login, password}).then(data => store.dispatch(actionToken(data.data.login)))\r\n\r\n    // return {\r\n    //     type:'LOGIN'\r\n    // }\r\n","import actionPromise from '../actionPromise'\r\nimport { getGQL } from \"../../../gql\"\r\n\r\nexport default function actionPromiseSearch(data) {\r\n  \r\n  let promise = getGQL()(`\r\n  query Announcements(\r\n    $areaId:ID,$cityId:ID,\r\n              $categoryId:ID,\r\n              $subCategoryId:ID,\r\n              $currencyId:ID,\r\n              $hasPhoto:Boolean,\r\n              $hasDelivery:Boolean,\r\n              $priceFrom:Float,\r\n              $priceTo:Float,\r\n              $findEverywhere:Boolean,\r\n              $requestText:String,\r\n              $sort:String,\r\n              $limit: Int,\r\n              $offset: Int,\r\n  ){\r\n            searchAnnouncements(\r\n              areaId:$areaId,cityId:$cityId,\r\n              categoryId:$categoryId,\r\n              subCategoryId:$subCategoryId,\r\n              currencyId:$currencyId,\r\n              hasPhoto:$hasPhoto,\r\n              hasDelivery:$hasDelivery,\r\n              priceFrom:$priceFrom,\r\n              priceTo:$priceTo,\r\n              findEverywhere:$findEverywhere,\r\n              requestText:$requestText,\r\n              sort:$sort,\r\n              limit: $limit,\r\n              offset: $offset\r\n          ){\r\n      count\r\n      rows{\r\n            id\r\n            createdAt\r\n            announcementText\r\n            announcementHeader\r\n            user{\r\n              id\r\n              userName\r\n            }\r\n            area{\r\n              id\r\n              areaName\r\n            }\r\n            city{\r\n              id\r\n              cityName\r\n            }\r\n            photo{\r\n            photoLink\r\n            isMain\r\n             }\r\n            currency{\r\n              id\r\n              currencySymbol\r\n            }\r\n            announcementPrice\r\n          }\r\n    }   }  \r\n    `, { ...data })\r\n\r\n  return actionPromise('searchRequest', promise)\r\n\r\n}","import actionPromise from '../actionPromise'\r\nimport { getGQL } from \"../../../gql\"\r\n\r\nexport default function actionPromiseParamsForAnnouncements(data) {\r\n\r\n    let promise = getGQL()(`\r\n  query par_for_search{\r\n    getCategories{\r\n        id\r\n    categoryName\r\n    subcategories{\r\n        id\r\n        subCategoryName\r\n    }\r\n    }\r\n    getCurrencies{\r\n    id\r\n    currencySymbol\r\n}\r\ngetAreas{\r\n    id\r\n    areaName\r\n    cities{\r\n        id\r\n        cityName\r\n        areaId\r\n    }}\r\n}    \r\n    `, { ...data })\r\n\r\n    return actionPromise('params_for_announcements', promise)\r\n\r\n}","import actionPromise from '../actionPromise'\r\nimport { getGQL } from \"../../../gql\"\r\n\r\nexport default function actionPromiseCreateAnnouncement(data) {\r\n  const auth = {\r\n    'Authorization': 'Bearer ' + data.token\r\n  }\r\n  let promise = getGQL(auth)(`\r\n  mutation createAnnouncement(\r\n    $announcementHeader: String!\r\n  $announcementText: String\r\n  $announcementPrice: Float\r\n  $hasDelivery: Boolean\r\n  $userId: ID!\r\n  $areaId: ID!\r\n  $cityId: ID!\r\n  $currencyId: ID!\r\n  $categoryId: ID!\r\n  $subCategoryId: ID\r\n  $photoLink:[String]\r\n  ){\r\n    createAnnouncement(\r\n  announcementHeader:$announcementHeader\r\n  announcementText: $announcementText\r\n  announcementPrice: $announcementPrice\r\n  hasDelivery:$hasDelivery \r\n  userId:$userId \r\n  areaId: $areaId\r\n  cityId:$cityId\r\n  currencyId: $currencyId\r\n  categoryId: $categoryId\r\n  subCategoryId: $subCategoryId\r\n  photoLink:$photoLink\r\n    ){\r\n      id\r\n    }\r\n  }\r\n    \r\n     \r\n    `, { ...data.body })\r\n\r\n  return actionPromise('createAnnouncement', promise)\r\n\r\n}","import actionPromise from '../actionPromise'\r\nimport { getGQL } from \"../../../gql\"\r\n\r\nexport default function actionPromiseFindFavourite({token,id}) {\r\n  const auth = {\r\n    'Authorization': 'Bearer ' + token\r\n  }\r\n  let promise = getGQL(auth)(`\r\n  query findFavourite($id: ID!){\r\n    getUser(id:$id){\r\n      favourite{\r\n  announcement{\r\n    id\r\n                announcementText\r\n                announcementHeader\r\n                createdAt\r\n                user{\r\n                  id\r\n                  userName\r\n                }\r\n                area{\r\n                  id\r\n                  areaName\r\n                }\r\n                city{\r\n                  id\r\n                  cityName\r\n                }\r\n                photo{\r\n                photoLink\r\n                isMain\r\n                 }\r\n                currency{\r\n                  id\r\n                  currencySymbol\r\n                }\r\n                announcementPrice\r\n  }\r\n      }\r\n    }\r\n  }\r\n \r\n    `, { id })\r\n\r\n\r\n \r\n  return actionPromise('findFavourite', promise)\r\n}","import actionPromise from '../actionPromise'\r\nimport { getGQL } from \"../../../gql\"\r\n\r\nexport default function actionPromiseCreateLike({token,announcementId}) {\r\n  const auth = {\r\n    'Authorization': 'Bearer ' + token\r\n  }\r\n  let promise = getGQL(auth)(`\r\n  mutation newLike($announcementId: ID!){\r\n    createLike(announcementId:$announcementId){\r\n      id\r\n    }\r\n  }\r\n    `, { announcementId })\r\n\r\n\r\n \r\n  return actionPromise('createLike', promise)\r\n}","import actionPromise from '../actionPromise'\r\nimport { getGQL } from \"../../../gql\"\r\n\r\nexport default function actionPromiseFindOneAnnouncement({ id }) {\r\n\r\n    let promise = getGQL()(`\r\n        query findOne($id: ID!){\r\n        getAnnouncement(id: $id) {\r\n            id\r\n            announcementText\r\n            announcementHeader\r\n            user{\r\n                id\r\n                userName\r\n                userEmail\r\n                city{\r\n                    cityName\r\n                }\r\n                area{\r\n                    areaName\r\n                }\r\n                phones{\r\n                    phone\r\n            }\r\n            photos{\r\n                photoLink\r\n                isMain\r\n            }\r\n            }\r\n            area{\r\n                id\r\n                areaName\r\n            }\r\n            city{\r\n                id\r\n                cityName\r\n            }\r\n            photo{\r\n                photoLink\r\n            }\r\n            announcementPrice\r\n            currency{\r\n                id\r\n                currencySymbol\r\n            }\r\n            hasDelivery\r\n        }\r\n    }\r\n\r\n`, { id })\r\n\r\n\r\n\r\n    return actionPromise('findOneAnnouncement', promise)\r\n}","import actionPromise from '../actionPromise'\r\nimport { getGQL } from \"../../../gql\"\r\n\r\nexport default function actionPromiseFindOwnAnnouncements({token,id}) {\r\n  const auth = {\r\n    'Authorization': 'Bearer ' + token\r\n  }\r\n  let promise = getGQL(auth)(`\r\n  query findOwnAnnouncements($id: ID!){\r\n    getUser(id:$id){\r\n     announcements{\r\n                  id\r\n                  createdAt\r\n                  announcementText\r\n                  announcementHeader\r\n                  announcementPrice\r\n                  user{\r\n                    id\r\n                    userName\r\n                  }\r\n                  area{\r\n                    id\r\n                    areaName\r\n                  }\r\n                  city{\r\n                    id\r\n                    cityName\r\n                  }\r\n                  photo{\r\n                  photoLink\r\n                  isMain\r\n                   }\r\n                  currency{\r\n                    id\r\n                    currencySymbol\r\n                  }\r\n    }\r\n    }} \r\n    `, { id })\r\n\r\n\r\n \r\n  return actionPromise('findOwn', promise)\r\n}","import actionPromise from '../actionPromise'\r\nimport { getGQL } from \"../../../gql\"\r\n\r\nexport default function actionPromiseGetUserInfo({ token, id }) {\r\n    const auth = {\r\n        'Authorization': 'Bearer ' + token\r\n    }\r\n    let promise = getGQL(auth)(`\r\n        query info($id: ID!){\r\n        getUser(id: $id) {\r\n            userName\r\n            city{\r\n                id\r\n                cityName\r\n            }\r\n            area{\r\n                id\r\n                areaName\r\n            }\r\n            phones{\r\n                id\r\n                phone\r\n            }\r\n            photos{\r\n                id\r\n                photoLink\r\n                isMain\r\n                userId\r\n            }\r\n            userEmail\r\n        }\r\n        getAreas{\r\n            id\r\n            areaName\r\n            cities{\r\n                id\r\n                cityName\r\n                areaId\r\n            }}\r\n    }\r\n        `, { id })\r\n\r\n\r\n\r\n    return actionPromise('getUserInfo', promise)\r\n}","import actionPromise from '../actionPromise'\r\nimport { getGQL } from \"../../../gql\"\r\n\r\nexport default function actionPromiseUpdateUserNameAndCity({ token, data }) {\r\n    const auth = {\r\n        'Authorization': 'Bearer ' + token\r\n    }\r\n    let promise = getGQL(auth)(`\r\n        mutation updateUser(\r\n            $userName: String!\r\n            \r\n            $areaId: ID\r\n            $cityId: ID\r\n                 ){\r\n                     updateUser(\r\n                        userName: $userName\r\n                        \r\n                        areaId: $areaId\r\n                        cityId: $cityId\r\n                            ) {\r\n                                userName\r\n                                city{\r\n                                    id\r\n                                    cityName\r\n                                }\r\n                                area{\r\n                                    id\r\n                                    areaName\r\n                                }\r\n                                phones{\r\n                                    phone\r\n                                }\r\n                                photos{\r\n                                    id\r\n                                    photoLink\r\n                                }\r\n                            }\r\n                        }\r\n        `, { ...data })\r\n\r\n\r\n \r\n  return actionPromise('updateUserNameAndCity', promise)\r\n}","import actionPromise from '../actionPromise'\r\nimport { getGQL } from \"../../../gql\"\r\n\r\nexport default function actionPromiseUpdateUserLoginAndPassword({ token, data }) {\r\n    const auth = {\r\n        'Authorization': 'Bearer ' + token\r\n    }\r\n    let promise = getGQL(auth)(`\r\n        mutation updateUser(\r\n            $userEmail: String\r\n            $userPassword: String\r\n                 ){\r\n                     updateUser(\r\n                        userEmail: $userEmail\r\n                        userPassword: $userPassword\r\n                            ) {\r\n                                id\r\n                            }\r\n                        }\r\n        `, { ...data })\r\n\r\n\r\n \r\n  return actionPromise('updateUserLoginAndPassword', promise)\r\n}","import actionPromise from '../actionPromise'\r\nimport { getGQL } from \"../../../gql\"\r\n\r\nexport default function actionPromiseAddPhoneNumber({token,data}) {\r\n  const auth = {\r\n    'Authorization': 'Bearer ' + token\r\n  }\r\n  let promise = getGQL(auth)(`\r\n  mutation addPhone($phone: String!,$userId: ID!){\r\n    createPhone(phone: $phone,userId:$userId){\r\n      id\r\n      phone\r\n    }\r\n  }\r\n    `, { ...data })\r\n\r\n\r\n \r\n  return actionPromise('addPhoneNumber', promise)\r\n}","import actionPromise from '../actionPromise'\r\nimport { getGQL } from \"../../../gql\"\r\n\r\nexport default function actionPromiseGetUserPhoto({ userId }) {\r\n\r\n  let promise = getGQL()(`\r\n    query userPhotos($userId: ID!){\r\n      getUserPhotos(userId: $userId) {\r\n        id\r\n        photoLink\r\n        userId\r\n        isMain\r\n      }\r\n    }\r\n    `, { userId})\r\n\r\n\r\n \r\n  return actionPromise('getUserPhoto', promise)\r\n}","import actionPromise from '../actionPromise'\r\nimport { getGQL } from \"../../../gql\"\r\n\r\nexport default function actionPromiseFindAnnouncementForEdit({token,id}) {\r\n    \r\n    const auth = {\r\n        'Authorization': 'Bearer ' + token\r\n    }\r\n\r\n    let promise = getGQL(auth)(`\r\n        query findOne($id: ID!){\r\n        getAnnouncement(id: $id) {\r\n            id\r\n            announcementText\r\n            announcementHeader\r\n            user{\r\n                id\r\n            }\r\n            photo{\r\n                id\r\n                photoLink\r\n                announcementId\r\n                isMain\r\n            }\r\n            category{\r\n                id\r\n                categoryName\r\n              }\r\n            subcategory{\r\n            id\r\n            subCategoryName\r\n           }\r\n            announcementPrice\r\n            currency{\r\n                id\r\n                currencySymbol\r\n            }\r\n            hasDelivery\r\n        }\r\n        getCategories{\r\n            id\r\n        categoryName\r\n        subcategories{\r\n            id\r\n            subCategoryName\r\n        }\r\n        }\r\n        getCurrencies{\r\n        id\r\n        currencySymbol\r\n    }\r\n    }\r\n\r\n`, { id })\r\n\r\n\r\n\r\n    return actionPromise('findAnnouncementForEdit', promise)\r\n}","import actionPromise from '../actionPromise'\r\nimport { getGQL } from \"../../../gql\"\r\n\r\nexport default function actionPromiseRemoveAnnouncement({token,body}) {\r\n  const auth = {\r\n    'Authorization': 'Bearer ' + token\r\n  }\r\n  let promise = getGQL(auth)(`\r\n  mutation removeAnnouncement($userId: ID!,$id: ID!,$isDisabled: Boolean){\r\n    editAnnouncement(userId: $userId,id: $id,isDisabled: $isDisabled){\r\n      id\r\n    }\r\n  }\r\n    `, { ...body })\r\n\r\n  return actionPromise('removeAnnouncement', promise)\r\n\r\n}","import actionPromise from '../actionPromise'\r\nimport { getGQL } from \"../../../gql\"\r\n\r\nexport default function actionPromiseEditAnnouncement({token,body}) {\r\n  const auth = {\r\n    'Authorization': 'Bearer ' + token\r\n  }\r\n  let promise = getGQL(auth)(`\r\n  mutation editAnnouncement(\r\n    $announcementHeader: String\r\n    $announcementText: String\r\n    $announcementPrice: Float\r\n    $hasDelivery: Boolean\r\n    $userId: ID!\r\n    $id: ID!\r\n    $currencyId: ID\r\n    $categoryId: ID\r\n    $subCategoryId: ID\r\n    ){\r\n      editAnnouncement(\r\n    announcementHeader:$announcementHeader\r\n    announcementText: $announcementText\r\n    announcementPrice: $announcementPrice\r\n    hasDelivery:$hasDelivery \r\n    userId:$userId \r\n    id: $id\r\n    currencyId: $currencyId\r\n    categoryId: $categoryId\r\n    subCategoryId: $subCategoryId\r\n      ){\r\n        id\r\n      }\r\n    }\r\n     \r\n    `, { ...body })\r\n\r\n  return actionPromise('editAnnouncement', promise)\r\n\r\n}","import actionPromise from '../actionPromise'\r\nimport { getGQL } from \"../../../gql\"\r\n\r\nexport default function actionPromiseRemoveUser({ token,id}) {\r\n    const auth = {\r\n        'Authorization': 'Bearer ' + token\r\n    }\r\n    let promise = getGQL(auth)(`\r\n    mutation removeUser($id: ID!){\r\n        removeUser(id:$id){\r\n          userName\r\n        }\r\n      }\r\n        `, { id })\r\n\r\n\r\n \r\n  return actionPromise('removeUser', promise)\r\n}","  import actionPromise from '../actionPromise'\r\n  import { getGQL } from \"../../../gql\"\r\n  \r\n  export default function actionPromiseRemovePhone({ token,id}) {\r\n      const auth = {\r\n          'Authorization': 'Bearer ' + token\r\n      }\r\n      let promise = getGQL(auth)(`\r\n      mutation removePhone($id: ID!){\r\n        removePhone(id:$id){\r\n          id\r\n          phone\r\n        }\r\n      }\r\n          `, { id })\r\n  \r\n  \r\n   \r\n    return actionPromise('removedPhone', promise)\r\n  }","import actionPromise from '../actionPromise'\r\nimport { getGQL } from \"../../../gql\"\r\n\r\nexport default function actionLoginPromise( userEmail, userPassword ) {\r\n    let promise = getGQL()\r\n    (`query login($userEmail:String!, $userPassword:String!){\r\n        logInAuth(userEmail:$userEmail,userPassword:$userPassword){\r\n          token\r\n        }\r\n      } `, { userEmail, userPassword })\r\n        \r\n    return  actionPromise('login', promise)\r\n\r\n}","import actionPromise from '../actionPromise'\r\nimport { getGQL } from \"../../../gql\"\r\n\r\nexport default function actionRegisterPromise(userEmail, userPassword){\r\n    let promise = getGQL()\r\n    (`mutation newUser($userEmail:String!,$userPassword:String!){\r\n  createUser(userEmail: $userEmail,userPassword: $userPassword){\r\n    id\r\n  }\r\n}\r\n    `, {userEmail, userPassword}\r\n    )\r\n    return actionPromise('register', promise)\r\n}\r\n","import actionPromise from '../actionPromise'\r\nimport { getGQL } from \"../../../gql\"\r\n\r\nexport default function actionPromiseFindAnnouncementPhotos({id }) {\r\n    \r\n    let promise = getGQL()(`\r\n    query findOne($id: ID!){\r\n        getAnnouncement(id: $id) {\r\n            photo{\r\n                id\r\n                photoLink\r\n                announcementId\r\n                isMain\r\n            }\r\n    }\r\n}\r\n        `, {id})\r\n\r\n\r\n\r\n    return actionPromise('getAnnouncementPhotos', promise)\r\n}","import actionPromise from '../actionPromise'\r\nimport { getGQL } from \"../../../gql\"\r\n\r\nexport default function actionPromiseRemovePhoto({token,id}) {\r\n  const auth = {\r\n    'Authorization': 'Bearer ' + token\r\n  }\r\n  let promise = getGQL(auth)(`\r\n  mutation remPhoto($id:ID!){\r\n    removePhoto(id:$id){\r\n      id\r\n    }\r\n  }\r\n    `, { id })\r\n \r\n  return actionPromise('removePhoto', promise)\r\n}","import actionPromise from '../actionPromise'\r\nimport { getGQL } from \"../../../gql\"\r\n\r\nexport default function actionPromiseCreatePhotoForAnnouncement({token,...data}) {\r\n  const auth = {\r\n    'Authorization': 'Bearer ' + token\r\n  }\r\n  let promise = getGQL(auth)(`\r\n  mutation createPhoto($photoLink: String!$announcementId: ID){\r\n    createPhoto(photoLink:$photoLink,announcementId:$announcementId){\r\n      id\r\n    }\r\n  } \r\n    `, {...data})\r\n\r\n\r\n \r\n  return actionPromise('createAnnouncementPhoto', promise)\r\n}","import actionPromise from '../actionPromise'\r\nimport { getGQL } from \"../../../gql\"\r\n\r\nexport default function actionPromiseCreateUserPhoto({token,data}) {\r\n  const auth = {\r\n    'Authorization': 'Bearer ' + token\r\n  }\r\n  let promise = getGQL(auth)(`\r\n  mutation createPhoto($photoLink: String!,$userId: ID){\r\n    createPhoto(photoLink:$photoLink,userId:$userId){\r\n      id\r\n    }\r\n  } \r\n    `,{...data})\r\n\r\n\r\n \r\n  return actionPromise('createUserPhoto', promise)\r\n}","import actionPromise from '../actionPromise'\r\nimport { getGQL } from \"../../../gql\"\r\n\r\nexport default function actionPromiseFindLikes({ token, id }) {\r\n    const auth = {\r\n        'Authorization': 'Bearer ' + token\r\n    }\r\n    let promise = getGQL(auth)(`\r\n    query info($id: ID!){\r\n        getUser(id: $id) {\r\n    favourite{\r\n      announcement{\r\n        id\r\n      }\r\n    }\r\n  }\r\n    }\r\n        `, { id })\r\n\r\n\r\n\r\n    return actionPromise('getLikes', promise)\r\n}","import actionPromise from '../actionPromise'\r\nimport { getGQL } from \"../../../gql\"\r\n\r\nexport default function actionPromiseSetPhotoAsMain({token,announcementId,userId,id}) {\r\n  const auth = {\r\n    'Authorization': 'Bearer ' + token\r\n  }\r\n  let promise = getGQL(auth)(`\r\n  mutation setMainImage(\r\n    $id: ID!\r\n      $userId: ID\r\n    $announcementId: ID\r\n    ){\r\n     setPhotoMain(\r\n    id: $id,\r\n      userId:$userId\r\n    announcementId:$announcementId\r\n    ) {\r\n      id\r\n    photoLink\r\n      isMain\r\n    }\r\n    }\r\n    `, { announcementId,userId,id })\r\n\r\n\r\n \r\n  return actionPromise('setMainPhoto', promise)\r\n}","import actionPromise from '../actionPromise'\r\nimport { getGQL } from \"../../../gql\"\r\n\r\nexport default function actionPromiseGetFullCategories() {\r\n\r\n    let promise = getGQL()(`\r\n    query categories{\r\n        getCategories{\r\n          categoryName, categoryImage,id\r\n        }\r\n      }\r\n     \r\n    `, {})\r\n\r\n    return actionPromise('categoriesFullDesc', promise)\r\n\r\n}","import { TOKEN, LOGOUT, REDIRECTED_AS_UNREGISTERED, PASS_REQUEST_DATA } from '../actions';\r\nimport store from '../store'\r\nimport actionPromise from './actionPromise'\r\nimport { d } from '../../helpers'\r\nimport {\r\n    actionPromiseSearch,\r\n    actionPromiseParamsForAnnouncements,\r\n    actionPromiseCreateAnnouncement,\r\n    actionPromiseFindFavourite,\r\n    actionPromiseCreateLike,\r\n    actionPromiseFindOneAnnouncement,\r\n    actionPromiseFindOwnAnnouncements,\r\n    actionPromiseGetUserInfo,\r\n    actionPromiseUpdateUserNameAndCity,\r\n    actionPromiseUpdateUserLoginAndPassword,\r\n    actionPromiseAddPhoneNumber,\r\n    actionPromiseGetUserPhoto,\r\n    actionPromiseFindAnnouncementForEdit,\r\n    actionPromiseRemoveAnnouncement,\r\n    actionPromiseEditAnnouncement,\r\n    actionPromiseRemoveUser,\r\n    actionPromiseRemovePhone,\r\n    actionLoginPromise,\r\n    actionRegisterPromise,\r\n    actionPromiseFindAnnouncementPhotos,\r\n    actionPromiseRemovePhoto,\r\n    actionPromiseCreatePhotoForAnnouncement,\r\n    actionPromiseCreateUserPhoto,\r\n    actionPromiseFindLikes,\r\n    actionPromiseSetPhotoAsMain,\r\n    actionPromiseGetFullCategories\r\n\r\n\r\n\r\n\r\n\r\n} from './promiseActions.js'\r\n\r\nexport {\r\n    actionPromise,\r\n    actionLogin,\r\n    actionLogout,\r\n    wasRedirectedFrom,\r\n    actionRegister,\r\n    actionSearch,\r\n    actionGetSearchParams,\r\n    actionCreateAnnouncement,\r\n    actionFindFavourite,\r\n    actionCreateLike,\r\n    actionFindOneAnnouncement,\r\n    actionFindOwnAnnouncements,\r\n    actionGetUserInfo,\r\n    actionUpdateUserNameAndCity,\r\n    actionUpdateUserLoginAndPassword,\r\n    actionAddPhoneNumber,\r\n    actionGetUserPhoto,\r\n    actionFindAnnouncementForEdit,\r\n    actionRemoveAnnouncement,\r\n    actionEditAnnouncement,\r\n    actionRemoveUser,\r\n    actionRemovePhone,\r\n    actionPassRequestData,\r\n    actionFindAnnouncementPhotos,\r\n    actionRemovePhoto,\r\n    actionCreatePhotoForAnnouncement,\r\n    actionCreateUserPhoto,\r\n    actionFindLikes,\r\n    actionSetMainPhoto,\r\n    actionGetFullCategories\r\n}\r\n\r\n\r\n\r\nfunction actionLogin(userEmail, userPassword) {\r\n    return async dispatch => {\r\n        let token = await dispatch(actionLoginPromise(userEmail, userPassword))\r\n        if (d`${token}.data.logInAuth`) {\r\n            return dispatch(actionToken(token.data.logInAuth.token))\r\n        } else {\r\n            console.log(token.errors[0].messages)\r\n        }\r\n    }\r\n}\r\n\r\nfunction actionRegister(userEmail, userPassword) {\r\n    return async dispatch => {\r\n        let user = await dispatch(actionRegisterPromise(userEmail, userPassword))\r\n        if (d`${user}.data.createUser.id`) {\r\n            try {\r\n                await dispatch(actionLogin(userEmail, userPassword))\r\n            } catch (e) {\r\n                console.log(\"actionRegister\", e)\r\n                if (store.getState().login.jwt_token) window.location.replace(\"/profile/own_settings\")\r\n            }\r\n        } else {\r\n            if (d`${user}.errors`) {\r\n                let err = d`${user}.errors`\r\n                return err[0].message\r\n            }\r\n        }\r\n    }\r\n}\r\n\r\n\r\nfunction actionSearch(data) {\r\n    return async dispatch => {\r\n        dispatch(actionPassRequestData(data))\r\n        return await dispatch(actionPromiseSearch(data))\r\n\r\n    }\r\n}\r\n\r\nfunction actionGetSearchParams() {\r\n    return async dispatch => {\r\n        return await dispatch(actionPromiseParamsForAnnouncements())\r\n    }\r\n}\r\n\r\nfunction actionCreateAnnouncement(data) {\r\n    return async dispatch => {\r\n        return await dispatch(actionPromiseCreateAnnouncement(data))\r\n    }\r\n}\r\n\r\nfunction actionFindFavourite(data) {\r\n    return async dispatch => {\r\n        return await dispatch(actionPromiseFindFavourite(data))\r\n    }\r\n}\r\n\r\nfunction actionCreateLike(data) {\r\n    return async dispatch => {\r\n        return await dispatch(actionPromiseCreateLike(data))\r\n    }\r\n}\r\n\r\nfunction actionFindOneAnnouncement(data) {\r\n    return async dispatch => {\r\n        return await dispatch(actionPromiseFindOneAnnouncement(data))\r\n    }\r\n}\r\n\r\nfunction actionFindOwnAnnouncements(data) {\r\n    return async dispatch => {\r\n        return await dispatch(actionPromiseFindOwnAnnouncements(data))\r\n    }\r\n}\r\n\r\nfunction actionGetUserInfo(data) {\r\n    return async dispatch => {\r\n        return await dispatch(actionPromiseGetUserInfo(data))\r\n    }\r\n}\r\n\r\nfunction actionUpdateUserNameAndCity(data) {\r\n    return async dispatch => {\r\n        return await dispatch(actionPromiseUpdateUserNameAndCity(data))\r\n    }\r\n}\r\n\r\nfunction actionUpdateUserLoginAndPassword(data) {\r\n    return async dispatch => {\r\n        return await dispatch(actionPromiseUpdateUserLoginAndPassword(data))\r\n    }\r\n}\r\n\r\nfunction actionAddPhoneNumber(data) {\r\n    return async dispatch => {\r\n        return await dispatch(actionPromiseAddPhoneNumber(data))\r\n    }\r\n}\r\n\r\nfunction actionGetUserPhoto(data) {\r\n    return async dispatch => {\r\n        return await dispatch(actionPromiseGetUserPhoto(data))\r\n    }\r\n}\r\n\r\nfunction actionFindAnnouncementForEdit(data) {\r\n    return async dispatch => {\r\n        return await dispatch(actionPromiseFindAnnouncementForEdit(data))\r\n    }\r\n}\r\n\r\nfunction actionRemoveAnnouncement(data) {\r\n    return async dispatch => {\r\n        return await dispatch(actionPromiseRemoveAnnouncement(data))\r\n    }\r\n}\r\n\r\nfunction actionEditAnnouncement(data) {\r\n    return async dispatch => {\r\n        return await dispatch(actionPromiseEditAnnouncement(data))\r\n    }\r\n}\r\n\r\nfunction actionRemoveUser(data) {\r\n    return async dispatch => {\r\n        let result = await dispatch(actionPromiseRemoveUser(data))\r\n        if (d`${result}.data.removeUser.userName`) {\r\n            dispatch(actionLogout())\r\n        } else {\r\n            return \"something wrong\"\r\n        }\r\n    }\r\n}\r\n\r\nfunction actionRemovePhone(data) {\r\n    return async dispatch => {\r\n        return await dispatch(actionPromiseRemovePhone(data))\r\n    }\r\n}\r\n\r\nfunction actionFindAnnouncementPhotos(data) {\r\n    return async dispatch => {\r\n        return await dispatch(actionPromiseFindAnnouncementPhotos(data))\r\n    }\r\n}\r\n\r\nfunction actionRemovePhoto(data) {\r\n    return async dispatch => {\r\n        return await dispatch(actionPromiseRemovePhoto(data))\r\n    }\r\n}\r\n\r\nfunction actionCreatePhotoForAnnouncement(data) {\r\n    return async dispatch => {\r\n        return await dispatch(actionPromiseCreatePhotoForAnnouncement(data))\r\n    }\r\n}\r\n\r\nfunction actionCreateUserPhoto(data) {\r\n    return async dispatch => {\r\n        return await dispatch(actionPromiseCreateUserPhoto(data))\r\n    }\r\n}\r\n\r\nfunction actionFindLikes(data) {\r\n    return async dispatch => {\r\n        return await dispatch(actionPromiseFindLikes(data))\r\n    }\r\n}\r\n\r\nfunction actionSetMainPhoto(data) {\r\n    return async dispatch => {\r\n        return await dispatch(actionPromiseSetPhotoAsMain(data))\r\n    }\r\n}\r\n\r\nfunction actionGetFullCategories(){\r\n    return async dispatch => {\r\n        return await dispatch(actionPromiseGetFullCategories())\r\n    }\r\n}\r\n\r\nfunction actionLogout() {\r\n    return {\r\n        type: LOGOUT,\r\n        jwt_token: null\r\n    }\r\n}\r\n\r\nfunction actionToken(token) {\r\n    return {\r\n        type: TOKEN,\r\n        jwt_token: token\r\n    }\r\n}\r\n\r\nfunction wasRedirectedFrom(link) {\r\n    return {\r\n        type: REDIRECTED_AS_UNREGISTERED,\r\n        link\r\n    }\r\n}\r\n\r\nfunction actionPassRequestData(data) {\r\n    return {\r\n        type: PASS_REQUEST_DATA,\r\n        data\r\n    }\r\n}\r\n\r\n","import { bindActionCreators } from 'redux';\r\nimport { actionLogin, \r\n\t\t actionLogout, \r\n\t\t wasRedirectedFrom,\r\n\t\t actionRegister,\r\n\t\t actionSearch,\r\n\t\t actionGetSearchParams,\r\n\t\t actionCreateAnnouncement,\r\n\t\t actionFindFavourite,\r\n\t\t actionCreateLike,\r\n\t\t actionFindOneAnnouncement,\r\n\t\t actionFindOwnAnnouncements,\r\n\t\t actionGetUserInfo,\r\n\t\t actionUpdateUserNameAndCity,\r\n\t\t actionUpdateUserLoginAndPassword,\r\n\t\t actionAddPhoneNumber,\r\n\t\t actionGetUserPhoto,\r\n\t\t actionFindAnnouncementForEdit,\r\n\t\t actionRemoveAnnouncement,\r\n\t\t actionEditAnnouncement,\r\n\t\t actionRemoveUser,\r\n\t\t actionRemovePhone,\r\n\t\t actionFindAnnouncementPhotos,\r\n\t\t actionRemovePhoto,\r\n\t\t actionCreatePhotoForAnnouncement,\r\n\t\t actionCreateUserPhoto,\r\n\t\t actionFindLikes,\r\n\t\t actionSetMainPhoto,\r\n\t\t actionGetFullCategories,\r\n\r\n\r\n\r\n\t\t} from './actionCreators';\r\n\r\nfunction mapDispatchToProps(component) {\r\n\tswitch (component) {\r\n\t\tcase \"LogIn\": return function (dispatch) {\r\n\t\t\treturn {\r\n\t\t\t\tonLogin: bindActionCreators(actionLogin, dispatch),\r\n\t\t\t\tonRedirect: bindActionCreators(wasRedirectedFrom,dispatch)\r\n\t\t\t};\r\n\t\t};\r\n\t\tcase \"Profile\": return function (dispatch) {\r\n\t\t\treturn {\r\n\t\t\t\tonGetUserInfo: bindActionCreators(actionGetUserInfo,dispatch),\r\n\t\t\t\tonLogOut: bindActionCreators(actionLogout, dispatch)\r\n\t\t\t};\r\n\t\t};\r\n\t\tcase \"Header\": return function (dispatch){\r\n\t\t\treturn {\r\n\t\t\t\tonRedirect: bindActionCreators(wasRedirectedFrom,dispatch),\r\n\t\t\t\tonSearch:bindActionCreators(actionSearch,dispatch),\r\n\t\t\t};\r\n\t\t};\r\n\t\t\r\n\t\tcase \"Registration\":return function (dispatch){\r\n\t\t\treturn {\r\n\t\t\t\tonRegister: bindActionCreators(actionRegister, dispatch)\r\n\t\t\t}\r\n\t\t};\r\n\r\n\t\tcase \"Select\":return function (dispatch){\r\n\t\t\treturn {\r\n\t\t\t\tonSearch:bindActionCreators(actionSearch,dispatch),\r\n\t\t\t\tonAnnouncementParams:bindActionCreators(actionGetSearchParams,dispatch),\r\n\t\t\t}\r\n\t\t};\r\n\t\t\r\n\t\tcase \"AnnouncementsField\": return function (dispatch){\r\n\t\t\treturn {\r\n\t\t\t\tonSearch:bindActionCreators(actionSearch,dispatch),\r\n\t\t\t\tonSearchLikes:bindActionCreators(actionFindLikes,dispatch),\r\n\t\t\t}\r\n\t\t};\r\n\t\tcase \"CreateAnnouncement\":return function (dispatch){\r\n\t\t\treturn{\r\n\t\t\t\tonAnnouncementParams:bindActionCreators(actionGetSearchParams,dispatch),\r\n\t\t\t\tonCreateAnnouncement:bindActionCreators(actionCreateAnnouncement,dispatch)\r\n\t\t\t}\r\n\t\t};\r\n\t\tcase \"SearchParams\":return function (dispatch){\r\n\t\t\treturn{\r\n\t\t\t\tonAnnouncementParams:bindActionCreators(actionGetSearchParams,dispatch)\r\n\t\t\t}\r\n\t\t};\r\n\r\n\t\tcase \"Favourite\":return function(dispatch){\r\n\t\t\treturn{\r\n\t\t\t\tonSearchFavourite:bindActionCreators(actionFindFavourite,dispatch),\r\n\t\t\t}\r\n\t\t};\r\n\t\tcase \"AnnouncementCard\": return function(dispatch){\r\n\t\t\treturn{\r\n\t\t\t\tonCreateLike: bindActionCreators(actionCreateLike,dispatch),\r\n\t\t\t\tonRemoveAnnouncement: bindActionCreators(actionRemoveAnnouncement,dispatch),\r\n\t\t\t}\r\n\t\t};\r\n\r\n\t\tcase \"FullAnnouncement\": return function(dispatch){\r\n\t\t\treturn{\r\n\t\t\t\tonFindOneAnnouncement: bindActionCreators(actionFindOneAnnouncement,dispatch)\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\tcase \"OwnAnnouncements\":return function(dispatch){\r\n\t\t\treturn{\r\n\t\t\t\tonFindOwnAnnouncements: bindActionCreators(actionFindOwnAnnouncements,dispatch),\r\n\t\t\t\tonSearchLikes:bindActionCreators(actionFindLikes,dispatch),\r\n\t\t\t}\r\n\t\t};\r\n\r\n\t\tcase \"Settings\": return function(dispatch){\r\n\t\t\treturn{\r\n\t\t\t\tonGetUserInfo: bindActionCreators(actionGetUserInfo,dispatch),\r\n\t\t\t\tonUpdateUserNameAndCity: bindActionCreators(actionUpdateUserNameAndCity,dispatch),\r\n\t\t\t\tonUpdateUserLoginAndPassword: bindActionCreators(actionUpdateUserLoginAndPassword,dispatch),\r\n\t\t\t\tonAddPhoneNumber: bindActionCreators(actionAddPhoneNumber,dispatch),\r\n\t\t\t\tonGetAvatarPhoto: bindActionCreators(actionGetUserPhoto,dispatch),\r\n\t\t\t\tonAddAvatar: bindActionCreators(actionCreateUserPhoto,dispatch),\r\n\t\t\t\tonRemoveUser: bindActionCreators(actionRemoveUser,dispatch),\r\n\t\t\t\tonRemovePhone: bindActionCreators(actionRemovePhone,dispatch)\r\n\t\t\t}\r\n\t\t};\r\n\t\t\r\n\t\tcase \"EditAnnouncement\":return function (dispatch){\r\n\t\t\treturn{\r\n\t\t\t\tonAnnouncementForEdit: bindActionCreators(actionFindAnnouncementForEdit,dispatch),\r\n\t\t\t\tonAnnouncementParams:bindActionCreators(actionGetSearchParams,dispatch),\r\n\t\t\t\tonEditAnnouncement:bindActionCreators(actionEditAnnouncement,dispatch),\r\n\t\t\t\tonFindAnnouncementPhotos:bindActionCreators(actionFindAnnouncementPhotos,dispatch),\r\n\t\t\t\tonRemovePhoto: bindActionCreators(actionRemovePhoto,dispatch),\r\n\t\t\t\tonAddPhoto: bindActionCreators(actionCreatePhotoForAnnouncement,dispatch)\r\n\t\t\t}\r\n\t\t};\r\n\r\n\t\tcase \"PhotoGallery\": return function (dispatch){\r\n\t\t\treturn{\r\n\t\t\t\tonRemovePhoto: bindActionCreators(actionRemovePhoto,dispatch),\r\n\t\t\t\tonAddPhoto: bindActionCreators(actionCreatePhotoForAnnouncement,dispatch),\r\n\t\t\t\tonSetMainPhoto:bindActionCreators(actionSetMainPhoto,dispatch),\r\n\t\t\t}\r\n\t\t};\r\n\r\n\t\tcase \"Categories\":return function (dispatch){\r\n\t\t\treturn{\r\n\t\t\t\tonGetFullCategories:bindActionCreators(actionGetFullCategories,dispatch),\r\n\t\t\t\tonSearch:bindActionCreators(actionSearch,dispatch),\r\n\t\t\t}\r\n\t\t};\r\n\r\n\t\tcase \"Footer\": return function (dispatch){\r\n\t\t\treturn{\r\n\t\t\t\tonSearch:bindActionCreators(actionSearch,dispatch),\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\t\r\n\t\tdefault: return undefined;\r\n\t}\r\n}\r\n\r\nexport default mapDispatchToProps;","import { connect } from 'react-redux';\r\nimport Header from '../Header';\r\nimport mapStateToProps from '../../store/mapStateToProps';\r\nimport mapDispatchToProps from '../../store/mapDispatchToProps';\r\n\r\nconst HEADER_W = connect(mapStateToProps(\"Header\"), mapDispatchToProps(\"Header\"))(Header);\r\n\r\nexport default HEADER_W;","import React from 'react';\r\n\r\nexport default () => <div style={{ display: 'flex', justifyContent: 'center' }}>\r\n    <div className=\"lds-spinner w-auto h-auto m-5 p-5\">\r\n    <div>\r\n    </div>\r\n    <div>\r\n    </div>\r\n    <div>\r\n    </div>\r\n    <div>\r\n    </div>\r\n    <div>\r\n    </div>\r\n    <div>\r\n    </div>\r\n    <div>\r\n    </div>\r\n    <div>\r\n    </div>\r\n    <div>\r\n    </div>\r\n    <div>\r\n    </div>\r\n    <div>\r\n    </div>\r\n    <div>\r\n    </div>\r\n    </div>\r\n</div>","import React from 'react';\r\nimport Loader from './loader'\r\n\r\nclass SearchParams extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            categoryId: '',\r\n            subCategoryId: '',\r\n            priceFrom: '',\r\n            priceTo: '',\r\n            currencyId: '',\r\n            sort: '',\r\n            hasDelivery: false,\r\n            hasPhoto: false,\r\n            findEverywhere: false,\r\n            // subcategory: '',\r\n            categories: [],\r\n            subCategories: [],\r\n            currencies: []\r\n        };\r\n    }\r\n\r\n    componentDidMount() {\r\n        if (this.props.data) {\r\n            this.setState({\r\n                categories: this.props.categories,\r\n                currencies: this.props.currencies\r\n            })\r\n        } else {\r\n            this.props.onAnnouncementParams()\r\n                .then(() => this.setState({\r\n                    categories: this.props.categories,\r\n                    currencies: this.props.currencies\r\n                }))\r\n        }\r\n    }\r\n\r\n    selectCategoryHandler = (e) => {\r\n        if (e.target.value === \"true\") {\r\n            this.setState({ categoryId: '',subCategories: [], subCategoryId: '' },()=>this.props.updateCategory(this.state.categoryId))\r\n        } else {\r\n            this.setState({ categoryId: e.target.value, subCategoryId: '' },()=>this.props.updateCategory(this.state.categoryId))\r\n        }\r\n        this.state.categories.forEach(i => {\r\n            if (i.id === e.target.value) {\r\n                this.setState({ subCategories: i.subcategories })\r\n            }\r\n        })\r\n    }\r\n\r\n    selectSubCategoryHandler = (e) => {\r\n        if (e.target.value === \"true\") {\r\n            this.setState({ subCategoryId: '' },()=>this.props.updateSubCategory(this.state.subCategoryId))\r\n        } else {\r\n            this.setState({ subCategoryId: e.target.value },()=>this.props.updateSubCategory(this.state.subCategoryId))\r\n        }\r\n    }\r\n\r\n    inputPriceMinHandler = (e) => {\r\n        this.setState({ priceFrom: +e.target.value }, () => this.props.updatePriceFrom(this.state.priceFrom))\r\n    }\r\n\r\n    inputPriceMaxHandler = (e) => {\r\n        this.setState({ priceTo: +e.target.value }, () => this.props.updatePriceTo(this.state.priceTo))\r\n    }\r\n\r\n    selectCurrencyHandler = (e) => {\r\n        if (e.target.value === \"true\") {\r\n            this.setState({ currencyId: '' },()=>this.props.updateCurrency(this.state.currencyId))\r\n        } else {\r\n            this.setState({ currencyId: e.target.value },()=>this.props.updateCurrency(this.state.currencyId))\r\n        }\r\n    }\r\n\r\n    selectSortBy = (e) => {\r\n        this.setState({ sort: e.target.value }, () => this.props.updateSort(this.state.sort))\r\n    }\r\n\r\n    checkHasPhotoHandler = (e) => {\r\n        this.setState({ hasPhoto: !this.state.hasPhoto }, () => this.props.updateHasPhoto(this.state.hasPhoto))\r\n    }\r\n\r\n    checkHasDeliveryHandler = (e) => {\r\n        this.setState({ hasDelivery: !this.state.hasDelivery }, () => this.props.updateHasDelivery(this.state.hasDelivery))\r\n    }\r\n    checkFindEverywhereHandler = (e) => {\r\n        this.setState({ findEverywhere: !this.state.findEverywhere }, () => this.props.updateFindEverywhere(this.state.findEverywhere))\r\n    }\r\n    render() {\r\n        if (this.props.data) {\r\n            return (\r\n                <div className=\"input-group input-group-lg mt-3 \">\r\n                    <div className=\"col pl-0 col-lg-3 col-md-6 col-sm-12 col-12 mb-3 mb-lg-0 mb-md-3 mb-sm-3 pr-lg-3 pr-md-3 pr-sm-0 pr-0\">\r\n                        <label htmlFor=\"inputSelectCategory\">Категория</label>\r\n                        <select value={this.state.categoryId} onChange={this.selectCategoryHandler.bind(this)} className=\"form-control\" id=\"inputSelectCategory\">\r\n                            <option >Все</option>\r\n                            {this.state.categories ? this.state.categories.map(a => <option key={a.id} value={a.id}>{a.categoryName}</option>) : null}\r\n                        </select>\r\n                    </div>\r\n                    <div className=\"col pl-0 col-lg-3 col-md-6 col-sm-12 col-12 mb-3 mb-lg-0 mb-md-3 mb-sm-3 pr-lg-3 pr-md-0 pr-sm-0 pr-0\">\r\n                        <label htmlFor=\"inputSelectSubcategory\">Подкатегория</label>\r\n                        <select onChange={this.selectSubCategoryHandler.bind(this)} className=\"form-control\" id=\"inputSelectSubcategory\">\r\n                            <option value>Все</option>\r\n                            {this.state.subCategories ? this.state.subCategories.map(a => <option key={a.id} value={a.id} >{a.subCategoryName}</option>) : null}\r\n                        </select>\r\n                    </div>\r\n                    <div className=\"col col-lg-2 col-md-6 col-sm-12 col-12 mb-3 mb-lg-0 mb-md-3 mb-sm-3 pr-lg-3 pr-md-3 pr-sm-0 pr-0\">\r\n                        <label htmlFor=\"inputsPrice pl-0\">Цена</label>\r\n                        <div className=\"row\" id=\"inputsPrice\">\r\n                            <div className=\"col pl-0\">\r\n                                <input className=\"form-control\" value={this.state.priceFrom} onChange={this.inputPriceMinHandler.bind(this)} type=\"number\" min=\"0\" max=\"9999999999\" id=\"inputMinPrice\" placeholder=\"от\" />\r\n                            </div>\r\n                            <div className=\"col pl-0 \">\r\n                                <input className=\"form-control\" value={this.state.priceTo} onChange={this.inputPriceMaxHandler.bind(this)} type=\"number\" min=\"0\" max=\"9999999999\" id=\"inputMaxPrice\" placeholder=\"до\" />\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                    <div className=\"col pl-0 col-lg-1 \">\r\n                        <label htmlFor=\"inputSelectCurrency\" id=\"inputMaxPrice\">Bалютa</label>\r\n                        <select className=\"form-control\" onChange={this.selectCurrencyHandler.bind(this)} id=\"inputSelectCurrency\">\r\n                            <option value>Валюта</option>\r\n                            {this.state.currencies ? this.state.currencies.map(a => <option key={a.id} value={a.id}>{a.currencySymbol}</option>) : null}\r\n                        </select>\r\n                    </div>\r\n                    <div className=\"col pl-0 col-lg-2 pr-0\">\r\n                        <label htmlFor=\"inputSelectSortingType\" id=\"inputMaxPrice\">Cортировать по</label>\r\n                        <select className=\"form-control\" onChange={this.selectSortBy.bind(this)} id=\"inputSelectSortingType\">\r\n                            <option value=\"\">Новые</option>\r\n                            <option value=\"1\">Дешевые</option>\r\n                        </select>\r\n                    </div>\r\n                    <div className=\"input-group input-group-lg mt-3 \">\r\n                        <div className=\"custom-control custom-checkbox col col-lg-2 col-md-2 col-sm-12 col-12 mb-3 mb-lg-0 mb-md-3 mb-sm-3 pr-lg-3 pr-md-3 pr-sm-0 pr-0\">\r\n                            <input type=\"checkbox\" checked={this.state.hasPhoto} onChange={this.checkHasPhotoHandler.bind(this)} className=\"custom-control-input\" id=\"Ck1\" />\r\n                            <label className=\"custom-control-label\" htmlFor=\"Ck1\">С фото</label>\r\n                        </div>\r\n                        <div className=\"custom-control custom-checkbox col col-lg-2 col-md-3 col-sm-12 col-12 mb-3 mb-lg-0 mb-md-3 mb-sm-3 pr-lg-3 pr-md-3 pr-sm-0 pr-0\">\r\n                            <input type=\"checkbox\" checked={this.state.hasDelivery} onChange={this.checkHasDeliveryHandler.bind(this)} className=\"custom-control-input\" id=\"ck1\" />\r\n                            <label className=\"custom-control-label\" htmlFor=\"ck1\">C доставкой</label>\r\n                        </div>\r\n                        <div className=\"custom-control custom-checkbox col col-lg-4 col-md-5 col-sm-12 col-12 mb-3 mb-lg-0 mb-md-3 mb-sm-3 pr-lg-3 pr-md-3 pr-sm-0 pr-0\">\r\n                            <input type=\"checkbox\" checked={this.state.findEverywhere} onChange={this.checkFindEverywhereHandler.bind(this)} className=\"custom-control-input\" id=\"ctomCheck1\" />\r\n                            <label className=\"custom-control-label\" htmlFor=\"ctomCheck1\">Поиск в заголовке и в описании</label>\r\n                        </div>\r\n                    </div>\r\n                </div >\r\n            )\r\n        } else {\r\n            return <Loader />\r\n        }\r\n    }\r\n}\r\n\r\nexport default SearchParams;","import { connect } from 'react-redux';\r\nimport SearchParams from '../searchParams';\r\nimport mapStateToProps from '../../store/mapStateToProps';\r\nimport mapDispatchToProps from '../../store/mapDispatchToProps';\r\n\r\nconst SearchParams_W = connect(mapStateToProps(\"SearchParams\"), mapDispatchToProps(\"SearchParams\"))(SearchParams);\r\n\r\nexport default SearchParams_W;\r\n","import React from 'react'\r\nimport SEARCH_PARAMS_W from './wrappers/searchParams_w'\r\nimport { Switch, Route } from 'react-router-dom';\r\nimport Loader from './loader'\r\n\r\nclass Select extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            requestText: '',\r\n            areaName: '',\r\n            areaId: '',\r\n            cityId: '',\r\n            areas: [],\r\n            isLoaded: false,\r\n            error: null,\r\n            cities: [],\r\n            searchDetailsDisplay: false,\r\n            // search request\r\n            categoryId: '',\r\n            subCategoryId: '',\r\n            priceFrom: 0,\r\n            priceTo: 0,\r\n            currencyId: '',\r\n            sort: '',\r\n            hasDelivery: false,\r\n            hasPhoto: false,\r\n            findEverywhere: false,\r\n\r\n        }\r\n    }\r\n    componentDidMount() {\r\n        if (this.props.areas) {\r\n            this.setState({\r\n                areas: this.props.areas,\r\n            })\r\n        } else {\r\n            this.props.onAnnouncementParams().then(()=>\r\n            this.setState({\r\n                areas: this.props.areas,\r\n            }))\r\n        }\r\n    }\r\n\r\n    componentDidUpdate(prevProps){\r\n        if(prevProps.requestData !== this.props.requestData){console.log(this.props.history.location.pathname ===\"/\")\r\n            this.setState({...this.props.requestData})\r\n            \r\n        }\r\n    }\r\n\r\n    requestTextHandler = (e) => {\r\n        this.setState({ requestText: e.target.value })\r\n    }\r\n\r\n    requestAreaHandler = (e) => {\r\n        this.setState({ areaId: e.target.value, cityId: '',cities:[]},()=>this.state.areas.forEach(element => {\r\n            if (element.id === this.state.areaId) {\r\n                this.setState({\r\n                    cities: element.cities,\r\n                })\r\n            }\r\n        }))\r\n    }\r\n\r\n    requestCityHandler = (e) => {\r\n            this.setState({ cityId: e.target.value  })\r\n    }\r\n\r\n    roundToTwo(num) {    \r\n        return +(Math.floor(num + \"e+2\")  + \"e-2\");\r\n    }\r\n\r\n    searchRequestHandler = () => {\r\n        this.setState({\r\n            searchDetailsDisplay: true,\r\n            areCategoriesViewable: false\r\n        })\r\n\r\n        this.props.history.push('/advanced_search')\r\n        this.props.onSearch({\r\n            requestText: this.state.requestText,\r\n            areaId: this.state.areaId,\r\n            cityId: this.state.cityId,\r\n            categoryId: this.state.categoryId,\r\n            subCategoryId: this.state.subCategoryId,\r\n            priceFrom:this.roundToTwo(+this.state.priceFrom),\r\n            priceTo: this.roundToTwo(+this.state.priceTo),\r\n            currencyId: this.state.currencyId,\r\n            sort: this.state.sort,\r\n            hasDelivery: this.state.hasDelivery,\r\n            hasPhoto: this.state.hasPhoto,\r\n            findEverywhere: this.state.findEverywhere,\r\n            limit:16,\r\n            offset:0,\r\n        })\r\n\r\n    }\r\n\r\n    // search params\r\n\r\n    updateCategory = (v) => {\r\n        this.setState({ categoryId: v, subCategoryId: '' })\r\n    }\r\n\r\n    updateSubCategory = (v) => {\r\n        this.setState({ subCategoryId: v })\r\n    }\r\n\r\n    updatePriceFrom = (v) => {\r\n        this.setState({ priceFrom: v })\r\n    }\r\n\r\n    updatePriceTo = (v) => {\r\n        this.setState({ priceTo: v })\r\n    }\r\n\r\n    updateCurrency = (v) => {\r\n        this.setState({ currencyId: v })\r\n    }\r\n\r\n    updateSort = (v) => {\r\n        this.setState({ sort: v })\r\n    }\r\n\r\n    updateHasDelivery = (v) => {\r\n        this.setState({ hasDelivery: v })\r\n    }\r\n\r\n    updateHasPhoto = (v) => {\r\n        this.setState({ hasPhoto: v })\r\n    }\r\n\r\n    updateFindEverywhere = (v) => {\r\n        this.setState({ findEverywhere: v })\r\n    }\r\n\r\n\r\n    render() {\r\n        if(this.props.areas){\r\n        return (\r\n            <div className=\"jumbotron jumbotron-fluid mb-0\">\r\n                <div className=\"container \">\r\n                    <div className=\"row\">\r\n                        <div className=\"col\">\r\n                            <div className=\"input-group input-group-lg \">\r\n                                <div className=\"input-group input-group-lg col mb-lg-0 col-lg-5 mb-md-3 col-md-12 mb-sm-3 col-sm-12 mb-3 col-12 m-0 p-0\">\r\n                                <input type=\"text\" value={this.state.requestText} onChange={this.requestTextHandler} className=\"form-control rounded-0\" placeholder=\"Введите текст запроса\" aria-label=\"Recipient's username\" aria-describedby=\"button-addon2\" />\r\n                                </div>\r\n                                <div className=\"input-group input-group-lg col mb-lg-0 col-lg-3 mb-md-3 col-md-5 mb-sm-3 col-sm-12 mb-3 col-12 m-0 p-0\">\r\n                                <select value={this.state.areaId} onChange={this.requestAreaHandler.bind(this)} className=\"form-control rounded-0\" id=\"inputSelectArea\">\r\n                                <option value=\"\">Выберите область</option>\r\n                                    {this.props.areas?this.props.areas.map(a =><option key={a.id} value={a.id}>{a.areaName}</option>):null}\r\n                                </select>\r\n                                </div>\r\n                                <div className=\"input-group input-group-lg col mb-lg-0 col-lg-3 mb-md-3 col-md-5 mb-sm-3 col-sm-12 mb-3 col-12 m-0 p-0\">\r\n                                <select value={this.state.cityId} onChange={this.requestCityHandler.bind(this)} className=\"form-control rounded-0\" id=\"inputSelectCity\">\r\n                                <option value=\"\">Выберите город</option>\r\n                                    {this.state.cities?this.state.cities.map(a => <option key={a.id} value={a.id}>{a.cityName}</option>):null}\r\n                                </select>\r\n                                </div>\r\n                                <div className=\"input-group-append col mb-lg-0 col-lg-1 mb-md-3 col-md-2 mb-sm-3 col-sm-12 mb-3 col-12 m-0 p-0\">\r\n                                    <button onClick={this.searchRequestHandler} className=\"w-100 btn btn-outline-secondary bg-primary rounded-0\" type=\"button\" id=\"button-addon2\">Поиск</button>\r\n                                </div>\r\n                                <Switch>\r\n                                    <Route render={() => <SEARCH_PARAMS_W updateCategory={this.updateCategory}\r\n                                        updateSubCategory={this.updateSubCategory}\r\n                                        updatePriceFrom={this.updatePriceFrom}\r\n                                        updatePriceTo={this.updatePriceTo}\r\n                                        updateCurrency={this.updateCurrency}\r\n                                        updateSort={this.updateSort}\r\n                                        updateHasDelivery={this.updateHasDelivery}\r\n                                        updateHasPhoto={this.updateHasPhoto}\r\n                                        updateFindEverywhere={this.updateFindEverywhere}\r\n                                    />} path='/advanced_search' />\r\n                                </Switch>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        )\r\n    }else{\r\n            return <Loader/>\r\n        }\r\n    }\r\n}\r\n\r\nexport default Select;","import { connect } from 'react-redux';\r\nimport Select from '../select';\r\nimport mapStateToProps from '../../store/mapStateToProps';\r\nimport mapDispatchToProps from '../../store/mapDispatchToProps';\r\n\r\nconst SELECT_W = connect(mapStateToProps(\"Select\"), mapDispatchToProps(\"Select\"))(Select);\r\n\r\nexport default SELECT_W;","import React from 'react'\r\nimport Loader from \"./loader\"\r\n\r\n\r\n\r\nclass Categories extends React.Component {\r\n\r\n    componentDidMount() {\r\n        this.props.onGetFullCategories()\r\n    }\r\n\r\n    searchByCategoryHandler(id) {\r\n        this.props.onSearch({\r\n            requestText: \"\",\r\n            areaId: \"\",\r\n            cityId: \"\",\r\n            categoryId: id,\r\n            subCategoryId: \"\",\r\n            priceFrom: 0,\r\n            priceTo: 0,\r\n            currencyId: \"\",\r\n            sort: \"\",\r\n            hasDelivery: false,\r\n            hasPhoto: false,\r\n            findEverywhere: false,\r\n            limit: 16,\r\n            offset: 0,\r\n\r\n        })\r\n\r\n    }\r\n\r\n    render() {\r\n        if (this.props.fullCategories) {\r\n            return (\r\n                <div className=\"bg-white p-4\">\r\n                    <div className=\"container mb-5 mx-auto\">\r\n                        <h2 className=\"text-center mb-5\">Главные рубрики</h2>\r\n                        <div className=\"row d-flex flex-wrap align-self-stretch justify-content-center\">\r\n                            {\r\n                                this.props.fullCategories.map(a => (\r\n                                    <div key={a.id} className=\"card border-0 col-lg-2 col-md-3 col-sm-4 cursor-pointer\" onClick={() => this.searchByCategoryHandler(a.id)}>\r\n                                        <span className=\"d-flex flex-column\" >\r\n                                            <span className=\"mx-auto imgWrapper border border-primary rounded-circle d-flex \">\r\n                                                <img src={a.categoryImage} className=\"card-img-top img-fluid \" alt=\"...\" />\r\n                                            </span>\r\n                                            <h5 className=\"card-title text-center primary-color-for-text\">{a.categoryName}</h5>\r\n                                        </span>\r\n                                    </div>))\r\n                            }\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            )\r\n        } else {\r\n            return <Loader />\r\n        }\r\n    }\r\n}\r\n\r\nexport default Categories;","import { connect } from 'react-redux';\r\nimport Categories from '../categories';\r\nimport mapStateToProps from '../../store/mapStateToProps';\r\nimport mapDispatchToProps from '../../store/mapDispatchToProps';\r\n\r\nconst CATEGORIES_W = connect(mapStateToProps(\"Categories\"), mapDispatchToProps(\"Categories\"))(Categories);\r\n\r\nexport default CATEGORIES_W;\r\n","import React from 'react';\r\nimport { NavLink } from 'react-router-dom';\r\nimport OverlayTrigger from 'react-bootstrap/OverlayTrigger';\r\nimport Tooltip from 'react-bootstrap/Tooltip'\r\n\r\nclass AnnouncementCard extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            isLike: false,\r\n            avatar: '',\r\n            isRemoved: false\r\n        }\r\n    }\r\n\r\n    componentDidMount() {\r\n        if (this.props.userLikes.indexOf(this.props.identifier) > -1) {\r\n            this.setState({ isLike: true })\r\n        }\r\n        this.props.announcement.photo.map(a => a.isMain ? this.setState({ avatar: a.photoLink }) : null)\r\n    }\r\n\r\n    componentDidUpdate(prevProps) {\r\n        if (prevProps.responseRemoveAnnouncement !== this.props.responseRemoveAnnouncement && this.props.responseRemoveAnnouncement === this.props.identifier) {\r\n            this.setState({ isRemoved: true })\r\n        }\r\n    }\r\n\r\n    createLikeHandler = (e) => {\r\n        if (this.props.token) {\r\n            this.props.onCreateLike({ token: this.props.token, announcementId: this.props.identifier })\r\n                .then(() => {\r\n                    if (this.props.responseCreateLike) {\r\n                        this.setState({ isLike: true })\r\n                    } else {\r\n                        this.setState({ isLike: false })\r\n                    }\r\n                })\r\n        } else {\r\n            this.props.history.push(\"/login\")\r\n        }\r\n    }\r\n\r\n    removeAnnouncementHandler = () => {\r\n        this.props.onRemoveAnnouncement({\r\n            token: this.props.token,\r\n            body: {\r\n                userId: this.props.userId,\r\n                id: this.props.identifier,\r\n                isDisabled: true,\r\n            }\r\n        })\r\n    }\r\n\r\n    fullAnnouncementHandler = (e) => {\r\n        this.props.history.push(`/full-announcement-description/${this.props.identifier}`)\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div className=\"col col-lg-3 col-md-4 col-sm-6 col-12 mb-4\">\r\n                <div className={this.state.isRemoved ?\"card h-100 p-2 removedAnnouncement\":\"card h-100 p-2\"}>\r\n                    <div>\r\n                        {\r\n                            <img src={this.state.avatar ?\r\n                                this.state.avatar : (this.props.announcement.photo && this.props.announcement.photo[0]\r\n                                    && this.props.announcement.photo[0].photoLink) || \"/content/info/notFound.jpg\"\r\n                            } onClick={this.fullAnnouncementHandler}\r\n                                className=\"w-100 cursor-pointer card-img-top cardImg img-fluid\" alt=\"...\" />\r\n                        }\r\n                        <div className=\"w-auto overflow-hidden\" style={{ height: \"52px\" }}>\r\n                            <h5 className=\"card-title cursor-pointer cardHeaderAnnouncement text-left\" onClick={this.fullAnnouncementHandler}>\r\n                                {this.state.isRemoved ? \"Объявление удалено\" : this.props.announcement.announcementHeader ?\r\n                                    (this.props.announcement.announcementHeader.length >= 55 ? this.props.announcement.announcementHeader.slice(0, 55) + '.....' : this.props.announcement.announcementHeader) : \"\"}\r\n                            </h5>\r\n                        </div>\r\n                    </div>\r\n                    <div className=\"m-2\">\r\n                        <span className=\"d-flex justify-content-between\">\r\n                            <p className=\"card-text\"> {this.props.announcement.city.cityName ? this.props.announcement.city.className : ''}</p>\r\n                            <p className=\"announcementPrice\">{this.props.announcement.announcementPrice ? this.props.announcement.announcementPrice : 'Договорная'}{\" \"}\r\n                                {this.props.announcement.announcementPrice ? this.props.announcement.currency.currencySymbol : ''}</p>\r\n                        </span>\r\n                        <span className=\"d-flex flex-column\">\r\n                            <p className=\"cityAndDate\">{this.props.announcement.area.areaName} | {this.props.announcement.city.cityName}</p>\r\n                        </span>\r\n                        {this.props.history.location.pathname === \"/profile/own_announcements\" ?\r\n                            (+this.props.userId === +this.props.announcement.user.id ?\r\n                                <div className=\"d-flex justify-content-between\">\r\n                                    <NavLink className=\"cityAndDate card-link\" to={`/edit-announcement/${this.props.identifier}`}>Редактировать</NavLink>\r\n                                    <p className=\"cityAndDate cursor-pointer primary-color-for-text\" onClick={this.removeAnnouncementHandler}>Удалить</p>\r\n                                </div>\r\n                                : null\r\n                            )\r\n                            : null}\r\n                        <div className=\"d-flex justify-content-between\">\r\n                            <span className=\"d-flex flex-column align-items-center\">\r\n                                <p className=\"mb-0 cityAndDate\">\r\n                                {new Date(+this.props.announcement.createdAt).getDate()}-\r\n                                {new Date(+this.props.announcement.createdAt).getMonth() + 1}-\r\n                                {new Date(+this.props.announcement.createdAt).getFullYear()}</p>\r\n                            </span>\r\n                            <OverlayTrigger\r\n                                placement=\"top\"\r\n                                delay={{ show: 250, hide: 400 }}\r\n                                overlay={<Tooltip>{this.props.token ? (this.state.isLike ? \"Удалить из избранных\" : \"В избранные\") : \"Необходима авторизация\"}</Tooltip>}>\r\n                                <img className=\"cursor-pointer\" src={this.state.isLike ? \"/content/likers/like.png\" : \"/content/likers/not-like.png\"} onClick={this.createLikeHandler.bind(this)} alt=\"...\" />\r\n                            </OverlayTrigger>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n\r\n        )\r\n    }\r\n}\r\n\r\nexport default AnnouncementCard;\r\n\r\n\r\n\r\n","import { connect } from 'react-redux';\r\nimport AnnouncementCard from '../announcement_card';\r\nimport mapStateToProps from '../../store/mapStateToProps';\r\nimport mapDispatchToProps from '../../store/mapDispatchToProps';\r\n\r\nconst ANNOUNCEMENT_CARD_W = connect(mapStateToProps(\"AnnouncementCard\"), mapDispatchToProps(\"AnnouncementCard\"))(AnnouncementCard);\r\n\r\nexport default ANNOUNCEMENT_CARD_W;\r\n","import React from 'react'\r\nimport ANNOUNCEMENT_CARD_W from './wrappers/announcement_card_w';\r\nimport Loader from './loader'\r\nimport Pagination from 'react-bootstrap/Pagination'\r\n\r\n\r\nclass AnnouncementsField extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      count: 0,\r\n      buttons: [],\r\n      favourite: '',\r\n    }\r\n  }\r\n\r\n  componentDidMount = () => {\r\n    \r\n    if (this.props.userId) {\r\n      this.props.onSearchLikes({ id: this.props.userId, token: this.props.token })\r\n        .then(() => {\r\n            this.setState({ favourite: this.props.favourite.map(a => a.announcement ? a.announcement.id : null) })\r\n        })\r\n    }else{\r\n      this.setState({ favourite: []})\r\n    }\r\n    this.props.onSearch({ limit: 16, offset: 0 })\r\n    .then(() =>this.setState({count:this.props.count},()=>this.createPaginationItems()))\r\n  }\r\n\r\n  componentDidUpdate(prevState) {\r\n    if (prevState.count !== this.props.count) {\r\n      this.setState({ count: this.props.count }, () => this.createPaginationItems())\r\n    }\r\n    \r\n  }\r\n\r\n\r\n  createPaginationItems() {\r\n    let arr = []\r\n    for (let i = 1; i <= Math.ceil(this.state.count / 16); i++) {\r\n      arr.push(i)\r\n    }\r\n    this.setState({ buttons: arr })\r\n  }\r\n\r\n  paginationButtonHandler(number) {\r\n    this.props.onSearch({ ...this.props.requestData, limit: 16, offset: +number * 16 - 16 })\r\n  }\r\n\r\n  render() {\r\n    if (this.props.announcements && this.state.favourite) {\r\n      return (\r\n        <div className=\"bg-light mb-5 pt-5 pb-5\">\r\n          <div className=\"container mb-5 mx-auto\">\r\n            <div className=\"row \">\r\n              {this.props.announcements.length ? this.props.announcements.map(a => {\r\n                let identifier = a.id;\r\n                return <ANNOUNCEMENT_CARD_W history={this.props.history}\r\n                  key={a.id} announcement={a}\r\n                  identifier={identifier}\r\n                  userLikes={this.state.favourite} />\r\n              }) : <div className = \"m-5 p-5 d-flex justify-content-center w-100\">\r\n                <h3 className = \"text-center\">По вашему запросу ничего не найдено</h3>\r\n                </div>}\r\n            </div>\r\n          </div>\r\n          <Pagination className=\"w-100 d-flex justify-content-center\">\r\n            {\r\n              this.state.buttons.map(a => {\r\n                return <Pagination.Item onClick={this.paginationButtonHandler.bind(this,a)} key={a}>{a}</Pagination.Item>\r\n              })\r\n            }\r\n          </Pagination>\r\n        </div>\r\n      )\r\n    } else {\r\n      return <Loader />\r\n    }\r\n  }\r\n}\r\nexport default AnnouncementsField;","import { connect } from 'react-redux';\r\nimport AnnouncementsField from '../announcements_field';\r\nimport mapStateToProps from '../../store/mapStateToProps';\r\nimport mapDispatchToProps from '../../store/mapDispatchToProps';\r\n\r\nconst ANNOUNCEMENTS_FIELD_W = connect(mapStateToProps(\"AnnouncementsField\"), mapDispatchToProps(\"AnnouncementsField\"))(AnnouncementsField);\r\n\r\nexport default ANNOUNCEMENTS_FIELD_W;\r\n","import React from 'react';\r\nimport SELECT_W from './wrappers/select_w';\r\nimport CATEGORIES_W from './wrappers/categories_w';\r\nimport ANNOUNCEMENTS_FIELD_W from './wrappers/announcements_field_w';\r\n\r\n\r\nclass Main_page extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            areCategoriesViewable: true,\r\n        }\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div>\r\n                <SELECT_W categoriesDisplayHandler={this.categoriesDisplayHandler} history={this.props.history} />\r\n                {this.props.location.pathname === \"/\" ? <CATEGORIES_W /> : null}\r\n                <ANNOUNCEMENTS_FIELD_W \r\n                history={this.props.history}/>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default Main_page;","import { connect } from 'react-redux';\r\nimport Main_page from '../main_page';\r\nimport mapStateToProps from '../../store/mapStateToProps';\r\nimport mapDispatchToProps from '../../store/mapDispatchToProps';\r\n\r\nconst MAIN_PAGE_W = connect(mapStateToProps(\"Main_page\"), mapDispatchToProps(\"Main_page\"))(Main_page);\r\n\r\nexport default MAIN_PAGE_W;\r\n","import React from 'react';\r\n\r\nclass Registration extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            userEmail: '',\r\n            userPassword: '',\r\n            userPasswordRepeat: '',\r\n            emailInfo: '',\r\n            passInfo: '',\r\n            passCopyInfo: '',\r\n            passCompareSucess: false,\r\n            passInputSucess: false,\r\n            errMsg: '',\r\n        };\r\n    }\r\n\r\n    emailHandler = (e) => {\r\n        if (e.target.value === \"\") {\r\n            this.setState({\r\n                userEmail: e.target.value,\r\n                emailInfo: \"\"\r\n            })\r\n        } else if (this.validateEmail(e.target.value)) {\r\n            this.setState({\r\n                userEmail: e.target.value,\r\n                emailInfo: \"\"\r\n            })\r\n        } else {\r\n            this.setState({\r\n                emailInfo: \"Email должен быть формата email@email.com\",\r\n            })\r\n        }\r\n    }\r\n\r\n    passwordHandler = (e) => {\r\n        if (!e.target.value) {\r\n            this.setState({\r\n                passInputSucess: false,\r\n                userPassword: e.target.value,\r\n                passwordInfo: \"\"\r\n            })\r\n        } else if (e.target.value.length < 8) {\r\n            this.setState({\r\n                passInputSucess: false,\r\n                userPassword: e.target.value,\r\n                passwordInfo: \"Короткий пароль. Минимум 8 символов.\"\r\n            })\r\n        } else if (e.target.value === e.target.value.toLowerCase()) {\r\n            this.setState({\r\n                passInputSucess: false,\r\n                userPassword: e.target.value,\r\n                passwordInfo: \"В пароле должны быть заглавные и строчные символы.\"\r\n            })\r\n        } else if (e.target.value.match(/^(?=.*?[A-Z])(?=(.*[a-z]){1,})(?=(.*[\\d]){1,})(?=(.*[\\W]){1,})(?!.*\\s).{8,}$/)) {\r\n            this.setState({\r\n                passInputSucess: true,\r\n                userPassword: e.target.value,\r\n                passwordInfo: \"Суперпароль .\"\r\n            })\r\n        } else if (this.validatePassword(e.target.value)) {\r\n            this.setState({\r\n                passInputSucess: true,\r\n                userPassword: e.target.value,\r\n                passwordInfo: \"Надежный пароль\"\r\n            })\r\n        }\r\n    }\r\n\r\n    onRegisterHandler = (e) => {\r\n        if (this.validateEmail(this.state.userEmail) && this.validatePassword(this.state.userPassword) && this.state.userPasswordRepeat === this.state.userPassword) {\r\n            try {\r\n                this.props.onRegister(this.state.userEmail, this.state.userPassword)\r\n                    .then(() => this.props.registrationResponse ? this.props.history.push('/profile/own_settings') : (this.props.badResponse ? this.setState({ errMsg: this.props.badResponse[0].message }) : null))\r\n                    .catch((e) => console.log(e))\r\n            } catch (e) {\r\n\r\n            }\r\n        } else {\r\n            this.setState({ errMsg: \"Все поля должны быть заполнены\" })\r\n        }\r\n\r\n\r\n    }\r\n\r\n    passwordRepeatHandler = (e) => {\r\n        if (e.target.value === \"\") {\r\n            this.setState({\r\n                passCopyInfo: \"\",\r\n                passCompareSucess: false,\r\n                userPasswordRepeat: e.target.value\r\n            })\r\n        } else if (this.state.userPassword === e.target.value) {\r\n            this.setState({\r\n                passCompareSucess: true,\r\n                passCopyInfo: \"Пароли совпали\",\r\n                userPasswordRepeat: e.target.value\r\n            })\r\n        } else if (this.state.userPassword !== e.target.value) {\r\n            this.setState({\r\n                passCopyInfo: \"Пароли должны быть одинаковые\",\r\n                passCompareSucess: false,\r\n                userPasswordRepeat: e.target.value\r\n            })\r\n        }\r\n    }\r\n\r\n    validateEmail(email) {\r\n        const re = /^(([^<>()[\\]\\\\.,;:\\s@\"]+(\\.[^<>()[\\]\\\\.,;:\\s@\"]+)*)|(\".+\"))@((\\[[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\])|(([a-zA-Z\\-0-9]+\\.)+[a-zA-Z]{2,}))$/;\r\n        return re.test(String(email).toLowerCase());\r\n    }\r\n\r\n    validatePassword(pass) {\r\n        let lowerPass = pass.toLowerCase()\r\n        if (pass.length > 7 && lowerPass !== pass) {\r\n            return true\r\n        } else {\r\n            return false\r\n        }\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div className=\"bg-light p-5 mb-5 min-vw-100 min-vh-100\">\r\n                <div className=\"form_signin form-check\">\r\n                    <p className=\"inputWarning\">{this.state.errMsg}</p>\r\n                    <label htmlFor=\"inputEmail\" className={this.state.emailInfo ? \"inputWarning mb-1\" : \"mb-1 text-muted\"}>{this.state.emailInfo ? this.state.emailInfo : \"Ваш email\"}</label>\r\n                    <input onChange={this.emailHandler.bind(this)} type=\"email\" className=\"form-control mb-3\" placeholder=\"Email\" required autoFocus />\r\n                    <label htmlFor=\"inputPassword\" className={this.state.passInputSucess ? \"inputSucess mb-1\" : this.state.passwordInfo ? \"inputWarning mb-1\" : \"mb-1 text-muted\"}>{this.state.passwordInfo ? this.state.passwordInfo : \"Ваш пароль\"}</label>\r\n                    <input type=\"password\" onChange={this.passwordHandler.bind(this)} className=\"form-control mb-3\" placeholder=\"Пароль\" required />\r\n                    <label htmlFor=\"inputPasswordCopy\" className={this.state.passCompareSucess ? \"inputSucess mb-1\" : this.state.passCopyInfo ? \"inputWarning mb-1\" : \"mb-1 text-muted\"}>{this.state.passCopyInfo ? this.state.passCopyInfo : \"Повторите пароль\"}</label>\r\n                    <input type=\"password\" onChange={this.passwordRepeatHandler.bind(this)} className=\"form-control mb-3\" placeholder=\"Пароль\" required />\r\n                    <div className=\"d-flex justify-content-between\">\r\n                        <button onClick={this.onRegisterHandler} type=\"button\" className=\"btn btn-lg btn-primary btn-block\">Регистрация</button>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default Registration;","import { connect } from 'react-redux';\r\nimport Registration from '../registration';\r\nimport mapStateToProps from '../../store/mapStateToProps';\r\nimport mapDispatchToProps from '../../store/mapDispatchToProps';\r\n\r\nconst REGISTRATON_W = connect(mapStateToProps(\"Registration\"), mapDispatchToProps(\"Registration\"))(Registration);\r\n\r\nexport default REGISTRATON_W;","import React from 'react'\r\n\r\nclass PhotoGallery extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            userId: '',\r\n            announcementId: ''\r\n        }\r\n    }\r\n\r\n    componentDidMount() {\r\n        if (this.props.photo && this.props.photo.length > 0) {\r\n            if (this.props.photo[0].userId) {\r\n                this.setState({\r\n                    userId: this.props.photo[0].userId,\r\n                })\r\n                console.log(\"this.props.photo[0].userId\", this.props.photo[0].userId)\r\n            } else if (this.props.photo[0].announcementId) {\r\n                this.setState({\r\n                    announcementId: this.props.photo[0].announcementId\r\n                })\r\n            }\r\n\r\n        }\r\n    }\r\n\r\n    componentDidUpdate(prevProps) {\r\n        if (prevProps.photo !== this.props.photo && this.props.photo.length > 0) {\r\n            if (this.props.photo[0].userId) {\r\n                this.setState({\r\n                    userId: this.props.photo[0].userId,\r\n                })\r\n            } else if (this.props.photo[0].announcementId) {\r\n                this.setState({\r\n                    announcementId: this.props.photo[0].announcementId\r\n                })\r\n            }\r\n        }\r\n    }\r\n\r\n    removePhotoHandler = (id) => {\r\n        this.props.onRemovePhoto({\r\n            id,\r\n            token: this.props.token\r\n        })\r\n    }\r\n\r\n    setUpMainPhoto = (id) => {\r\n        this.props.onSetMainPhoto({\r\n            token: this.props.token,\r\n            id,\r\n            userId: this.state.userId,\r\n            announcementId: this.state.announcementId\r\n        })\r\n    }\r\n\r\n    render() {\r\n        if (this.props.photo) {\r\n            return (\r\n                <div className=\"row m-3\">\r\n                    {this.props.photo ? this.props.photo.map(a => <span key={a.id} \r\n                    className=\"col col-lg-3 col-md-4 col-sm-6 col-12 d-flex flex-column justify-content-between\">\r\n                        <img className={a.isMain ? \"border border-primary img-fluid img-thumbnail w-100 cardImg\" : \"img-fluid img-thumbnail w-100 cardImg\"} src={a.photoLink} alt=\"...\" />\r\n                        <span className=\"d-flex justify-content-between\">\r\n                            <p className=\"cityAndDate cursor-pointer primary-color-for-text\" onClick={() => this.removePhotoHandler(a.id)}>Удалить</p>\r\n                            {a.isMain ? <p className=\"cityAndDate cursor-pointer primary-color-for-text\" ></p> :\r\n                                <p className=\"cityAndDate cursor-pointer primary-color-for-text\" onClick={() => this.setUpMainPhoto(a.id)}>Сделать главным</p>}\r\n                        </span>\r\n                    </span>)\r\n                        : null}\r\n                </div>\r\n            )\r\n        } else {\r\n            return null\r\n        }\r\n    }\r\n}\r\n\r\nexport default PhotoGallery","import { connect } from 'react-redux';\r\nimport PhotoGallery from '../photoGallery';\r\nimport mapStateToProps from '../../store/mapStateToProps';\r\nimport mapDispatchToProps from '../../store/mapDispatchToProps';\r\n\r\nconst PHOTO_GALLERY_W = connect(mapStateToProps(\"PhotoGallery\"), mapDispatchToProps(\"PhotoGallery\"))(PhotoGallery);\r\n\r\nexport default PHOTO_GALLERY_W;\r\n","import React from 'react';\r\nimport Loader from './loader';\r\nimport PHOTO_GALLERY_W from './wrappers/photo_gallery_w'\r\nimport Alert from 'react-bootstrap/Alert'\r\n\r\n\r\nclass Settings extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            areas: [],\r\n            cities: [],\r\n            cityId: '',\r\n            areaId: '',\r\n            userName: '',\r\n            userEmail: '',\r\n            userPassword: '',\r\n            phoneNumber: '+380',\r\n            phones: '',\r\n            photo: '',\r\n            areaName: '',\r\n            cityName: '',\r\n            addPhoneNumbers: [],\r\n            removePhoneNumbers: [],\r\n            // ----validators--\r\n            warningPhone: \"\",\r\n            warningName: \"\",\r\n            responseOnUpdateUserNameAndLocation: false,\r\n            warningUpdateUserNameAndLocation: \"\",\r\n            passInputSucess: false,\r\n            passwordInfo: \"\",\r\n            emailInfo: \"\",\r\n            passCompareSucess: false,\r\n            passCopyInfo: \"\",\r\n            userPasswordRepeat: \"\",\r\n            wrongPassOrEmail: \"\",\r\n            isDataChangeSuccess: false,\r\n\r\n\r\n        }\r\n    }\r\n\r\n    componentDidMount() {\r\n        let obj = {\r\n            areas: this.props.areas,\r\n            cityId: this.props.cityId ? this.props.cityId : '',\r\n            areaId: this.props.areaId ? this.props.areaId : '',\r\n            userName: this.props.userName ? this.props.userName : '',\r\n            userEmail: this.props.userInfo.userEmail,\r\n            phones: this.props.phones,\r\n            areaName: this.props.areaName,\r\n            cityName: this.props.cityName,\r\n            photo: this.props.photo,\r\n            cities: this.props.areaId ? this.props.areas.filter(a => a.id === this.props.areaId)[0].cities : []\r\n        }\r\n\r\n        if (this.props.userInfo) {\r\n            this.setState({ ...obj })\r\n        } else {\r\n            this.props.onGetUserInfo({ id: this.props.userId, token: this.props.token })\r\n                .then(() => this.setState({ ...obj }))\r\n        }\r\n    }\r\n\r\n    componentDidUpdate(prevProps) {\r\n        if (prevProps.deletedPhoto !== this.props.deletedPhoto) {\r\n            this.props.onGetAvatarPhoto({ userId: this.props.userId })\r\n                .then(() => this.setState({ photo: this.props.updatedUserPhoto }))\r\n        } else if (prevProps.addPhoto !== this.props.addPhoto) {\r\n            this.props.onGetAvatarPhoto({ userId: this.props.userId })\r\n                .then(() => this.setState({ photo: this.props.updatedUserPhoto }))\r\n        } else if (prevProps.setMainPhoto !== this.props.setMainPhoto && this.props.setMainPhoto) {\r\n            this.props.onGetAvatarPhoto({ userId: this.props.userId })\r\n                .then(() => this.setState({ photo: this.props.updatedUserPhoto }))\r\n        } else if (prevProps.responseOnUpdateUserNameAndLocation !== this.props.responseOnUpdateUserNameAndLocation) {\r\n            this.setState({ responseOnUpdateUserNameAndLocation: this.props.responseOnUpdateUserNameAndLocation })\r\n        } else if (prevProps.responseOnPassAndEmailChange !== this.props.responseOnPassAndEmailChange && this.props.responseOnPassAndEmailChange) {\r\n            this.setState({ isDataChangeSuccess: true })\r\n        } else if (prevProps.responseOnPassAndEmailError !== this.props.responseOnPassAndEmailError && this.props.responseOnPassAndEmailError && this.props.responseOnPassAndEmailError[0]) {\r\n            this.setState({ wrongPassOrEmail: this.props.responseOnPassAndEmailError[0].message })\r\n\r\n        }\r\n    }\r\n\r\n    editNameHandler = (e) => {\r\n        if (!e.target.value.length || e.target.value.length > 2) {\r\n            this.setState({\r\n                userName: e.target.value ? e.target.value[0].toUpperCase() + e.target.value.slice(1) : \"\",\r\n                warningName: \"\"\r\n            })\r\n        } else {\r\n            this.setState({\r\n                userName: \"\",\r\n                warningName: \"Самое короткое имя - И́я (др.-греч. Ἰάς — «иониянка») — женское русское личное имя греческого происхождения\"\r\n            })\r\n        }\r\n    }\r\n\r\n    editAreaHandler = (e) => {\r\n        this.setState({ areaId: e.target.value, cityId: '', cityName: \"Выберите город\" })\r\n        this.props.areas.map(element => element.id === e.target.value ?this.setState({cities: element.cities}):null);\r\n    }\r\n\r\n    editCityHandler = (e) => {\r\n        if (!e.target.value) {\r\n            this.setState({ cityId: '' })\r\n        } else {\r\n            this.setState({ cityId: e.target.value })\r\n        }\r\n    }\r\n\r\n    buttonContactDataHandler = () => {\r\n        if (this.state.userName && this.state.cityId && this.state.areaId) {\r\n            this.setState({\r\n                responseOnUpdateUserNameAndLocation: false,\r\n                warningUpdateUserNameAndLocation: \"\"\r\n            }, () =>\r\n                this.props.onUpdateUserNameAndCity({\r\n                    token: this.props.token,\r\n                    data: {\r\n                        id: this.props.userId,\r\n                        userName: this.state.userName,\r\n                        cityId: this.state.cityId,\r\n                        areaId: this.state.areaId,\r\n                    }\r\n                }))\r\n        } else {\r\n            this.setState({\r\n                warningUpdateUserNameAndLocation: \"Все поля должны быть заполнены соответствующим образом\",\r\n                responseOnUpdateUserNameAndLocation: false\r\n            })\r\n        }\r\n    }\r\n\r\n    editEmailHandler = (e) => {\r\n        if (this.validateEmail(e.target.value)) {\r\n            this.setState({\r\n                userEmail: e.target.value,\r\n                emailInfo: \"\"\r\n            })\r\n        } else if (!e.target.value || !this.validateEmail(e.target.value)) {\r\n            this.setState({\r\n                userEmail: e.target.value,\r\n                emailInfo: \"Email должен быть формата email@email.com\"\r\n            })\r\n        }\r\n    }\r\n\r\n    editPasswordHandler = (e) => {\r\n        if (!e.target.value) {\r\n            this.setState({\r\n                passInputSucess: false,\r\n                userPassword: e.target.value,\r\n                passwordInfo: \"\"\r\n            })\r\n        } else if (e.target.value.length < 8) {\r\n            this.setState({\r\n                passInputSucess: false,\r\n                passwordInfo: \"Короткий пароль. Минимум 8 символов.\",\r\n                userPassword: e.target.value,\r\n            })\r\n        } else if (e.target.value === e.target.value.toLowerCase()) {\r\n            this.setState({\r\n                passInputSucess: false,\r\n                passwordInfo: \"Пароль должен состоять из заглавных и строчных символов.\",\r\n                userPassword: e.target.value,\r\n            })\r\n        } else if (e.target.value.match(/^(?=.*?[A-Z])(?=(.*[a-z]){1,})(?=(.*[\\d]){1,})(?=(.*[\\W]){1,})(?!.*\\s).{8,}$/)) {\r\n            this.setState({\r\n                passInputSucess: true,\r\n                userPassword: e.target.value,\r\n                passwordInfo: \"Суперпароль .\"\r\n            })\r\n        } else if (this.validatePassword(e.target.value)) {\r\n            this.setState({\r\n                passInputSucess: true,\r\n                userPassword: e.target.value,\r\n                passwordInfo: \"Надежный пароль\"\r\n            })\r\n        }\r\n    }\r\n\r\n    passwordRepeatHandler = (e) => {\r\n        if (e.target.value === \"\") {\r\n            this.setState({\r\n                passCopyInfo: \"\",\r\n                passCompareSucess: false,\r\n                userPasswordRepeat: e.target.value\r\n            })\r\n        } else if (this.state.userPassword === e.target.value) {\r\n            this.setState({\r\n                passCompareSucess: true,\r\n                passCopyInfo: \"Пароли совпали\",\r\n                userPasswordRepeat: e.target.value\r\n            })\r\n        } else if (this.state.userPassword !== e.target.value) {\r\n            this.setState({\r\n                passCopyInfo: \"Пароли должны быть одинаковые\",\r\n                userPasswordRepeat: e.target.value,\r\n                passCompareSucess: false\r\n            })\r\n        }\r\n    }\r\n\r\n    validateEmail(email) {\r\n        const re = /^(([^<>()[\\]\\\\.,;:\\s@\"]+(\\.[^<>()[\\]\\\\.,;:\\s@\"]+)*)|(\".+\"))@((\\[[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\])|(([a-zA-Z\\-0-9]+\\.)+[a-zA-Z]{2,}))$/;\r\n        return re.test(String(email).toLowerCase());\r\n    }\r\n\r\n    validatePassword(pass) {\r\n        let lowerPass = pass.toLowerCase()\r\n        if (pass.length > 7 && lowerPass !== pass) {\r\n            return true\r\n        } else {\r\n            return false\r\n        }\r\n    }\r\n\r\n    buttonLoginAndEmailHandler = () => {\r\n        if (this.validateEmail(this.state.userEmail) && this.validatePassword(this.state.userPassword) && this.state.userPasswordRepeat === this.state.userPassword) {\r\n            // this.props.onUpdateUserLoginAndPassword({\r\n            //     token: this.props.token,\r\n            //     data: {\r\n            //         id: this.props.userId,\r\n            //         userEmail: this.state.userEmail,\r\n            //         userPassword: this.state.userPassword\r\n            //     }\r\n            // })\r\n            this.setState({\r\n                wrongPassOrEmail: \"\",\r\n                isDataChangeSuccess: false,\r\n            }, () => this.props.onUpdateUserLoginAndPassword({\r\n                token: this.props.token,\r\n                data: {\r\n                    id: this.props.userId,\r\n                    userEmail: this.state.userEmail,\r\n                    userPassword: this.state.userPassword\r\n                }\r\n            }).then(() => this.setState({\r\n                userPassword: \"\",\r\n                userPasswordRepeat: \"\",\r\n                passwordInfo: \"\",\r\n                passCopyInfo: \"\", passInputSucess: \"\",\r\n                passCompareSucess: \"\"\r\n            }))\r\n            )\r\n        } else {\r\n            this.setState({\r\n                wrongPassOrEmail: \"Все поля должны быть заполнены соответствующими значениями.\",\r\n                isDataChangeSuccess: false\r\n            })\r\n        }\r\n    }\r\n\r\n    editPhoneHandler = (e) => {\r\n        if (e.target.value.match(/^\\+[0-9]{12}$/)) {\r\n            this.setState({\r\n                phoneNumber: e.target.value,\r\n                warningPhone: \"\"\r\n            })\r\n        } else {\r\n            this.setState({\r\n                warningPhone: \"Телефон должен быть формата +380*********\",\r\n                phoneNumber: e.target.value,\r\n\r\n            })\r\n        }\r\n    }\r\n\r\n    buttonRemovePhoneHandler = (id) => {\r\n        this.props.onRemovePhone({\r\n            token: this.props.token,\r\n            id,\r\n        }).then(() => this.setState({ phones: this.props.removePhoneNumbers }))\r\n    }\r\n\r\n    buttonEditPhoneHandler = () => {\r\n        if (this.state.phoneNumber.match(/^\\+[0-9]{12}$/) && this.state.phones.map(a => a.phone).indexOf(this.state.phoneNumber) === -1) {\r\n            this.props.onAddPhoneNumber({\r\n                token: this.props.token,\r\n                data: {\r\n                    phone: this.state.phoneNumber,\r\n                    userId: this.props.userId,\r\n                }\r\n            }).then(() => this.setState({\r\n                phones: this.props.addPhoneNumbers,\r\n                warningPhone: \"\",\r\n                phoneNumber: \"+380\"\r\n            }))\r\n        } else if (this.state.phones.map(a => a.phone).indexOf(this.state.phoneNumber) !== -1) {\r\n            this.setState({\r\n                warningPhone: \"Этот номер уже добавлен\"\r\n            })\r\n        } else if (!this.state.phoneNumber.match(/^\\+[0-9]{12}$/)) {\r\n            this.setState({\r\n                warningPhone: \"Телефон должен быть формата +380*********\"\r\n            })\r\n        }\r\n    }\r\n\r\n    inputPhotoHandler = async (e) => {\r\n        let photoName = \"/\" + await (await fetch('http://localhost:4000/upload/users', {\r\n            method: \"POST\",\r\n            body: e.target.files[0]\r\n        })).text()\r\n        this.props.onAddAvatar({\r\n            token: this.props.token,\r\n            data: {\r\n                photoLink: `/users${photoName}`,\r\n                userId: this.props.userId,\r\n            }\r\n        })\r\n\r\n    }\r\n\r\n    buttonRemoveProfileHandler = () => {\r\n        this.props.onRemoveUser({\r\n            token: this.props.token,\r\n            id: this.props.userId\r\n        })\r\n    }\r\n\r\n    render() {\r\n        if (this.props.userInfo) {\r\n            return (\r\n                <div className=\"container mb-5\">\r\n                    <div className=\"row\">\r\n                        <div className=\"col\">\r\n                            <div className=\"accordion mt-5 mb-5\" id=\"accordionExample\">\r\n                                <div className=\"card mb-4\">\r\n                                    <div className=\"card-header\" id=\"headingOne\">\r\n                                        <h5 className=\"mb-0\">\r\n                                            <button className=\"btn btn-link text-decoration-none\" type=\"button\" data-toggle=\"collapse\" data-target=\"#collapseOne\" aria-expanded=\"true\" aria-controls=\"collapseOne\">Изменить контактные данные</button>\r\n                                        </h5>\r\n                                    </div>\r\n                                    <div id=\"collapseOne\" className=\"collapse\" aria-labelledby=\"headingOne\" data-parent=\"#accordionExample\">\r\n                                        <div className=\"card-body\">\r\n                                            {\r\n                                                this.state.warningUpdateUserNameAndLocation ?\r\n                                                    <p className=\"inputWarning\">{this.state.warningUpdateUserNameAndLocation}</p> : null\r\n                                            }\r\n                                            <div className=\"form-group m-4\">\r\n                                                <div className=\"form-group\">\r\n                                                    <label htmlFor=\"editInputName\" className={this.state.warningName ? \"inputWarning\" : \"\"}>{this.state.warningName ? this.state.warningName : \"Сменить имя\"}</label>\r\n                                                    <input type=\"text\" onChange={this.editNameHandler.bind(this)} defaultValue={this.props.userInfo.userName} className=\"form-control\" id=\"editInputName\" placeholder=\"Example input placeholder\" />\r\n                                                </div>\r\n                                                <div className=\"d-flex \">\r\n                                                    <div className=\"col pr-0 col-lg-6 pl-0 pr-3\">\r\n                                                        <label htmlFor=\"editInputArea\">Выберите область</label>\r\n                                                        <select onChange={this.editAreaHandler.bind(this)} className=\"form-control \" id=\"editInputArea\">\r\n                                                            <option value={this.state.areaId ?this.state.areaId:''}>{this.state.areaName ? this.state.areaName :\"Выберите область\"}</option>\r\n                                                            {this.state.areas ? this.state.areas.map(a => a.areaName !== this.state.areaName ? <option value={a.id} key={a.id}>{a.areaName}</option> : null) : null}\r\n                                                        </select>\r\n                                                    </div>\r\n                                                    <div className=\"col pr-0 col-lg-6\">\r\n                                                        <label htmlFor=\"editInputCity\">Выберите город</label>\r\n                                                        <select onChange={this.editCityHandler.bind(this)} className=\"form-control\" id=\"editInputCity\">\r\n                                                            <option value={this.state.cityId ? this.state.cityId : \"\"}>{this.state.cityName ? this.state.cityName : \"Выберите город\" }</option>\r\n                                                            {this.state.cities ? this.state.cities.map(a => a.cityName !== this.state.cityName ? <option key={a.id} value={a.id}>{a.cityName}</option> : null) : null}\r\n                                                        </select>\r\n                                                    </div>\r\n                                                </div>\r\n                                                {\r\n                                                    this.state.responseOnUpdateUserNameAndLocation ? (\r\n                                                        <Alert className=\"mb-3 mt-3 text-center\" variant=\"success\" onClose={() => this.setState({ responseOnUpdateUserNameAndLocation: false })} dismissible>\r\n                                                            <Alert.Heading>Изменения успешно сохранены.</Alert.Heading>\r\n                                                        </Alert>) : null\r\n                                                }\r\n                                                <span className=\"d-flex justify-content-center m-4\">\r\n                                                    <button type=\"button\" onClick={this.buttonContactDataHandler} className=\"btn btn-lg btn-primary\">Coxpaнить</button>\r\n                                                </span>\r\n                                            </div>\r\n                                        </div>\r\n                                    </div>\r\n                                </div>\r\n                                <div className=\"card mb-4\">\r\n                                    <div className=\"card-header\" id=\"headingTwo\">\r\n                                        <h5 className=\"mb-0\">\r\n                                            <button className=\"btn btn-link text-decoration-none\" type=\"button\" data-toggle=\"collapse\" data-target=\"#collapseTwo\" aria-expanded=\"true\" aria-controls=\"collapseOne\">Изменить логин и пароль</button>\r\n                                        </h5>\r\n                                    </div>\r\n                                    <div id=\"collapseTwo\" className=\"collapse\" aria-labelledby=\"headingTwo\" data-parent=\"#accordionExample\">\r\n                                        <div className=\"card-body\">\r\n                                            <div className=\"form-group m-4\">\r\n                                                <p className=\"inputWarning\">{this.state.wrongPassOrEmail}</p>\r\n                                                <div className=\"form-group\">\r\n                                                    <label htmlFor=\"inputSettingsEmail\" className={this.state.emailInfo ? \"inputWarning mb-1\" : \"mb-1 text-muted\"}>{this.state.emailInfo ? this.state.emailInfo : \"Сменить email\"}</label>\r\n                                                    <input onChange={this.editEmailHandler.bind(this)} defaultValue={this.state.userEmail} type=\"email\" className=\"form-control\" id=\"inputSettingsEmail\" placeholder=\"Another input placeholder\" />\r\n                                                </div>\r\n                                                <div className=\"form-group\">\r\n                                                    <label htmlFor=\"inputSettingsPassword\" className={this.state.passInputSucess ? \"inputSucess mb-1\" : this.state.passwordInfo ? \"inputWarning mb-1\" : \"mb-1 text-muted\"}>{this.state.passwordInfo ? this.state.passwordInfo : \"Введите новый пароль\"}</label>\r\n                                                    <input onChange={this.editPasswordHandler.bind(this)} type=\"password\" value={this.state.userPassword} className=\"form-control\" id=\"inputSettingsPassword\" placeholder=\"Example input placeholder\" />\r\n                                                </div>\r\n                                                <div className=\"form-group\">\r\n                                                    <label htmlFor=\"inputSettingsPasswordRepeat\" className={this.state.passCompareSucess ? \"inputSucess mb-1\" : this.state.passCopyInfo ? \"inputWarning mb-1\" : \"mb-1 text-muted\"}>{this.state.passCopyInfo ? this.state.passCopyInfo : \"Повторите новый пароль\"}</label>\r\n                                                    <input type=\"password\" onChange={this.passwordRepeatHandler.bind(this)} value={this.state.userPasswordRepeat} className=\"form-control\" id=\"finputSettingsPasswordRepeat\" placeholder=\"Another input placeholder\" />\r\n                                                </div>\r\n                                                {\r\n                                                    this.state.isDataChangeSuccess ? (<Alert variant=\"success\" onClose={() => this.setState({ isDataChangeSuccess: false })} dismissible>\r\n                                                        <Alert.Heading className=\"mb-3 mt-3 text-center\">Данные успешно сохранены.</Alert.Heading>\r\n                                                    </Alert>) : null\r\n                                                }\r\n                                                <span className=\"d-flex justify-content-center m-4\">\r\n                                                    <button onClick={this.buttonLoginAndEmailHandler} type=\"button\" className=\"btn btn-lg btn-primary\">Coxpaнить</button>\r\n                                                </span>\r\n                                            </div>\r\n                                        </div>\r\n                                    </div>\r\n                                </div>\r\n                                <div className=\"card mb-4\">\r\n                                    <div className=\"card-header\" id=\"headingThree\">\r\n                                        <h5 className=\"mb-0\">\r\n                                            <button className=\"btn btn-link text-decoration-none\" type=\"button\" data-toggle=\"collapse\" data-target=\"#collapseThree\" aria-expanded=\"true\" aria-controls=\"collapseOne\">Редактировать номера телефонов</button>\r\n                                        </h5>\r\n                                    </div>\r\n                                    <div id=\"collapseThree\" className=\"collapse\" aria-labelledby=\"headingThree\" data-parent=\"#accordionExample\">\r\n                                        <div className=\"card-body\">\r\n                                            <div className=\"form-group m-4\">\r\n                                                <div className=\"form-group\">\r\n                                                    <div className=\"d-flex flex-column\">\r\n                                                        {this.state.phones ? this.state.phones.map(a => <div className=\"d-flex w-50\" key={a.id} ><p>{a.phone}</p> <p className=\"cursor-pointer primary-color-for-text ml-3\" onClick={() => this.buttonRemovePhoneHandler(a.id)} name={a.id} > Удалить номер</p></div>) : null}\r\n                                                    </div>\r\n                                                    <label htmlFor=\"inputSettingsPhone\" className={this.state.warningPhone ? \"inputWarning\" : \"\"}>{this.state.warningPhone ? this.state.warningPhone : \"Добавить телефон\"}</label>\r\n                                                    <input onChange={this.editPhoneHandler.bind(this)} value={this.state.phoneNumber} type=\"phone\" className=\"form-control\" id=\"inputSettingsPhone\" placeholder=\"Another input placeholder\" />\r\n                                                </div>\r\n                                                <span className=\"d-flex justify-content-center m-4\">\r\n                                                    <button onClick={this.buttonEditPhoneHandler} type=\"button\" className=\"btn btn-lg btn-primary\">Coxpaнить</button>\r\n                                                </span>\r\n                                            </div>\r\n                                        </div>\r\n                                    </div>\r\n                                </div>\r\n                                <div className=\"card mb-4\">\r\n                                    <div className=\"card-header\" id=\"headingFour\">\r\n                                        <h5 className=\"mb-0\">\r\n                                            <button className=\"btn btn-link text-decoration-none\" type=\"button\" data-toggle=\"collapse\" data-target=\"#collapseFour\" aria-expanded=\"true\" aria-controls=\"collapseOne\">Добавить фото</button>\r\n                                        </h5>\r\n                                    </div>\r\n                                    <div id=\"collapseFour\" className=\"collapse\" aria-labelledby=\"headingFour\" data-parent=\"#accordionExample\">\r\n                                        <div className=\"card-body\">\r\n                                            <div className=\"form-group m-4\">\r\n                                                <div className=\"custom-file\">\r\n                                                    {this.state.photo ? <PHOTO_GALLERY_W photo={this.state.photo} token={this.props.token} /> : null}\r\n                                                    <input onChange={this.inputPhotoHandler.bind(this)} type=\"file\" name=\"file\" />\r\n                                                </div>\r\n                                            </div>\r\n                                        </div>\r\n                                    </div>\r\n                                </div>\r\n                                <div className=\"card mb-4\">\r\n                                    <div className=\"card-header\" id=\"headingFive\">\r\n                                        <h5 className=\"mb-0\">\r\n                                            <button className=\"btn btn-link collapsed text-decoration-none\" type=\"button\" data-toggle=\"collapse\" data-target=\"#collapseFive\" aria-expanded=\"false\" aria-controls=\"collapseFive\">Удалить профайл</button>\r\n                                        </h5>\r\n                                    </div>\r\n                                    <div id=\"collapseFive\" className=\"collapse\" aria-labelledby=\"heading\" data-parent=\"#accordionExample\">\r\n                                        <div className=\"card-body\">\r\n                                            <div className=\"form-group m-4\">\r\n                                                <span className=\"d-flex justify-content-center m-4\">\r\n                                                    <button type=\"button\" onClick={this.buttonRemoveProfileHandler} className=\"btn btn-lg btn-primary\">Удалить профайл</button>\r\n                                                </span>\r\n                                            </div>\r\n                                        </div>\r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            )\r\n        } else {\r\n            return <Loader />\r\n        }\r\n    }\r\n}\r\n\r\nexport default Settings;","import { connect } from 'react-redux';\r\nimport Settings from '../settings';\r\nimport mapStateToProps from '../../store/mapStateToProps';\r\nimport mapDispatchToProps from '../../store/mapDispatchToProps';\r\n\r\nconst SETTINGS_W = connect(mapStateToProps(\"Settings\"), mapDispatchToProps(\"Settings\"))(Settings);\r\n\r\nexport default SETTINGS_W;","import React from 'react';\r\nimport Loader from './loader'\r\nimport ANNOUNCEMENT_CARD_W from './wrappers/announcement_card_w'\r\nimport { NavLink } from 'react-router-dom'\r\n\r\nclass OwnAnnouncements extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            announcements: '',\r\n            favourite: '',\r\n        }\r\n    }\r\n\r\n    componentDidMount() {\r\n        this.props.onSearchLikes({ id: this.props.userId, token: this.props.token })\r\n            .then(() =>this.props.favourite ? this.setState({ favourite: this.props.favourite.map(a => a.announcement ? a.announcement.id : null) }):null)\r\n        this.props.onFindOwnAnnouncements({ id: this.props.userId, token: this.props.token })\r\n            .then(() => this.setState({ announcements: this.props.announcements }))\r\n\r\n    }\r\n\r\n\r\n    render() {\r\n        if (this.props.announcements && this.props.favourite) {\r\n            return (\r\n                <>\r\n                    {\r\n                        this.props.announcements.length ? this.props.announcements.map(a => {\r\n                            return <ANNOUNCEMENT_CARD_W key={a.id}\r\n                                announcement={a}\r\n                                identifier={a.id}\r\n                                history={this.props.history}\r\n                                userLikes={this.state.favourite}\r\n                            />\r\n                        }) : <div className=\"d-flex flex-column mx-auto justify-content-around\"  >\r\n                                <h3 className=\"text-center mt-5 mb-5\">Нет объявлений</h3>\r\n                                <NavLink to=\"/\" className=\"btn btn-outline-primary mb-3 mx-auto\">Перейти на главную</NavLink>\r\n                                <NavLink to=\"/create_announcement\" className=\"btn btn-outline-warning mb-3 mx-auto\">Подать объявление</NavLink>\r\n                            </div>\r\n                    }\r\n                </>\r\n            )\r\n        } else {\r\n            return <Loader />\r\n        }\r\n    }\r\n}\r\n\r\nexport default OwnAnnouncements;","import { connect } from 'react-redux';\r\nimport OwnAnnouncements from '../ownAnnouncements';\r\nimport mapStateToProps from '../../store/mapStateToProps';\r\nimport mapDispatchToProps from '../../store/mapDispatchToProps';\r\n\r\nconst OWN_ANNOUNCEMENTS_W = connect(mapStateToProps(\"OwnAnnouncements\"), mapDispatchToProps(\"OwnAnnouncements\"))(OwnAnnouncements);\r\n\r\nexport default OWN_ANNOUNCEMENTS_W;\r\n","import React from 'react';\r\nimport { Switch, NavLink } from 'react-router-dom'\r\nimport SETTINGS_W from './wrappers/settings_w'\r\nimport OWN_ANNOUNCEMENTS_W from './wrappers/own_announcements_w'\r\nimport { PrivateRoute } from '../helpers'\r\nimport Loader from './loader'\r\n\r\nclass Profile extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            title: \"Мои объявления\",\r\n            avatar: '',\r\n            userName: \"\",\r\n        };\r\n    }\r\n\r\n    componentDidMount() {\r\n        this.props.onGetUserInfo({ id: this.props.userId, token: this.props.token })\r\n            .then(() => this.props.avatar ? this.props.avatar.forEach(a => a.isMain ? this.setState({ avatar: a.photoLink }) : null) : null)\r\n            .then(() => this.props.user ? this.setState({ userName: this.props.user.userName }):null)\r\n    }\r\n\r\n    componentDidUpdate(prevProps) {\r\n        if (prevProps.updatedUserPhoto !== this.props.updatedUserPhoto && this.props.updatedUserPhoto) {\r\n            let test = this.props.updatedUserPhoto.map(a => a.isMain ? (this.setState({ avatar: a.photoLink }), true) : null)\r\n            if (this.props.updatedUserPhoto[0] && test.indexOf(true) < 0) {\r\n                this.setState({ avatar: this.props.updatedUserPhoto[0].photoLink })\r\n            } else if (!this.props.updatedUserPhoto[0]) {\r\n                this.setState({ avatar: \"\" })\r\n            }\r\n        } else if (prevProps.userName !== this.props.userName) {\r\n            this.setState({ userName: this.props.userName })\r\n        }\r\n    }\r\n\r\n    logOutHandler = () => {\r\n        this.props.onLogOut()\r\n    }\r\n\r\n    onClickPointHandler = (e) => {\r\n        this.setState({ title: e.target.innerText })\r\n    }\r\n\r\n    render() {\r\n        if (this.props.user) {\r\n            return (\r\n                <div className=\"pt-5 mb-5\">\r\n                    <div className=\"container \">\r\n                        <div className=\"d-flex justify-content-between p-4\">\r\n                            <div className=\"d-flex flex-column justify-content-between\">\r\n                                <h2 className=\"text-center mb-5\">{this.state.title}</h2>\r\n                                <div className=\"row d-flex \">\r\n                                    <NavLink className={this.props.location.pathname === \"/profile/own_announcements\" ? \"mr-5 text-decoration-none currentLink\" : \"mr-5 text-decoration-none\"} key=\"1\" onClick={this.onClickPointHandler.bind(this)} to=\"/profile/own_announcements\">Мои oбъявления</NavLink>\r\n                                    <NavLink className={this.props.location.pathname === \"/profile/own_settings\" ? \"mr-5 text-decoration-none currentLink\" : \"mr-5 text-decoration-none\"} key=\"3\" onClick={this.onClickPointHandler.bind(this)} to=\"/profile/own_settings\">Мои настройки</NavLink>\r\n                                    <NavLink className=\"mr-5 text-decoration-none\" key=\"4\" onClick={this.logOutHandler} to=\"/\">Выйти из учетной записи</NavLink>\r\n                                </div>\r\n                            </div>\r\n                            <NavLink className=\"text-decoration-none d-flex flex-column justify-content-between\" onClick={() => this.setState({ title: \"Мои настройки\" })} to=\"/profile/own_settings\">\r\n                                <img className=\"rounded-circle img-fluid objectFit border border-primary p-1 mx-auto\"\r\n                                    style={{ width: \"100px\", height: \"100px\" }} src={this.state.avatar ? this.state.avatar : \"/content/info/without-photo.png\"} alt=\"...\" />\r\n                                <p className=\"text-center  m-0 text-primary font-weight-bolder\">{this.state.userName ? this.state.userName : \"\"}</p>\r\n                            </NavLink>\r\n                        </div>\r\n                        <div className=\"row bg-light p-5\">\r\n                            <Switch>\r\n                                <PrivateRoute path=\"/profile/own_announcements\" component={OWN_ANNOUNCEMENTS_W} exact />\r\n                                <PrivateRoute path=\"/profile/own_settings\" component={SETTINGS_W} exact />\r\n                            </Switch>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            )\r\n        } else {\r\n            return <Loader />\r\n        }\r\n\r\n    }\r\n}\r\n\r\nexport default Profile;","import { connect } from 'react-redux';\r\nimport Profile from '../profile';\r\nimport mapStateToProps from '../../store/mapStateToProps';\r\nimport mapDispatchToProps from '../../store/mapDispatchToProps';\r\n\r\nconst PROFILE_W = connect(mapStateToProps(\"Profile\"), mapDispatchToProps(\"Profile\"))(Profile);\r\n\r\nexport default PROFILE_W;\r\n","import React from 'react';\r\nimport ANNOUNCEMENT_CARD_W from './wrappers/announcement_card_w'\r\nimport Loader from './loader'\r\nimport { NavLink } from 'react-router-dom'\r\n\r\n\r\nclass Favourite extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      announcements: '',\r\n      favourite: ''\r\n    }\r\n  }\r\n\r\n  componentDidMount() {\r\n    this.props.onSearchFavourite({ id: this.props.userId, token: this.props.token })\r\n      .then(() => {\r\n        if (this.props.announcements) {\r\n          this.setState({\r\n            announcements: this.props.announcements,\r\n            favourite: this.props.announcements.map(a => a.announcement ? a.announcement.id : null)\r\n          })\r\n        }\r\n      })\r\n  }\r\n\r\n  componentDidUpdate(prevProps) {\r\n    if (prevProps.responseCreateLike !== this.props.responseCreateLike) {\r\n      this.props.onSearchFavourite({ id: this.props.userId, token: this.props.token })\r\n        .then(() => this.setState({\r\n          announcements: this.props.announcements,\r\n          favourite: this.props.announcements.map(a => a.announcement ? a.announcement.id : null)\r\n        }))\r\n    }\r\n  }\r\n\r\n\r\n  render() {\r\n    if (this.state.announcements && this.state.favourite) {\r\n      return (\r\n        <div className={this.state.announcements.length ?\"bg-light p-5 mb-5\":\"bg-light p-5 mb-5 min-vw-100 min-vh-100 \"}>\r\n          <div className=\"container mt-5\">\r\n            <h2 className=\"text-center mb-5 \">Избранные объявления</h2>\r\n            <div className=\"row d-flex \">\r\n              {\r\n                this.state.announcements.length > 0 ? this.state.announcements.map(a =>\r\n                  a.announcement ?\r\n                    (<ANNOUNCEMENT_CARD_W key={a.announcement.id}\r\n                      announcement={a.announcement}\r\n                      identifier={a.announcement.id}\r\n                      history={this.props.history}\r\n                      userLikes={this.state.favourite}\r\n                    />) : null) :\r\n                  <div className=\"d-flex flex-column mx-auto justify-content-around \" >\r\n                    <h3 className=\"text-center mt-5 mb-5\">Пока нет ничего в избранных</h3>\r\n                    <NavLink to=\"/\" className=\"btn btn-outline-primary w-75 mb-3 mx-auto\">Перейти на главную</NavLink>\r\n                    <NavLink to=\"/create_announcement\" className=\"btn btn-outline-warning w-75 mb-3 mx-auto\">Подать объявление</NavLink>\r\n                  </div>\r\n              }\r\n            </div>\r\n          </div>\r\n        </div>\r\n      )\r\n    } else {\r\n      return <Loader />\r\n    }\r\n  }\r\n}\r\n\r\nexport default Favourite;","import { connect } from 'react-redux';\r\nimport Favourite from '../favourite';\r\nimport mapStateToProps from '../../store/mapStateToProps';\r\nimport mapDispatchToProps from '../../store/mapDispatchToProps';\r\n\r\nconst FAVOURITE_W = connect(mapStateToProps(\"Favourite\"), mapDispatchToProps(\"Favourite\"))(Favourite);\r\n\r\nexport default FAVOURITE_W;\r\n","import React from 'react';\r\nimport {NavLink} from 'react-router-dom'\r\n\r\nclass NotFound extends React.Component {\r\n    render() {console.log(this.props)\r\n        return (\r\n            <div className=\"bg-light p-5 mb-5 min-vw-100 min-vh-100\">\r\n                <div className=\"container mt-5 d-flex flex-column justify-content-center\">\r\n                        <h2 className=\"text-center mb-5\">Страница не найдена</h2>\r\n                        <span className=\"w-100 d-flex justify-content-center\">\r\n                        <NavLink to=\"/\" className=\"btn btn-outline-primary w-25\">На главную</NavLink>\r\n                        </span>\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default NotFound;","import React from 'react';\r\n\r\nclass LogIn extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      userEmail: '',\r\n      userPassword: '',\r\n      loginWarning: \"\",\r\n    };\r\n  }\r\n  emailHandler = (e) => {\r\n    this.setState({ userEmail: e.target.value })\r\n  }\r\n\r\n  passwordHandler = (e) => {\r\n    this.setState({ userPassword: e.target.value })\r\n  }\r\n\r\n  validateEmail(email) {\r\n    const re = /^(([^<>()[\\]\\\\.,;:\\s@\"]+(\\.[^<>()[\\]\\\\.,;:\\s@\"]+)*)|(\".+\"))@((\\[[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\])|(([a-zA-Z\\-0-9]+\\.)+[a-zA-Z]{2,}))$/;\r\n    return re.test(String(email).toLowerCase());\r\n  }\r\n\r\n  validatePassword(pass) {\r\n    let lowerPass = pass.toLowerCase()\r\n    if (pass.length > 7 && lowerPass !== pass) {\r\n      return true\r\n    } else {\r\n      return false\r\n    }\r\n  }\r\n\r\n  onLoginHandler = (e) => {\r\n    if (this.validateEmail(this.state.userEmail) && this.validatePassword(this.state.userPassword)) {\r\n      this.setState({ loginWarning: \"\" })\r\n      try {\r\n        this.props.onLogin(this.state.userEmail, this.state.userPassword)\r\n          .then(() => this.props.token ?\r\n            (this.setState({\r\n              userEmail: '',\r\n              userPassword: '',\r\n              loginWarning: \"\",\r\n            }),\r\n              this.props.history.push(this.props.previousURL ? this.props.previousURL : \"/profile\")) :\r\n            this.props.logInErr ?\r\n            (this.props.onRedirect(this.props.previousURL),\r\n              this.setState({ loginWarning: this.props.logInErr[0].message })) :\r\n              this.setState({ loginWarning: \"\" }))\r\n      } catch (error) {\r\n        console.log(error)\r\n        window.location.replace(this.props.previousURL)\r\n      }\r\n    } else {\r\n      this.setState({ loginWarning: \"Оба поля должны быть заполнены сответствующими значениями.\" })\r\n    }\r\n  }\r\n\r\n  onRegisterHandler = () => {\r\n    this.props.history.push(\"/registration\")\r\n  }\r\n\r\n  render() {\r\n\r\n    return (\r\n      <div className=\"bg-light mb-5 p-5 min-vw-100 min-vh-100\">\r\n        <div className=\"form_signin form-check\">\r\n          <p className=\"inputWarning\">{this.state.loginWarning}</p>\r\n          <p className=\"mb-3 text-muted\">Ваш email</p>\r\n          <label htmlFor=\"inputEmail\" className=\"sr-only\"></label>\r\n          <input onChange={this.emailHandler} type=\"email\" className=\"form-control mb-3\" placeholder=\"Email\" required autoFocus />\r\n          <p className=\"mb-3 text-muted\">Ваш пароль</p>\r\n          <label htmlFor=\"inputPassword\" className=\"sr-only\"></label>\r\n          <input type=\"password\" onChange={this.passwordHandler} className=\"form-control mb-3\" placeholder=\"Password\" required />\r\n          <div className=\"d-flex justify-content-between\">\r\n            <button onClick={this.onLoginHandler} type=\"button\" className=\"btn btn-lg btn-primary \">Войти</button>\r\n            <button onClick={this.onRegisterHandler} type=\"button\" className=\"btn btn-lg btn-success \">Регистрация</button>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    )\r\n  }\r\n}\r\n\r\nexport default LogIn;\r\n\r\n","import { connect } from 'react-redux';\r\nimport LogIn from '../logIn';\r\nimport mapStateToProps from '../../store/mapStateToProps';\r\nimport mapDispatchToProps from '../../store/mapDispatchToProps';\r\n\r\nconst LogIn_W = connect(mapStateToProps(\"LogIn\"), mapDispatchToProps(\"LogIn\"))(LogIn);\r\n\r\nexport default LogIn_W;\r\n","import React from 'react';\r\nimport Carousel from 'react-bootstrap/Carousel'\r\n\r\nclass Slider extends React.Component {\r\n    constructor(props){\r\n        super(props);\r\n        this.state = {\r\n            images:[]\r\n        }\r\n    }\r\n\r\n    componentDidMount(){\r\n        this.setState({images:this.props.images})\r\n    }\r\n\r\n    render() {\r\n        if(this.state.images.length>0 ){\r\n        return (\r\n            <Carousel className=\"mt-3 mb-3 border border-primary\" style={{maxWidth:\"520px\"}}>\r\n                {\r\n                this.state.images.map((a,index) => {\r\n                        return (\r\n                            <Carousel.Item key={index+1}>\r\n                                <img \r\n                                    className=\"d-block d-flex flex-grow-0 flex-shrink-0\" \r\n                                    style={{width: \"100%\",height: \"auto\"}}\r\n                                    src={a}\r\n                                    alt={a}\r\n                                />\r\n                            </Carousel.Item>\r\n                        )\r\n                    })\r\n                }\r\n            </Carousel>\r\n        )}else{\r\n            return null\r\n        }\r\n    }\r\n}\r\n\r\nexport default Slider;","import React from 'react';\r\nimport Loader from './loader'\r\nimport Slider from './slider'\r\n\r\nclass CreateAnnouncement extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            areas: [],\r\n            cities: [],\r\n            currencies: [],\r\n            categories: [],\r\n            subCategories: [],\r\n            // -------------------------------\r\n            header: '',\r\n            description: '',\r\n            ireaId: '',\r\n            cityId: '',\r\n            categoryId: '',\r\n            subCategoryId: '',\r\n            price: '',\r\n            currencyId: '',\r\n            hasDelivery: false,\r\n            photo: [],\r\n            redirect: false,\r\n            //-----------------------validators\r\n            announcementRejectionCause: '',\r\n            headerInfo: '',\r\n            headerWarning: false,\r\n            descriptionInfo: '',\r\n            descriptionWarning: false,\r\n            priceInfo: '',\r\n            priceWarning: false,\r\n        }\r\n\r\n    }\r\n\r\n    componentDidMount() {\r\n        if (this.props.data) {\r\n            this.setState({\r\n                areas: this.props.areas,\r\n                categories: this.props.categories,\r\n                currencies: this.props.currencies,\r\n            })\r\n        } else {\r\n            this.props.onAnnouncementParams().then(() =>\r\n                this.setState({\r\n                    areas: this.props.areas,\r\n                    categories: this.props.categories,\r\n                    currencies: this.props.currencies,\r\n                })\r\n            )\r\n        }\r\n    }\r\n\r\n    componentDidUpdate(prevProps) {\r\n        if (prevProps.report !== this.props.report && this.props.report) {\r\n            this.setState({ redirect: true })\r\n        }\r\n    }\r\n\r\n    requestHeaderHandler = (e) => {\r\n        if (e.target.value.length && e.target.value.length <= 100) {\r\n            this.setState({\r\n                header: e.target.value,\r\n                headerInfo: `Длина заголовка-${e.target.value.length} . Oсталось ${100 - e.target.value.length} символов.`,\r\n                headerWarning: false,\r\n            })\r\n\r\n        } else if (e.target.value.length > 100) {\r\n            this.setState({\r\n                headerInfo: `Длина заголовка-${e.target.value.length} максимальная длина 100 символов.`,\r\n                headerWarning: true,\r\n                header: e.target.value,\r\n            })\r\n        } else {\r\n            this.setState({\r\n                header: \"\",\r\n                headerInfo: \"\",\r\n                headerWarning: false,\r\n            })\r\n        }\r\n    }\r\n\r\n    inputDescriptionHandler = (e) => {\r\n        if (e.target.value.length && e.target.value.length <= 10000) {\r\n            this.setState({\r\n                description: e.target.value,\r\n                descriptionInfo: `Длина описания-${e.target.value.length} . Oсталось ${10000 - e.target.value.length} символов.`,\r\n                descriptionWarning: false,\r\n            })\r\n\r\n        } else if (e.target.value.length > 10000) {\r\n            this.setState({\r\n                descriptionInfo: `Длина заголовка-${e.target.value.length} максимальная длина 10000 символов.`,\r\n                descriptionWarning: true,\r\n                description: e.target.value,\r\n            })\r\n        } else {\r\n            this.setState({\r\n                description: \"\",\r\n                descriptionInfo: \"\",\r\n                descriptionWarning: false,\r\n            })\r\n        }\r\n    }\r\n\r\n    requestAreaHandler = (e) => {\r\n        if (e.target.value === \"true\") {\r\n            this.setState({ areaId: '', cityId: '', cities: [] })\r\n        } else {\r\n            this.setState({ areaId: e.target.value, cityId: ''})\r\n        }\r\n        this.state.areas.forEach(element => {\r\n            if (element.id === e.target.value) {\r\n                this.setState({\r\n                    cities: element.cities\r\n                })\r\n            }\r\n        });\r\n    }\r\n\r\n    requestCityHandler = (e) => {\r\n        if (e.target.value === \"true\") {\r\n            this.setState({ cityId: '' })\r\n        } else {\r\n            this.setState({ cityId: e.target.value})\r\n        }\r\n    }\r\n\r\n    selectCategoryHandler = (e) => {\r\n        if (e.target.value === \"true\") {\r\n            this.setState({ categoryId: '', subCategoryId: '', subCategories: [] })\r\n        } else {\r\n            this.setState({ categoryId: e.target.value, subCategoryId: ''})\r\n        }\r\n        this.state.categories.forEach(i => {\r\n            if (i.id === e.target.value) {\r\n                this.setState({ subCategories: i.subcategories })\r\n            }\r\n        })\r\n    }\r\n\r\n    selectSubCategoryHandler = (e) => {\r\n        if (e.target.value === \"true\") {\r\n            this.setState({ subCategoryId: '' })\r\n        } else {\r\n            this.setState({ subCategoryId:e.target.value})\r\n        }\r\n    }\r\n\r\n    inputPriceHandler = (e) => {\r\n        if (e.target.value < 0) {\r\n            this.setState({\r\n                price: e.target.value,\r\n                priceInfo: \"Цена не может быть отрицательной.\",\r\n                priceWarning: true,\r\n            })\r\n        } else if (e.target.value > 9999999.99) {\r\n            this.setState({\r\n                price: e.target.value,\r\n                priceInfo: \"Максимальная цена - 9999999.99\",\r\n                priceWarning: true,\r\n            })\r\n        } else {\r\n            this.setState({\r\n                price: +e.target.value,\r\n                priceInfo: \"\",\r\n                priceWarning: false,\r\n            })\r\n        }\r\n    }\r\n\r\n    selectCurrencyHandler = (e) => {\r\n        this.setState({currencyId:e.target.value})\r\n    }\r\n\r\n    inputPhotoHandler = async (e) => {\r\n        let photoName = \"/\" + await (await fetch('http://localhost:4000/upload/announcements', {\r\n            method: \"POST\",\r\n            body: e.target.files[0]\r\n        })).text()\r\n        let arr = this.state.photo\r\n        arr.push(\"/announcements\" + photoName)\r\n        this.setState({ photo: arr })\r\n    }\r\n\r\n    checkHasDeliveryHandler = () => {\r\n        this.setState({ hasDelivery: !this.state.hasDelivery })\r\n    }\r\n    roundToTwo(num) {    \r\n        return +(Math.floor(num + \"e+2\")  + \"e-2\");\r\n    }\r\n\r\n    sendAnnouncementHandler = () => {\r\n        let obj = {\r\n            body: {\r\n                announcementHeader: this.state.header,\r\n                announcementText: this.state.description,\r\n                announcementPrice: this.roundToTwo(this.state.price),\r\n                hasDelivery: this.state.hasDelivery,\r\n                userId: this.props.userId,\r\n                areaId: this.state.areaId,\r\n                cityId: this.state.cityId,\r\n                currencyId: this.state.currencyId ? this.state.currencyId : 1,\r\n                categoryId: this.state.categoryId,\r\n                subCategoryId: this.state.subCategoryId,\r\n                photoLink: this.state.photo\r\n            },\r\n            token: this.props.token\r\n        }\r\n\r\n        if (obj.body.announcementHeader &&\r\n            obj.body.announcementText &&\r\n            obj.body.announcementPrice >= 0 &&\r\n            obj.body.areaId &&\r\n            obj.body.cityId &&\r\n            obj.body.categoryId &&\r\n            obj.body.subCategoryId&&\r\n            !this.state.descriptionWarning&&\r\n            !this.state.headerWarning &&\r\n            !this.state.priceWarning\r\n            ) {\r\n            this.props.onCreateAnnouncement(obj)\r\n                .then(() => this.setState({\r\n                    isVisible: this.props.report,\r\n                    photo: [],\r\n                    announcementRejectionCause: \"\",\r\n                }, () => this.state.redirect ? this.props.history.push(`/announcement-action-result/${this.props.report}`) : null))\r\n        } else {\r\n            this.setState({ announcementRejectionCause: \"Все поля помеченные звездочкой должны быть заполнены.\" })\r\n        }\r\n\r\n    }\r\n\r\n    render() {\r\n        if (this.props.data) {\r\n            return (\r\n                <div className=\"container mb-5 p-5\">\r\n                    <div className=\"row mb-5\">\r\n                        <div className=\"col\">\r\n                            <div className=\"form-group pl-3 pr-3\">\r\n                                <label htmlFor=\"exampleInputEmail1\" className=\"necessaryInput\">Заголовок</label>\r\n                                <p className={this.state.headerWarning ? \"inputWarning\" : \"inputSucess \"}>{this.state.headerInfo}</p>\r\n                                <input onChange={this.requestHeaderHandler.bind(this)} value={this.state.header} type=\"text\" className=\"form-control\" id=\"exampleInputEmail1\" aria-describedby=\"emailHelp\" />\r\n                            </div>\r\n                            <div className=\"form-group pl-3 pr-3\">\r\n                                <label htmlFor=\"exampleFormControlTextarea1\" className=\"necessaryInput\">Подробное описание объявления</label>\r\n                                <p className={this.state.descriptionWarning ? \"inputWarning\" : \"inputSucess \"}>{this.state.descriptionInfo}</p>\r\n                                <textarea value={this.state.description} onChange={this.inputDescriptionHandler.bind(this)} className=\"form-control\" style={{ height: \"300px\", width: \"100%\" }} id=\"exampleFormControlTextarea1\" rows=\"3\"></textarea>\r\n                            </div>\r\n                            <div className=\"d-flex flex-wrap\" >\r\n                                <div className=\"col col-lg-6 col-sm-12 col-12\">\r\n                                    <label htmlFor=\"selectCategory\" className=\"necessaryInput\">Категория</label>\r\n                                    <select onChange={this.selectCategoryHandler.bind(this)} className=\"form-control\" id=\"selectCategory\">\r\n                                        <option value>Выберите категорию</option>\r\n                                        {this.state.categories ? this.state.categories.map(a => <option key={a.id} value={a.id}>{a.categoryName}</option>) : null}\r\n\r\n                                    </select>\r\n                                </div>\r\n                                <div className=\"col col-lg-6 col-sm-12 col-12\">\r\n                                    <label htmlFor=\"selectSubcategory\" className=\"necessaryInput\">Подкатегория</label>\r\n                                    <select onChange={this.selectSubCategoryHandler.bind(this)} className=\"form-control\" id=\"selectSubcategory\">\r\n                                        <option value>Выберите подкатегорию</option>\r\n                                        {this.state.subCategories ? this.state.subCategories.map(a => <option key={a.id} value={a.id}>{a.subCategoryName}</option>) : null}\r\n                                    </select>\r\n                                </div>\r\n                            </div>\r\n                            <div className=\"d-flex mt-3 flex-wrap\">\r\n                                <div className=\"col col-lg-6 col-sm-12 col-12\">\r\n                                    <label htmlFor=\"inputArea\" className=\"necessaryInput\">Выберите область</label>\r\n                                    <select onChange={this.requestAreaHandler.bind(this)} className=\"form-control \" id=\"inputArea\">\r\n                                        <option value>Выберите область</option>\r\n                                        {this.state.areas ? this.state.areas.map(a => <option value={a.id} key={a.id}>{a.areaName}</option>) : null}\r\n                                    </select>\r\n                                </div>\r\n                                <div className=\"col col-lg-6 col-sm-12 col-12\">\r\n                                    <label htmlFor=\"inputCity\" className=\"necessaryInput\">Выберите город</label>\r\n                                    <select onChange={this.requestCityHandler.bind(this)} className=\"form-control\" id=\"inputCity\">\r\n                                        <option value>Выберите город</option>\r\n                                        {this.state.cities ? this.state.cities.map(a => <option key={a.id} value={a.id}>{a.cityName}</option>) : null}\r\n                                    </select>\r\n                                </div>\r\n                            </div>\r\n                            {this.state.photo ? <div className=\"w-50 m-auto p-3 border-\"><Slider images={this.state.photo} /></div> : null}\r\n                            <div className=\"d-flex mt-3 mb-3 flex-wrap\">\r\n                                <div className=\"col col-lg-3 col-sm-12 col-12\">\r\n                                    <label htmlFor=\"inputSelectCurrency\" id=\"inputMaxPrice\">Bалютa</label>\r\n                                    <select className=\"form-control\" onChange={this.selectCurrencyHandler.bind(this)} id=\"inputSelectCurrency\">\r\n                                        {this.state.currencies ? this.state.currencies.map(a => <option key={a.id} value={a.id} >{a.currencySymbol}</option>) : null}\r\n                                    </select>\r\n                                </div>\r\n                                <div className=\"col col-lg-3 col-sm-12 col-12\">\r\n                                    <label htmlFor=\"price pl-0\" className={this.state.priceWarning ? \"inputWarning \" : \"necessaryInput\"}>{this.state.priceInfo ? this.state.priceInfo : \"Цена\"}</label>\r\n                                    <input className=\"form-control\" value={this.state.price} onChange={this.inputPriceHandler} min=\"0\" max=\"9999999\" type=\"number\" id=\"inputMinPrice\" placeholder=\"от\" />\r\n                                </div>\r\n                                <div className=\"custom-control custom-checkbox col col-lg-3 col-sm-6 col-12 mt-5\">\r\n                                    <input type=\"checkbox\" onChange={this.checkHasDeliveryHandler.bind(this)} className=\"custom-control-input\" id=\"ck1\" />\r\n                                    <label className=\"custom-control-label\" checked={this.state.hasDelivery} htmlFor=\"ck1\">Доставка почтой</label>\r\n                                </div>\r\n                                <div className=\"col col-lg-3 col-sm-6 col-12 d-flex flex-column justify-space-between\">\r\n                                    <label htmlFor=\"photoInpCreate\">Добавить фото</label>\r\n                                    <input type=\"file\" name=\"file\" id=\"photoInpCreate\" onChange={this.inputPhotoHandler.bind(this)} />\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                    <div>\r\n                        {\r\n                            this.state.announcementRejectionCause ? <p className=\"inputWarning\">{this.state.announcementRejectionCause}</p> : null\r\n                        }\r\n                    </div>\r\n                    <div className=\"pl-3 pr-3\">\r\n                        <button type=\"button\" onClick={this.sendAnnouncementHandler} className=\"btn btn-primary btn-lg btn-block\">Отправить объявление</button>\r\n                    </div>\r\n                </div>\r\n            )\r\n        } else {\r\n            return <Loader />\r\n        }\r\n    }\r\n\r\n}\r\n\r\nexport default CreateAnnouncement;\r\n\r\n","import { connect } from 'react-redux';\r\nimport CreateAnnouncement from '../createAnnouncement';\r\nimport mapStateToProps from '../../store/mapStateToProps';\r\nimport mapDispatchToProps from '../../store/mapDispatchToProps';\r\n\r\nconst CREATE_ANNOUNCEMENT_W = connect(mapStateToProps(\"CreateAnnouncement\"), mapDispatchToProps(\"CreateAnnouncement\"))(CreateAnnouncement);\r\n\r\nexport default CREATE_ANNOUNCEMENT_W;\r\n","import React from 'react'\r\nimport Slider from './slider'\r\nimport Loader from './loader'\r\n\r\nclass FullAnnouncement extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            announcement: '',\r\n            avatar: ''\r\n        }\r\n    }\r\n\r\n    componentDidMount() {\r\n        this.props.onFindOneAnnouncement({ id: this.props.match.params.id })\r\n            .then(() =>  this.props.avatar.map(a => a.isMain ? this.setState({ avatar: a.photoLink }) : null))\r\n    }\r\n\r\n    render() {\r\n        if (this.props.announcement) {\r\n            return (\r\n                <div className=\"container p-lg-5 p-md-3 p-sm-1 p-1\">\r\n                    <div className=\"row\">\r\n                        <div className=\"col col-lg-8 col-md-12 col-sm-12 col-12\">\r\n                            <div className=\"card p-5\">\r\n                                <div className=\"mb-3 m-auto\">\r\n                                    {this.props.photo.length ? <Slider images={this.props.announcement.photo.map(a => a.photoLink)} /> :\r\n                                                 <img className=\"img-fluid\" src=\"/content/info/photo-default-slider.png\" alt=\"...\" />}\r\n                                </div>\r\n                                <div className=\"card-body\">\r\n                                    <h2>{this.props.announcement.announcementHeader}</h2>\r\n                                    <h4>{this.props.announcement.announcementPrice ? this.props.announcement.announcementPrice : \"Договорная\"}\r\n                                        {this.props.announcement.announcementPrice ? this.props.announcement.currency.currencySymbol : ''}</h4>\r\n                                    <p className=\"text-break\">{this.props.announcement.announcementText}</p>\r\n                                    <span className=\"d-flex justify-content-between flex-lg-row flex-md-row flex-sm-column flex-column\">\r\n                                        <h5>{this.props.area} {this.props.city}</h5>\r\n                                        <p className=\"bg-warning pl-2 pr-2 rounded\">{this.props.announcement.hasDelivery ? \"Возможна доставка почтой\" : \"Без доставки почтой\"}</p>\r\n                                    </span>\r\n                                </div>\r\n                                <div className=\"mb-3\">\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                        <div className=\"col col-lg-4\">\r\n                            <div className=\"card pt-5\">\r\n                                <img className=\"rounded-circle img-fluid objectFit border border-primary p-1 mx-auto\" style={{ width: \"150px\", height: \"150px\" }} src={this.state.avatar ?\r\n                                                             this.state.avatar : \"/content/info/without-photo.png\"} \r\n                                    alt={this.state.avatar ?\r\n                                                             this.state.avatar : \"/content/info/without-photo.png\"} />\r\n                                <div className=\"card-body\">\r\n                                    <div className=\"card-header\">\r\n                                        <h3>{this.props.userName}</h3>\r\n                                    </div>\r\n                                    <ul className=\"list-group list-group-flush\">\r\n                                        <li className=\"list-group-item\">Email</li>\r\n                                        <li className=\"list-group-item\"><a href={`mailto:${this.props.email}`}>{this.props.email}</a></li>\r\n                                        {this.props.phones.length ?<li className=\"list-group-item\">Teлефоны</li>:null}\r\n                                        {this.props.phones ? this.props.phones.map(a => <li className=\"list-group-item\" key={a.phone}>\r\n                                            <a href={`tel:${a.phone}`}>{a.phone}</a>\r\n                                        </li>) : null}\r\n                                        {this.props.uArea?<li className=\"list-group-item\">{this.props.uArea} {this.props.uCity}</li>:null}\r\n                                    </ul>\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            )\r\n        } else {\r\n            return <Loader />\r\n        }\r\n    }\r\n}\r\n\r\nexport default FullAnnouncement","import { connect } from 'react-redux';\r\nimport FullAnnouncement from '../fullAnnouncementDesc';\r\nimport mapStateToProps from '../../store/mapStateToProps';\r\nimport mapDispatchToProps from '../../store/mapDispatchToProps';\r\n\r\nconst FULL_ANNOUNCEMENT_W = connect(mapStateToProps(\"FullAnnouncement\"), mapDispatchToProps(\"FullAnnouncement\"))(FullAnnouncement);\r\n\r\nexport default FULL_ANNOUNCEMENT_W;\r\n","import React from 'react';\r\nimport Loader from './loader'\r\nimport PHOTO_GALLERY_W from './wrappers/photo_gallery_w'\r\n\r\nclass EditAnnouncement extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            currencies: [],\r\n            categories: [],\r\n            subCategories: [],\r\n            // -------------------------------\r\n            announcementHeader: '',\r\n            announcementPrice: '',\r\n            announcementText: '',\r\n            currencySymbol: \"\",\r\n            categoryId: '',\r\n            subCategoryId: '',\r\n            currencyId: '',\r\n            hasDelivery: false,\r\n            photo: '',\r\n            categoryName: '',\r\n            subCategoryName: '',\r\n            // -----------validators---\r\n            announcementRejectionCause: '',\r\n            headerInfo: '',\r\n            headerWarning: false,\r\n            descriptionInfo: '',\r\n            descriptionWarning: false,\r\n            priceInfo: '',\r\n            priceWarning: false,\r\n        }\r\n    }\r\n\r\n    componentDidMount() {\r\n        this.props.onAnnouncementForEdit({ id: this.props.match.params.id, token: this.props.token })\r\n            .then(() =>this.props.announcement ? this.setState({\r\n                announcementHeader: this.props.announcement.announcementHeader,\r\n                announcementPrice: this.props.announcement.announcementPrice,\r\n                announcementText: this.props.announcement.announcementText,\r\n                currencyId: this.props.announcement.currency.id,\r\n                currencySymbol: this.props.announcement.currency.currencySymbol,\r\n                photo: this.props.announcement.photo,\r\n                hasDelivery: this.props.announcement.hasDelivery,\r\n                categories: this.props.categories,\r\n                currencies: this.props.currencies,\r\n                categoryName: this.props.announcement.category.categoryName,\r\n                subCategoryName: this.props.announcement.subcategory.subCategoryName,\r\n                categoryId: this.props.announcement.category.id,\r\n                subCategoryId: this.props.announcement.subcategory.id,\r\n                subCategories: this.props.announcement.category.id ? this.props.categories.filter(a => a.id === this.props.announcement.category.id)[0].subcategories : []\r\n            }):null)\r\n            \r\n    }\r\n\r\n    componentDidUpdate(prevProps) {\r\n        if (prevProps.isChangeInPhoto !== this.props.isChangeInPhoto) {\r\n            this.props.onFindAnnouncementPhotos({ id: this.props.announcement.id })\r\n                .then(() => this.setState({ photo: this.props.updatedPhoto }))\r\n        } else if (prevProps.newPhoto !== this.props.newPhoto) {\r\n            this.props.onFindAnnouncementPhotos({ id: this.props.announcement.id })\r\n                .then(() => this.setState({ photo: this.props.updatedPhoto }))\r\n        } else if (prevProps.setMainPhoto !== this.props.setMainPhoto && this.props.setMainPhoto) {\r\n            console.log(\"prevProps.setMainPhoto !== this.props.setMainPhoto\", prevProps.setMainPhoto, this.props.setMainPhoto)\r\n            this.setState({ photo: this.props.setMainPhoto })\r\n        } else if (prevProps.responseOnEdit !== this.props.responseOnEdit && this.props.responseOnEdit) {\r\n            this.props.history.push(`/announcement-action-result/${this.props.responseOnEdit}`)\r\n        }\r\n\r\n    }\r\n\r\n    requestHeaderHandler = (e) => {\r\n        if (e.target.value.length && e.target.value.length <= 100) {\r\n            this.setState({\r\n                announcementHeader: e.target.value,\r\n                headerInfo: `Длина заголовка-${e.target.value.length} . Oсталось ${100 - e.target.value.length} символов.`,\r\n                headerWarning: false,\r\n            })\r\n\r\n        } else if (e.target.value.length > 100) {\r\n            this.setState({\r\n                headerInfo: `Длина заголовка-${e.target.value.length} максимальная длина 100 символов.`,\r\n                headerWarning: true,\r\n                announcementHeader: e.target.value,\r\n            })\r\n        } else {\r\n            this.setState({\r\n                announcementHeader: \"\",\r\n                headerInfo: \"\",\r\n                headerWarning: false,\r\n            })\r\n        }\r\n    }\r\n\r\n    inputDescriptionHandler = (e) => {\r\n        if (e.target.value.length && e.target.value.length <= 10000) {\r\n            this.setState({\r\n                announcementText: e.target.value,\r\n                descriptionInfo: `Длина описания-${e.target.value.length} . Oсталось ${10000 - e.target.value.length} символов.`,\r\n                descriptionWarning: false,\r\n            })\r\n\r\n        } else if (e.target.value.length > 10000) {\r\n            this.setState({\r\n                descriptionInfo: `Длина заголовка-${e.target.value.length} максимальная длина 100 символов.`,\r\n                descriptionWarning: true,\r\n                announcementText: e.target.value,\r\n            })\r\n        } else {\r\n            this.setState({\r\n                announcementText: \"\",\r\n                descriptionInfo: \"\",\r\n                descriptionWarning: false,\r\n            })\r\n        }\r\n    }\r\n\r\n    selectCategoryHandler = (e) => {\r\n        this.setState({categoryId:e.target.value, subCategoryId: '', subCategoryName: 'Выберите подкатегорию' })\r\n        this.state.categories.forEach(i => {\r\n            if (i.id === e.target.value) {\r\n                this.setState({ subCategories: i.subcategories })\r\n            }\r\n        })\r\n    }\r\n\r\n    selectSubCategoryHandler = (e) => {\r\n        if (e.target.value === \"\") {\r\n            this.setState({ subCategoryId: '' })\r\n        } else {\r\n            this.setState({ subCategoryId: e.target.value})\r\n        }\r\n    }\r\n\r\n    inputPriceHandler = (e) => {\r\n        if (e.target.value < 0) {\r\n            this.setState({\r\n                announcementPrice: e.target.value,\r\n                priceInfo: \"Цена не может быть отрицательной.\",\r\n                priceWarning: true,\r\n            })\r\n        } else if (e.target.value > 9999999.99) {\r\n            this.setState({\r\n                price: e.target.value,\r\n                priceInfo: \"Максимальная цена - 9999999.99\",\r\n                priceWarning: true,\r\n            })\r\n        } else {\r\n            this.setState({\r\n                announcementPrice: e.target.value,\r\n                priceInfo: \"\",\r\n                priceWarning: false,\r\n            })\r\n        }\r\n    }\r\n\r\n    selectCurrencyHandler = (e) => {\r\n        this.setState({currencyId:e.target.value})\r\n    }\r\n\r\n    inputPhotoHandler = async (e) => {\r\n        let photoName = \"/\" + await (await fetch('http://localhost:4000/upload/announcements', {\r\n            method: \"POST\",\r\n            body: e.target.files[0]\r\n        })).text()\r\n        this.props.onAddPhoto({\r\n            token: this.props.token,\r\n            announcementId: this.props.announcement.id,\r\n            photoLink: `/announcements${photoName}`\r\n        })\r\n    }\r\n\r\n    checkHasDeliveryHandler = (e) => {\r\n        this.setState({ hasDelivery: !this.state.hasDelivery })\r\n    }\r\n\r\n    roundToTwo(num) {    \r\n        return +(Math.floor(num + \"e+2\")  + \"e-2\");\r\n    }\r\n\r\n    sendAnnouncementHandler = () => {\r\n        let obj = {\r\n            body: {\r\n                id: this.props.announcement.id,\r\n                announcementHeader: this.state.announcementHeader,\r\n                announcementText: this.state.announcementText,\r\n                announcementPrice: this.roundToTwo(+this.state.announcementPrice),\r\n                hasDelivery: this.state.hasDelivery,\r\n                userId: this.props.userId,\r\n                currencyId: this.state.currencyId,\r\n                categoryId: this.state.categoryId,\r\n                subCategoryId: this.state.subCategoryId\r\n            },\r\n            token: this.props.token\r\n        }\r\n        if (obj.body.announcementHeader &&\r\n            obj.body.announcementText &&\r\n            obj.body.announcementPrice >= 0 &&\r\n            obj.body.categoryId &&\r\n            obj.body.subCategoryId&&\r\n            !this.state.descriptionWarning&&\r\n            !this.state.headerWarning &&\r\n            !this.state.priceWarning\r\n            ) {\r\n            this.props.onEditAnnouncement(obj)\r\n        } else {\r\n            this.setState({ announcementRejectionCause: \"Все поля со звездочкой должны быть заполнены.\" })\r\n        }\r\n\r\n    }\r\n\r\n    render() {\r\n        if (this.props.announcement && this.props.categories) {\r\n            return (\r\n                <div className=\"container mb-5 p-5 \">\r\n                    <div className=\"row mt-5\">\r\n                        <div className=\"col\">\r\n                            <div className=\"form-group pl-3 pr-3\">\r\n                                <label htmlFor=\"exampleInputEmail1\" className=\"necessaryInput\">Заголовок</label>\r\n                                <p className={this.state.headerWarning ? \"inputWarning\" : \"inputSucess \"}>{this.state.headerInfo}</p>\r\n                                <input onChange={this.requestHeaderHandler.bind(this)} value={this.state.announcementHeader} type=\"text\" className=\"form-control\" id=\"exampleInputEmail1\" aria-describedby=\"emailHelp\" />\r\n                            </div>\r\n                            <div className=\"form-group pl-3 pr-3\">\r\n                                <label htmlFor=\"exampleFormControlTextarea1\" className=\"necessaryInput\">Подробное описание объявления</label>\r\n                                <p className={this.state.descriptionWarning ? \"inputWarning\" : \"inputSucess \"}>{this.state.descriptionInfo}</p>\r\n                                <textarea onChange={this.inputDescriptionHandler.bind(this)} style={{ height: \"300px\", width: \"100%\" }} value={this.state.announcementText} className=\"form-control\" id=\"exampleFormControlTextarea1\" rows=\"3\"></textarea>\r\n                            </div>\r\n                            <div className=\"d-flex flex-wrap\" >\r\n                                <div className=\"col col-lg-6 col-sm-12 col-12\">\r\n                                    <label htmlFor=\"selectCategory\" className=\"necessaryInput\">Категория</label>\r\n                                    <select onChange={this.selectCategoryHandler.bind(this)} className=\"form-control\" id=\"selectCategory\">\r\n                                        <option value={this.state.categoryId}>{this.state.categoryName}</option>\r\n                                        {this.state.categories ? this.state.categories.map(a => a.categoryName !== this.state.categoryName ? <option key={a.id} value={a.id}>{a.categoryName}</option> : null) : null}\r\n                                    </select>\r\n                                </div>\r\n                                <div className=\"col col-lg-6 col-sm-12 col-12\">\r\n                                    <label htmlFor=\"selectSubcategory\" className=\"necessaryInput\">Подкатегория</label>\r\n                                    <select onChange={this.selectSubCategoryHandler.bind(this)} className=\"form-control\" id=\"selectSubcategory\">\r\n                                        <option value={this.state.subCategoryId}>{this.state.subCategoryName}</option>\r\n                                        {this.state.subCategories ? this.state.subCategories.map(a => a.subCategoryName !== this.state.subCategoryName ? <option key={a.id} value={a.id}>{a.subCategoryName}</option> : null) : null}\r\n\r\n                                    </select>\r\n                                </div>\r\n                            </div>\r\n                            {this.state.photo ? <PHOTO_GALLERY_W photo={this.state.photo} token={this.props.token} /> : null}\r\n                            <div className=\"d-flex mt-3 mb-3 flex-wrap\">\r\n                                <div className=\"col col-lg-3 col-sm-12 col-12\">\r\n                                    <label htmlFor=\"inputSelectCurrency\" id=\"inputMaxPrice\">Bалютa</label>\r\n                                    <select className=\"form-control\" onChange={this.selectCurrencyHandler.bind(this)} id=\"inputSelectCurrency\">\r\n                                        <option key={this.state.currencyId} value={this.state.currencyId}>{this.state.currencySymbol}</option>\r\n                                        {this.state.currencies ? this.state.currencies.map(a => a.currencySymbol !== this.state.currencySymbol ? <option key={a.id} value={a.id}>{a.currencySymbol}</option> : null) : null}\r\n                                    </select>\r\n                                </div>\r\n                                <div className=\"col col-lg-3 col-sm-12 col-12\">\r\n                                    <label htmlFor=\"price \" className={this.state.priceWarning ? \"inputWarning \" : \"necessaryInput\"}>{this.state.priceInfo ? this.state.priceInfo : \"Цена\"}</label>\r\n                                    <input className=\"form-control\" value={+this.state.announcementPrice} onChange={this.inputPriceHandler} min=\"0\" max=\"9999999999\" type=\"number\" id=\"inputMinPrice\" placeholder=\"от\" />\r\n                                </div>\r\n                                <div className=\"custom-control custom-checkbox col col-lg-3 col-sm-6 col-12 mt-5\">\r\n                                    <input type=\"checkbox\" checked={this.state.hasDelivery} onChange={this.checkHasDeliveryHandler.bind(this)} className=\"custom-control-input\" id=\"ck1\" />\r\n                                    <label className=\"custom-control-label\" htmlFor=\"ck1\">Доставка почтой</label>\r\n                                </div>\r\n                                <div className=\"col col-lg-3 col-sm-6 col-12 d-flex flex-column justify-space-between\">\r\n                                    <label htmlFor=\"photoInpEdit\">Добавить фото</label>\r\n                                    <input type=\"file\" name=\"file\" id=\"photoInpEdit\" onChange={this.inputPhotoHandler.bind(this)} />\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                    <div>\r\n                        {\r\n                            this.state.announcementRejectionCause ? <p className=\"inputWarning\">{this.state.announcementRejectionCause}</p> : null\r\n                        }\r\n                    </div>\r\n                    <div className=\"p-3\">\r\n                        <button type=\"button\" onClick={this.sendAnnouncementHandler} className=\"btn btn-primary btn-lg btn-block\">Сохранить объявление</button>\r\n                    </div>\r\n                </div>\r\n            )\r\n        } else {\r\n            return <Loader />\r\n        }\r\n    }\r\n\r\n}\r\n\r\nexport default EditAnnouncement;\r\n","import { connect } from 'react-redux';\r\nimport EditAnnouncement from '../editAnnouncement';\r\nimport mapStateToProps from '../../store/mapStateToProps';\r\nimport mapDispatchToProps from '../../store/mapDispatchToProps';\r\n\r\nconst EDIT_ANNOUNCEMENT_W = connect(mapStateToProps(\"EditAnnouncement\"), mapDispatchToProps(\"EditAnnouncement\"))(EditAnnouncement);\r\n\r\nexport default EDIT_ANNOUNCEMENT_W;","import React from 'react'\r\nimport { NavLink } from 'react-router-dom'\r\n\r\nclass AnnouncementActionResult extends React.Component {\r\n\r\n    render() {\r\n        return (\r\n            <div className=\"d-flex bg-white flex-column pt-5 min-vw-100 min-vh-100\">\r\n                <div className=\"d-flex bg-white flex-column mx-auto justify-content-around\" style={{ width: \"300px\", height: \"320px\" }}>\r\n                    <img src=\"/content/info/ok1.jpg\" alt=\"...\" className=\"mx-auto cardImg img-fluid\" />\r\n                    <NavLink to=\"/\" className=\"btn btn-outline-primary w-75 mb-3 mx-auto\">Перейти на главную</NavLink>\r\n                    <NavLink to=\"/create_announcement\" className=\"btn btn-outline-warning w-75 mb-3 mx-auto\">Подать объявление</NavLink>\r\n                    <NavLink to={`/full-announcement-description/${this.props.match.params.id}`} className=\"text-decoration-none\" >Просмотреть объявление</NavLink>\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default AnnouncementActionResult;","import React from 'react'\r\n\r\nclass WillBeDone extends React.Component {\r\n    render() {\r\n        return (\r\n            <div className=\"ms-auto min-vw-100 min-vh-100\">\r\n                <div className=\"p-5 w-100 d-flex justify-content-center\">\r\n                    <h3>Когда-нибудь здесь будет контент.</h3>\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default WillBeDone;","import React from 'react'\r\nimport MAIN_PAGE_W from './wrappers/main_page_w'\r\nimport {PrivateRoute} from '../helpers'\r\nimport REGISTRATON_W from './wrappers/registration_w'\r\nimport { Route, Switch} from 'react-router-dom'\r\nimport PROFILE_W from './wrappers/profile_w';\r\nimport FAVOURITE_W from './wrappers/favourite_w';\r\nimport NotFound from './not_found';\r\nimport LogIn_W from './wrappers/login_w';\r\nimport CREATE_ANNOUNCEMENT_W from './wrappers/createAnnouncement_w'\r\nimport FULL_ANNOUNCEMENT_W from './wrappers/full_announcement_desc_w'\r\nimport EDIT_ANNOUNCEMENT_W from './wrappers/edit_announcement_w'\r\nimport AnnouncementActionResult from './announcementActionResult'\r\nimport WillBeDone from './willBeDone'\r\n\r\n\r\nclass Main extends React.Component {\r\n    render() {\r\n        return (\r\n            <div className=\"flex-shrink-0 bg-light border-bottom mb-5\">\r\n                <Switch>\r\n                    <PrivateRoute path=\"/create_announcement\" component={CREATE_ANNOUNCEMENT_W} exact />\r\n                    <Route path=\"/login\" component={LogIn_W} exact/>\r\n                    <Route path=\"/registration\" component={REGISTRATON_W} exact />\r\n                    <PrivateRoute path=\"/favourite\" component={FAVOURITE_W} exact />\r\n                    <PrivateRoute path=\"/profile\" component={PROFILE_W}/>\r\n                    <PrivateRoute path=\"/edit-announcement/:id\" component={EDIT_ANNOUNCEMENT_W} exact/>\r\n                    <PrivateRoute path=\"/announcement-action-result/:id\" component={AnnouncementActionResult} exact/>\r\n                    <Route path=\"/full-announcement-description/:id\" component={FULL_ANNOUNCEMENT_W} exact/>\r\n                    <Route path=\"/advanced_search\" component={MAIN_PAGE_W} exact/>\r\n                    <Route path=\"/most-popular-requests\" component={WillBeDone} exact/>\r\n                    <Route path=\"/site-map\" component={WillBeDone} exact/>\r\n                    <Route path=\"/ukraine-map\" component={WillBeDone} exact/>\r\n                    <Route path=\"/how-to-buy-and-sell\" component={WillBeDone} exact/>\r\n                    <Route path=\"/help\" component={WillBeDone} exact/>\r\n                    <Route path=\"/\" component={MAIN_PAGE_W} exact/>\r\n                    <Route component={NotFound} />\r\n                </Switch>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default Main;\r\n\r\n\r\n\r\n\r\n","import { connect } from 'react-redux';\r\nimport Main from '../Main';\r\nimport mapStateToProps from '../../store/mapStateToProps';\r\nimport mapDispatchToProps from '../../store/mapDispatchToProps';\r\n\r\nconst MAIN_W = connect(mapStateToProps(\"Main\"), mapDispatchToProps(\"Main\"))(Main);\r\n\r\nexport default MAIN_W;\r\n","import React from 'react';\r\nimport { NavLink } from 'react-router-dom'\r\n\r\nclass Footer extends React.Component {\r\n\r\n    onClickLogoHandler = () => {\r\n        this.props.onSearch({\r\n            limit: 16,\r\n            offset: 0,\r\n            categoryId: '',\r\n            subCategoryId: '',\r\n            priceFrom: 0,\r\n            priceTo: 0,\r\n            currencyId: '',\r\n            sort: '',\r\n            hasDelivery: false,\r\n            hasPhoto: false,\r\n            findEverywhere: false,\r\n            requestText: '',\r\n            areaName: '',\r\n            areaId: '',\r\n            cityId: '',\r\n        })\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div className=\"container mb-5\">\r\n                <NavLink to=\"/\" onClick={this.onClickLogoHandler} className=\"mx-auto\" style={{ width: \"100px\", display: \"block\" }}>\r\n                    <img className=\"mb-4\" src=\"/images/logo.png\" alt=\"\" width=\"100\" />\r\n                </NavLink>\r\n                <div className=\"row\">\r\n                <div className=\"d-flex flex-column align-items-center col col-lg-6 col-md-6 col-sm-12 col-12\">\r\n                        <div className=\"d-flex flex-column align-items-start\">\r\n                            <a href=\"/most-popular-requests\" className=\"text-decoration-none\">Самые популярные запросы</a>\r\n                            <a href=\"/site-map\" className=\"text-decoration-none\">Карта сайта</a>\r\n                            <a href=\"/ukraine-map\" className=\"text-decoration-none\">Карта Украины</a>\r\n                            <a href=\"/how-to-buy-and-sell\" className=\"text-decoration-none\">Как продавать и покупать ?</a>\r\n                            <a href=\"/help\" className=\"text-decoration-none\">Помощь обратная связь</a>\r\n                        </div>\r\n                    </div>\r\n                    <div className=\"d-flex flex-column align-items-center col col-lg-6 col-md-6 col-sm-12 col-12\">\r\n                        <div className=\"d-flex flex-column align-items-start\">\r\n                            <h5 className=\"primary-color-for-text\">Контакты</h5>\r\n                            <a href=\"mailto:buyAndSale@gmail.com\" className=\"text-decoration-none\">buyAndSale@gmail.com</a>\r\n                            <a href=\"tel:+380991234567\" className=\"text-decoration-none\">+380991234567</a>\r\n                            <a href=\"tel:+380991234567\" className=\"text-decoration-none\">+380991234567</a>\r\n                            <a href=\"tel:+380501234567\" className=\"text-decoration-none\">+380501234567</a>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default Footer;","import { connect } from 'react-redux';\r\nimport Footer from '../Footer';\r\nimport mapStateToProps from '../../store/mapStateToProps';\r\nimport mapDispatchToProps from '../../store/mapDispatchToProps';\r\n\r\nconst FOOTER_W = connect(mapStateToProps(\"Footer\"), mapDispatchToProps(\"Footer\"))(Footer);\r\n\r\nexport default FOOTER_W;\r\n","import React from 'react';\r\nimport HEADER_W from './wrappers/header_w';\r\nimport MAIN_W from './wrappers/main_w';\r\nimport FOOTER_W from './wrappers/footer_w';\r\n\r\n\r\n\r\n\r\nclass Body extends React.Component {\r\n    render() {\r\n        \r\n        return (\r\n            <div>\r\n                <HEADER_W history={this.props.history} />\r\n                <MAIN_W />\r\n                <FOOTER_W history={this.props.history} />\r\n            </div>\r\n\r\n        )\r\n    }\r\n}\r\nexport default Body;","import React from 'react';\nimport './App.css';\nimport Body from './components/body'\nimport {Router} from 'react-router-dom'\nimport {createBrowserHistory} from \"history\";\n// import createHistory from \"history/createBrowserHistory\";\n\nconst history = createBrowserHistory()\n// const history = createHistory.createBrowserHistory();\n\nclass App extends React.Component {\n  render() {\n    return (\n      <Router history = {history}>\n        <Body history ={history}/>\n      </Router>\n    )\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport { Provider } from 'react-redux';\nimport store from './store/store';\n\n\nReactDOM.render(\n  // <React.StrictMode>\n    <Provider store={store}>\n      <App />\n    </Provider>,\n  // </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n\n\n"],"sourceRoot":""}