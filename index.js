
const express = require('express');
const app = express();
const cors = require('cors');
const bodyParser = require('body-parser');
const express_graphql = require('express-graphql');
const isAuth = require('./middleware/isAuth')
app.use(cors())
const {User} = require('./database/schema.js')
const fs = require('fs')
app.use(express.static('public'));
const schema = require('./graph_ql/schema.js');
const {root} = require('./graph_ql/resolvers.js');



app.post('/upload/:folder', (req, res) => {
    let fileName = Math.random().toString('36')
    fileName     = `${fileName}`
    let fileStream = fs.createWriteStream(`public/${req.params.folder}/` + fileName);

    req.pipe(fileStream)
    req.on('end', () =>{
        res.end(fileName)
    })
})




app.use(isAuth);

app.use('/graphql', express_graphql( (req, res) => ({ 
    schema: schema,
    rootValue: root,
    graphiql: true,
})));

app.listen(4000, console.log("Listen ### 4000"))








//-----------------------------------------likes


// ;(async()=>{
//     for(let i=0;i<140;i++){
//        let a =10+Math.round(Math.random()*22)
//        let b =1+Math.round(Math.random()*20)
//        let doLikeExists = await Noted_as_favourite.findAll({ where: { announcementId: a, userId: b } });
//     doLikeExists == false ? await Noted_as_favourite.create({ announcementId: a, userId: b }) : await Noted_as_favourite.destroy({ where: { announcementId: a, userId: b } })
//     }})()



//-------------------------------messages

// ;(async()=>{
//     for(let i=0;i<3000;i++){
//        let a =1+Math.round(Math.random()*20)
//        let b =1+Math.round(Math.random()*20)
//        a===b?a=a++:'';
//         await Message.create({text:`new msg: random = ${Math.random()}`,
//             inId: a,
//             outId: b
// })
//     }})()


    // ; (async () => {

    // //     //create userS

    // for(let a =0;a<300;a++){
    // let i = Math.random()*3
    //   let user = await User.create({ userEmail: "Vasya@mail.ru", userPassword: "qwerty" });
    //     i%2 ? await user.createPhoto({ photoLink: `http//www.my_BY&sale/public/photos/avatar/1qwws9383sdjd7d_${Math.random()}` }):'';
    //     let phone = await user.createPhone({ phone1: `+38067${i+4}09${i}0${i+2}${i}`, phone2: `+8050${i}8${i}4${i}0${i}`, phone3: `+38098${i+1}${i+3}${i}${i+4}${i+5}${i+2}${i+5}` })
    //     await user.update({ userName: "User ",isDisabled: false, userInfo: "String info sell or buy smth", userEmail: `&{Math.random()}.mail@email`,
    //         userPassword:`&{Math.random().toString('36')}` , areaId: 1+Math.random()*23,cityId: 1+Math.random()*11})
    // }   
    // })()


    // ; (async () => {
    //     for (let i = 0; i < 987; i++) {
    //         await Announcement.create({
    //             announcementHeader: "Buy19 smth" + i+Math.random().toString('36'),
    //             announcementText: "test 19test test test",
    //             announcementPrice: 1+Math.floor(Math.random() * 1001),
    //             userId: 1 + Math.floor(Math.random() * 299),
    //             areaId: 1+Math.random()*23,
    //             cityId: 1+Math.random()*11,
    //             currencyId: 1+Math.random()*2,
    //             categoryId: 1+Math.random()*10,
    //             subCategoryId: 1+Math.random()*5,
    //             isDisabled:false
    //         })
            
    //     //    i>0 && i%2? await Photo.create({ photoLink: "http//www.my_BY&sale/public/photos/avatar/1qwws9383sdjd7d",announcementId:i}):''
    //     }
    // })()

    // ; (async () => {
    //     for (let i = 3; i < 1987; i++) {
    //         let i =Math.round(Math.random()*299) 
    //         i % 2 ? i++:i
    //         let ann=await Announcement.findByPk(i)
    //         console.log(ann,'----------------',1+Math.round(Math.random()*299))
    //            await ann.createPhoto({ photoLink: "http//www.my_BY&sale/public/photos/avatar/1qwws9383sdjd7d"})
    //         }  
        
    // })()
//*********************************************************************************************************************** */
//*********************************************************************************************************************** */
//****************************************************   FIRST   STEP    ******************************************************************* */
//*********************************************************************************************************************** */
//*********************************************************************************************************************** */

// ;(async () => {
//     let currency2 =await Currency.create({ currencySymbol: "UAH" })
//     let currency1 =await Currency.create({currencySymbol: "USD" })
//     let currency =await Currency.create({currencySymbol: "EUR" })
   


//     let cat = ["Детский мир", "Недвижимость", "Транспорт", "Запчасти для транспорта",  "Работа",  "Животные",  "Дом и сад",  "Электроника",  "Бизнес и услуги",  "Мода и стиль", "Хобби, отдых и спорт",  "Отдам даром",  "Обмен"]
//     let subcats=[
//         ["Детская одежда","Детская обувь", "Детские коляски","Детские автокресла", "Детская мебель","Игрушки", "Детский транспорт", "Товары для кормления", "Товары для школьников", "Прочие детские товары", ],
//         ["Квартиры, комнаты","Дома","Земля", "Коммерческая недвижимость","Гаражи, парковки","Посуточная аренда жилья","Предложения от застройщиков", "Недвижимость за рубежом"],
//         ["Легковые автомобили","Автомобили из Польши", "Грузовые автомобили", "Автобусы", "Мото", "Спецтехника", "Сельхозтехника", "Водный транспорт", "Воздушный транспорт", "Прицепы / дома на колесах", "Другой транспорт", "Запчасти для транспорта", "Нерастаможенные автомобили","Электромобили" ],
//         ["Автозапчасти и аксессуары", "Шины, диски и колёса","Запчасти для спец / с.х. техники","Мотозапчасти и аксессуары"," Прочие запчасти","Транспорт"],
//         ["Розничная торговля / продажи / закупки", "Транспорт / логистика", "Строительство", "Телекоммуникации / связь", "Бары / рестораны", "Юриспруденция и бухгалтерия", "Управление персоналом / HR", "Охрана / безопасность", "Домашний персонал", "Красота / фитнес / спорт",   "Туризм / отдых / развлечения",   "Образование", "Культура / искусство",   "Медицина / фармация", "ИТ / телеком / компьютеры",  "Банки / финансы / страхование", "Недвижимость", "Маркетинг / реклама / дизайн",  "Производство / энергетика","Сельское хозяйство / агробизнес / лесное хозяйство",  "Cекретариат / АХО",  "Частичная занятость",  "Начало карьеры / Студенты",  "Сервис и быт", "Другие сферы занятий","Работа за рубежом"],
//         ["Бесплатно (животные и вязка)","Собаки","Кошки","Аквариумистика","Птицы","Грызуны", "Рептилии","Сельхоз животные","Другие животные","Зоотовары","Вязка", "Бюро находок"],
//         ["Канцтовары / расходные материалы", "Мебель", " Продукты питания / напитки", "Сад / огород", "Предметы интерьера", "Строительство / ремонт", "Инструменты", "Комнатные растения", "Посуда / кухонная утварь", "Садовый инвентарь", "Хозяйственный инвентарь / бытовая химия","Прочие товары для дома" ],
//         ["Телефоны и аксессуары","Компьютеры и комплектующие","Фото / видео","Тв / видеотехника", "Аудиотехника", " Игры и игровые приставки","Планшеты / эл. книги и аксессуары", "Ноутбуки и аксессуары", "Техника для дома", "Техника для кухни", "Климатическое оборудование", "Индивидуальный уход","Аксессуары и комплектующие", "Прочая электроника", "Ремонт и обслуживание техники" ],
//         ["Строительство / ремонт / уборка","Финансовые услуги / партнерство", " Перевозки / аренда транспорта", "Реклама / полиграфия / маркетинг / интернет", "Няни / сиделки","Сырьё / материалы","Красота / здоровье","Оборудование", "Образование / Спорт","Услуги для животных", "Продажа бизнеса","Развлечения / Искусство / Фото / Видео","Туризм / иммиграция", "Услуги переводчиков / набор текста","Авто / мото услуги","Ремонт и обслуживание техники","Сетевой маркетинг","Юридические услуги", "Прокат товаров","Прочие услуги"],
//         ["Одежда/обувь", "Для свадьбы"," Наручные часы", "Аксессуары","Подарки", "Красота / здоровье","Мода разное"],
//         ["Антиквариат / коллекции","Музыкальные инструменты","Спорт / отдых","Книги / журналы","CD / DVD / пластинки / кассеты","Билеты", "Поиск попутчиков","Поиск групп / музыкантов","Другое"],
//         ["Детские товары","Одежда","Обувь","Мебель","Животные","Электроника","Другое"],
//         ["Недвижимость", "Транспорт", "Запчасти для транспорта","Электроника","Мода и стиль","Другое"],
// ]   
// for(let i=0;i<cat.length;i++){
//     let category = await Category.create({ categoryName: cat[i] })
//     for(let y of subcats[i]){
//         let sub_category = await Sub_category.create({ subCategoryName: y,categoryId:category.id })
//     }
// }
// })()


// ;(async()=>{
//     let areas=["Винницкая область","Волынская область","Днепропетровская область","Донецкая область","Житомирская область", "Закарпатская область","Запорожская область","Ивано-Франковская область","Киевская область","Кировоградская область","Крым (АРК)","Луганская область","Львовская область","Николаевская область","Одесская область","Полтавская область","Ровенская область","Сумская область","Тернопольская область","Харьковская область","Херсонская область","Хмельницкая область","Черкасская область","Черниговская область", "Черновицкая область"]
//     let cities=[
//         ["Бар","Бершадь","Винница","Гайсин","Гнивань","Городок", "Жмеринка","Ильинцы","Казатин", "Калиновка","Крыжополь","Ладыжин", "Липовец", "Могилев-Подольский","Немиров","Песочин", "Погребище", "Стрижавка", "Тульчин", "Хмельник", "Чечельник", "Шаргород","Ямполь"],
//         ["Берестечко","Владимир-Волынский","Горохов","Иваничи","Камень-Каширский","Киверцы","Ковель","Луцк","Любешов","Любомль","Маневичи","Нововолынск","Ратно","Рожище","Старая Выжевка","Турийск","Устилуг","Цумань","Шацк"],
//         ["Апостолово","Верхнеднепровск","Вольногорск","Днепр","Желтые Воды","Каменское","Кривой Рог","Марганец","Никополь","Новомосковск","Орджоникидзе","Павлоград","Перещепино","Першотравенск","Подгородное","Пятихатки","Синельниково","Терновка","Чаплинка"],
//         ["Авдеевка","Александровка","Амвросиевка","Артемовск","Волноваха","Горловка","Дебальцево","Дзержинск","Димитров","Доброполье","Докучаевск","Донецк","Дружковка","Енакиево","Ждановка","Зугрэс","Кировское","Константиновка","Краматорск","Красноармейск","Красный Лиман","Майорск","Макеевка","Мариуполь","Марьинка","Новоазовск","Новогродовка","Селидово","Славянск","Снежное","Соледар","Старобешево","Торез","Угледар","Харцызск","Шахтерск","Ясиноватая"],
//         ["Андрушевка","Барановка","Бердичев","Володарск-Волынский","Емильчино","Житомир","Иршанск","Коростень","Коростышев","Малин","Новоград-Волынский","Овруч","Олевск","Попельня","Радомышль","Романов","Черняхов"],
//         ["Берегово","Буштына","Великий Бычков","Виноградов","Вышково","Дубовое","Иршава","Королево","Межгорье","Мукачево","Перечин","Рахов","Свалява","Солотвина","Тячев", "Ужгород","Хуст","Чоп"],
//         ["Акимовка","Беляевка","Бердянск","Васильевка","Веселое","Вольнянск","Гуляйполе","Днепрорудное","Запорожье","Каменка-Днепровская","Куйбышево","Кушугум","Мелитополь","Михайловка","Молочанск","Орехов","Пологи","Приморск","Розовка","Токмак","Энергодар"],
//         ["Богородчаны"," Болехов","Бурштын","Галич","Городенка","Делятин","Долина","Ивано-Франковск","Калуш","Коломыя", "Косов","Ланчин","Надворная","Перегинское", "Рогатин", "Снятын","Тлумач","Тысменица","Яремче"],
//         ["Барышевка","Белая Церковь","Березань","Богуслав","Борисполь","Бородянка","Боярка","Бровары","Буча","Васильков","Вишневое","Володарка","Вышгород","Глеваха","Гостомель","Иванков","Ирпень","Кагарлык","Киев","Коцюбинское","Макаров","Мироновка","Обухов","Переяслав-Хмельницкий","Припять","Ржищев","Рокитное","Сквира","Славутич","Тараща","Тетиев","Узин","Украинка","Фастов","Чернобыль","Яготин"],
//         ["Александрия","Бобринец","Власовка","Гайворон","Долинская","Знаменка","Кропивницкий","Малая Виска","Новая Прага","Новоархангельск","Новое","Новомиргород","Новоукраинка","Первомайск","Петрово","Помошная","Светловодск","Смолино"],
//         ["Алупка","Алушта","Армянск","Бахчисарай","Белогорск","Береговое","Джанкой","Евпатория","Инкерман","Керчь","Красногвардейское","Красноперекопск","Раздольное","Саки","Севастополь","Симферополь","Старый Крым","Судак","Феодосия","Черноморское","Щёлкино","Ялта"],
//         ["Александровск","Алмазная","Алчевск","Антрацит","Артемовск","Брянка","Вахрушево","Горное","Горское","Зимогорье","Золотое","Зоринск","Ирмино","Кировск","Краснодон","Краснопартизанск","Красный Луч","Кременная","Лисичанск","Луганск","Лутугино","Миусинск","Молодогвардейск","Новодружеск","Новопсков","Первомайск","Перевальск","Петровское","Попасная","Приволье","Ровеньки","Рубежное","Сватово","Свердловск","Северодонецк","Станица Луганская","Старобельск","Стаханов","Суходольск","Счастье","Червонопартизанск"],
//         ["Белз","Бобрка","Борислав","Броды","Буск","Великие Мосты","Винники","Глиняны","Городок","Добромиль","Дрогобыч","Дубляны","Жидачев","Жолква","Золочев","Каменка-Бугская","Львов","Мостиска","Николаев","Новояворовск","Новый Роздол","Перемышляны","Рава-Русская","Радехов","Рудки","Самбор","Сколе","Сокаль","Сосновка","Старый Самбор","Стебник","Стрый","Трускавец","Угнев","Хыров","Червоноград","Яворов"],
//         ["Александровка","Арбузинка","Баштанка","Березнеговатое","Братское","Веселиново","Вознесенск","Врадиевка","Доманевка","Еланец","Казанка","Кривое Озеро","Николаев","Новая Одесса","Новый Буг","Очаков","Первомайск","Снигиревка","Южноукраинск"],
//         ["Ананьев","Арциз","Балта","Белгород-Днестровский","Беляевка","Березовка","Болград","Великодолинское","Измаил","Килия","Кодыма","Котовск","Любашевка","Овидиополь","Одесса","Раздельная","Рени","Татарбунары","Теплодар","Черноморск","Ширяево","Южное"],
//         ["Гадяч","Глобино","Горишные Плавни","Градижск","Гребенка","Дергачи","Диканька","Зеньков","Карловка","Кобеляки","Котельва","Кременчуг","Лохвица","Лубны","Миргород","Новые Санжары","Пирятин","Полтава","Решетиловка","Хорол","Червонозаводское","Чутово"],
//         ["Березне","Вараш","Владимирец","Дубно","Дубровица","Заречное","Здолбунов","Квасилов","Клевань","Корец","Костополь","Млинов","Острог","Радивилов","Ровно","Рокитное","Сарны"],
//         ["Ахтырка","Белополье","Бурынь","Ворожба","Воронеж","Глухов","Дружба","Конотоп","Краснополье","Кролевец","Лебедин","Путивль","Ромны","Свесса","Середина-Буда","Сумы","Тростянец","Шостка"],
//         ["Бережаны","Борщев","Бучач","Великая Березовица","Гусятин","Залещики","Збараж","Зборов","Козова","Копычинцы","Кременец","Лановцы","Монастыриска","Подволочиск","Подгайцы","Почаев","Скалат","Теребовля","Тернополь","Хоростков","Чертков","Шумск"],
//         ["Балаклея","Барвенково","Богодухов","Валки","Великий Бурлук","Волчанск","Высокий","Дергачи","Змиев","Изюм","Комсомольское","Красноград","Купянск","Лозовая","Люботин","Мерефа","Новая Водолага","Первомайский","Солоницевка","Харьков","Чугуев"],
//         ["Антоновка","Белозерка","Берислав","Великая Александровка","Великая Лепетиха","Геническ", "Голая Пристань","Каланчак","Камышаны","Каховка","Новая Каховка","Новая Маячка","Новоалексеевка","Новотроицкое","Пойма","Скадовск","Таврийск","Херсон"],
//         ["Виньковцы","Волочиск","Деражня","Дунаевцы","Изяслав","Каменец-Подольский","Красилов","Летичев","Нетешин","Полонное","Понинка","Славута","Староконстантинов","Теофиполь","Хмельницкий","Шепетовка"],
//         ["Ватутино","Городище","Драбов","Жашков","Звенигородка","Золотоноша","Каменка","Канев","Корсунь-Шевченковский","Лысянка","Маньковка","Монастырище","Смела","Тальное","Умань","Христиновка","Черкассы","Чернобай","Чигирин","Шпола"],
//         ["Бахмач","Бобровица","Борзна","Городня","Десна","Ичня","Козелец","Корюковка","Мена","Нежин","Новгород-Северский","Носовка","Прилуки","Седнев","Семеновка","Чернигов","Щорс"],
//         ["Берегомет","Вашковцы","Вижница","Герца","Глыбокая","Заставна","Кельменцы","Кицмань","Красноильск","Новоднестровск","Новоселица","Путила","Сокиряны","Сторожинец","Хотин","Черновцы"]
//         ]

//         for(let i=0;i<areas.length;i++){
//             let area = await Area.create({ areaName: areas[i] })
//             for(let y of cities[i]){
//                 let city = await area.createCity({ cityName:y })
//             }
//         }
// })()

//   ======================================================SECOND


